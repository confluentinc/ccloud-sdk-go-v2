// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: api_graphqls_turbo_v1alpha1.go

package mock

import (
	context "context"
	net_http "net/http"
	sync "sync"

	github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1 "github.com/confluentinc/ccloud-sdk-go-v2-internal/turbo/v1alpha1"
)

// GraphqlsTurboV1alpha1Api is a mock of GraphqlsTurboV1alpha1Api interface
type GraphqlsTurboV1alpha1Api struct {
	lockQueryTurboV1alpha1Graphql sync.Mutex
	QueryTurboV1alpha1GraphqlFunc func(ctx context.Context) github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.ApiQueryTurboV1alpha1GraphqlRequest

	lockQueryTurboV1alpha1GraphqlExecute sync.Mutex
	QueryTurboV1alpha1GraphqlExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.ApiQueryTurboV1alpha1GraphqlRequest) (github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.TurboV1alpha1GraphqlReply, *net_http.Response, error)

	calls struct {
		QueryTurboV1alpha1Graphql []struct {
			Ctx context.Context
		}
		QueryTurboV1alpha1GraphqlExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.ApiQueryTurboV1alpha1GraphqlRequest
		}
	}
}

// QueryTurboV1alpha1Graphql mocks base method by wrapping the associated func.
func (m *GraphqlsTurboV1alpha1Api) QueryTurboV1alpha1Graphql(ctx context.Context) github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.ApiQueryTurboV1alpha1GraphqlRequest {
	m.lockQueryTurboV1alpha1Graphql.Lock()
	defer m.lockQueryTurboV1alpha1Graphql.Unlock()

	if m.QueryTurboV1alpha1GraphqlFunc == nil {
		panic("mocker: GraphqlsTurboV1alpha1Api.QueryTurboV1alpha1GraphqlFunc is nil but GraphqlsTurboV1alpha1Api.QueryTurboV1alpha1Graphql was called.")
	}

	call := struct {
		Ctx context.Context
	}{
		Ctx: ctx,
	}

	m.calls.QueryTurboV1alpha1Graphql = append(m.calls.QueryTurboV1alpha1Graphql, call)

	return m.QueryTurboV1alpha1GraphqlFunc(ctx)
}

// QueryTurboV1alpha1GraphqlCalled returns true if QueryTurboV1alpha1Graphql was called at least once.
func (m *GraphqlsTurboV1alpha1Api) QueryTurboV1alpha1GraphqlCalled() bool {
	m.lockQueryTurboV1alpha1Graphql.Lock()
	defer m.lockQueryTurboV1alpha1Graphql.Unlock()

	return len(m.calls.QueryTurboV1alpha1Graphql) > 0
}

// QueryTurboV1alpha1GraphqlCalls returns the calls made to QueryTurboV1alpha1Graphql.
func (m *GraphqlsTurboV1alpha1Api) QueryTurboV1alpha1GraphqlCalls() []struct {
	Ctx context.Context
} {
	m.lockQueryTurboV1alpha1Graphql.Lock()
	defer m.lockQueryTurboV1alpha1Graphql.Unlock()

	return m.calls.QueryTurboV1alpha1Graphql
}

// QueryTurboV1alpha1GraphqlExecute mocks base method by wrapping the associated func.
func (m *GraphqlsTurboV1alpha1Api) QueryTurboV1alpha1GraphqlExecute(r github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.ApiQueryTurboV1alpha1GraphqlRequest) (github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.TurboV1alpha1GraphqlReply, *net_http.Response, error) {
	m.lockQueryTurboV1alpha1GraphqlExecute.Lock()
	defer m.lockQueryTurboV1alpha1GraphqlExecute.Unlock()

	if m.QueryTurboV1alpha1GraphqlExecuteFunc == nil {
		panic("mocker: GraphqlsTurboV1alpha1Api.QueryTurboV1alpha1GraphqlExecuteFunc is nil but GraphqlsTurboV1alpha1Api.QueryTurboV1alpha1GraphqlExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.ApiQueryTurboV1alpha1GraphqlRequest
	}{
		R: r,
	}

	m.calls.QueryTurboV1alpha1GraphqlExecute = append(m.calls.QueryTurboV1alpha1GraphqlExecute, call)

	return m.QueryTurboV1alpha1GraphqlExecuteFunc(r)
}

// QueryTurboV1alpha1GraphqlExecuteCalled returns true if QueryTurboV1alpha1GraphqlExecute was called at least once.
func (m *GraphqlsTurboV1alpha1Api) QueryTurboV1alpha1GraphqlExecuteCalled() bool {
	m.lockQueryTurboV1alpha1GraphqlExecute.Lock()
	defer m.lockQueryTurboV1alpha1GraphqlExecute.Unlock()

	return len(m.calls.QueryTurboV1alpha1GraphqlExecute) > 0
}

// QueryTurboV1alpha1GraphqlExecuteCalls returns the calls made to QueryTurboV1alpha1GraphqlExecute.
func (m *GraphqlsTurboV1alpha1Api) QueryTurboV1alpha1GraphqlExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_internal_turbo_v1alpha1.ApiQueryTurboV1alpha1GraphqlRequest
} {
	m.lockQueryTurboV1alpha1GraphqlExecute.Lock()
	defer m.lockQueryTurboV1alpha1GraphqlExecute.Unlock()

	return m.calls.QueryTurboV1alpha1GraphqlExecute
}

// Reset resets the calls made to the mocked methods.
func (m *GraphqlsTurboV1alpha1Api) Reset() {
	m.lockQueryTurboV1alpha1Graphql.Lock()
	m.calls.QueryTurboV1alpha1Graphql = nil
	m.lockQueryTurboV1alpha1Graphql.Unlock()
	m.lockQueryTurboV1alpha1GraphqlExecute.Lock()
	m.calls.QueryTurboV1alpha1GraphqlExecute = nil
	m.lockQueryTurboV1alpha1GraphqlExecute.Unlock()
}
