// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Network API

Network Gateway API

API version: 0.0.1-alpha1
Contact: cire-traffic@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// NetworkingV1AwsEgressPrivateLinkGatewaySpec AWS Egress Private Link Gateway details from AWS.
type NetworkingV1AwsEgressPrivateLinkGatewaySpec struct {
	// AWS Egress Private Link Gateway Spec kind type.
	Kind string `json:"kind,omitempty"`
	// AWS region of the Egress Private Link Gateway.
	Region string `json:"region,omitempty"`
}

// NewNetworkingV1AwsEgressPrivateLinkGatewaySpec instantiates a new NetworkingV1AwsEgressPrivateLinkGatewaySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingV1AwsEgressPrivateLinkGatewaySpec(kind string, region string) *NetworkingV1AwsEgressPrivateLinkGatewaySpec {
	this := NetworkingV1AwsEgressPrivateLinkGatewaySpec{}
	this.Kind = kind
	this.Region = region
	return &this
}

// NewNetworkingV1AwsEgressPrivateLinkGatewaySpecWithDefaults instantiates a new NetworkingV1AwsEgressPrivateLinkGatewaySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingV1AwsEgressPrivateLinkGatewaySpecWithDefaults() *NetworkingV1AwsEgressPrivateLinkGatewaySpec {
	this := NetworkingV1AwsEgressPrivateLinkGatewaySpec{}
	return &this
}

// GetKind returns the Kind field value
func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) SetKind(v string) {
	o.Kind = v
}

// GetRegion returns the Region field value
func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) SetRegion(v string) {
	o.Region = v
}

// Redact resets all sensitive fields to their zero value.
func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) Redact() {
	o.recurseRedact(&o.Kind)
	o.recurseRedact(&o.Region)
}

func (o *NetworkingV1AwsEgressPrivateLinkGatewaySpec) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o NetworkingV1AwsEgressPrivateLinkGatewaySpec) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o NetworkingV1AwsEgressPrivateLinkGatewaySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["region"] = o.Region
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec struct {
	value *NetworkingV1AwsEgressPrivateLinkGatewaySpec
	isSet bool
}

func (v NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec) Get() *NetworkingV1AwsEgressPrivateLinkGatewaySpec {
	return v.value
}

func (v *NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec) Set(val *NetworkingV1AwsEgressPrivateLinkGatewaySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingV1AwsEgressPrivateLinkGatewaySpec(val *NetworkingV1AwsEgressPrivateLinkGatewaySpec) *NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec {
	return &NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec{value: val, isSet: true}
}

func (v NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullableNetworkingV1AwsEgressPrivateLinkGatewaySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
