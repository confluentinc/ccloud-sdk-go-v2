openapi: 3.0.0
info:
  contact:
    email: data-governance@confluent.io
    name: Data Governance Team
    url: https://confluent.slack.com/app_redirect?channel=data-governance-eng
  description: |
    # Introduction
  title: Access Request Management APIs
  version: 0.1.0
  x-api-id: 18a83e80-0d61-48ad-880a-c6ab8374a893
  x-api-group: arm/v1
  x-audience: company-internal
  x-tag-group: Access Request Management API (%s)
servers:
- description: Confluent Cloud production
  url: https://api.confluent.cloud
- description: Confluent Cloud staging
  url: https://api.stag.cpdev.cloud
- description: Confluent Cloud development
  url: https://api.devel.cpdev.cloud
tags:
- description: |-
    `AccessRequest` object contains details of the request (access, message, metadata) that you initiate


    ## The Access Requests Model
    <SchemaDefinition schemaRef="#/components/schemas/arm.v1.AccessRequest" />
  name: Access Requests (arm/v1)
paths:
  /arm/v1/access-requests:
    get:
      description: Retrieve a sorted, filtered, paginated list of all access requests.
      operationId: listArmV1AccessRequests
      parameters:
      - description: Filter the results by exact match for status.
        example: Pending
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for resource.
        example: crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic
        explode: true
        in: query
        name: resource
        required: false
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Include requests initiated by current user only
        explode: true
        in: query
        name: self_initiated_only
        required: false
        schema:
          $ref: '#/components/schemas/BooleanFilter'
        style: form
      - description: Include requests that current user can operate on only
        explode: true
        in: query
        name: can_act_on_only
        required: false
        schema:
          $ref: '#/components/schemas/BooleanFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/arm.v1.AccessRequestList'
          description: Access Request.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: List of Access Requests
      tags:
      - Access Requests (arm/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/arm/v1/access-requests?status=Pending&resource=crn%3A%2F%2Fconfluent.cloud%2Forganization%3D92fe5f20-f7c2-4a1b-8f62-b1aab73c915c%2Fenvironment%3Denv-mx05q%2Fcloud-cluster%3Dlkc-111aaa%2Fkafka%3Dlkc-111aaa%2Ftopic%3DmyTopic&self_initiated_only=SOME_BOOLEAN_VALUE&can_act_on_only=SOME_BOOLEAN_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/arm/v1/access-requests?status=Pending&resource=crn%3A%2F%2Fconfluent.cloud%2Forganization%3D92fe5f20-f7c2-4a1b-8f62-b1aab73c915c%2Fenvironment%3Denv-mx05q%2Fcloud-cluster%3Dlkc-111aaa%2Fkafka%3Dlkc-111aaa%2Ftopic%3DmyTopic&self_initiated_only=SOME_BOOLEAN_VALUE&can_act_on_only=SOME_BOOLEAN_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/arm/v1/access-requests?status=Pending&resource=crn%3A%2F%2Fconfluent.cloud%2Forganization%3D92fe5f20-f7c2-4a1b-8f62-b1aab73c915c%2Fenvironment%3Denv-mx05q%2Fcloud-cluster%3Dlkc-111aaa%2Fkafka%3Dlkc-111aaa%2Ftopic%3DmyTopic&self_initiated_only=SOME_BOOLEAN_VALUE&can_act_on_only=SOME_BOOLEAN_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/arm/v1/access-requests?status=Pending&resource=crn%3A%2F%2Fconfluent.cloud%2Forganization%3D92fe5f20-f7c2-4a1b-8f62-b1aab73c915c%2Fenvironment%3Denv-mx05q%2Fcloud-cluster%3Dlkc-111aaa%2Fkafka%3Dlkc-111aaa%2Ftopic%3DmyTopic&self_initiated_only=SOME_BOOLEAN_VALUE&can_act_on_only=SOME_BOOLEAN_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/arm/v1/access-requests?status=Pending&resource=crn%3A%2F%2Fconfluent.cloud%2Forganization%3D92fe5f20-f7c2-4a1b-8f62-b1aab73c915c%2Fenvironment%3Denv-mx05q%2Fcloud-cluster%3Dlkc-111aaa%2Fkafka%3Dlkc-111aaa%2Ftopic%3DmyTopic&self_initiated_only=SOME_BOOLEAN_VALUE&can_act_on_only=SOME_BOOLEAN_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/arm/v1/access-requests?status=Pending&resource=crn%3A%2F%2Fconfluent.cloud%2Forganization%3D92fe5f20-f7c2-4a1b-8f62-b1aab73c915c%2Fenvironment%3Denv-mx05q%2Fcloud-cluster%3Dlkc-111aaa%2Fkafka%3Dlkc-111aaa%2Ftopic%3DmyTopic&self_initiated_only=SOME_BOOLEAN_VALUE&can_act_on_only=SOME_BOOLEAN_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/arm/v1/access-requests?status=Pending&resource=crn%3A%2F%2Fconfluent.cloud%2Forganization%3D92fe5f20-f7c2-4a1b-8f62-b1aab73c915c%2Fenvironment%3Denv-mx05q%2Fcloud-cluster%3Dlkc-111aaa%2Fkafka%3Dlkc-111aaa%2Ftopic%3DmyTopic&self_initiated_only=SOME_BOOLEAN_VALUE&can_act_on_only=SOME_BOOLEAN_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    patch:
      description: Approve or reject access requests
      operationId: updateArmV1AccessRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/arm.v1.UpdateAccessRequestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Update operations finished
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: Act on access requests
      tags:
      - Access Requests (arm/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PATCH \
            --url https://api.confluent.cloud/arm/v1/access-requests \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"access_requests":[{"op":"string","id":"string"}]}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"access_requests\":[{\"op\":\"string\",\"id\":\"string\"}]}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/arm/v1/access-requests")
            .patch(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/arm/v1/access-requests\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"access_requests\\\":[{\\\"op\\\
          \":\\\"string\\\",\\\"id\\\":\\\"string\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"\
          PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\"\
          )\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\
          \tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody,\
          \ _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\
          \n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"access_requests\":[{\"op\":\"string\",\"id\":\"string\"}]}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PATCH", "/arm/v1/access-requests", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/arm/v1/access-requests",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({access_requests: [{op: 'string', id: 'string'}]}));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/arm/v1/access-requests");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"access_requests\":[{\"op\":\"string\",\"id\":\"string\"}]}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/arm/v1/access-requests");
          var request = new RestRequest(Method.PATCH);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"access_requests\":[{\"op\":\"string\",\"id\":\"string\"}]}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    post:
      description: Make a request to create an access request.
      operationId: createArmV1AccessRequest
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/arm.v1.AccessRequest'
              - required:
                - accesses
                type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/arm.v1.AccessRequest'
                - required:
                  - accesses
                  type: object
          description: An Access Request was created.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Location:
              description: AccessRequest resource uri
              explode: false
              schema:
                example: https://api.confluent.cloud/arm/v1/access-requests/{id}
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: Create an Access Request
      tags:
      - Access Requests (arm/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.confluent.cloud/arm/v1/access-requests \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"accesses":[{"crn":"crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic","roles":["DeveloperRead"]}],"message":"string"}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"accesses\":[{\"crn\":\"crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic\",\"roles\":[\"DeveloperRead\"]}],\"message\":\"string\"}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/arm/v1/access-requests")
            .post(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/arm/v1/access-requests\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"accesses\\\":[{\\\"crn\\\":\\\"\
          crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic\\\
          \",\\\"roles\\\":[\\\"DeveloperRead\\\"]}],\\\"message\\\":\\\"string\\\"\
          }\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"\
          content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\"\
          , \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"accesses\":[{\"crn\":\"crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic\",\"roles\":[\"DeveloperRead\"]}],\"message\":\"string\"}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("POST", "/arm/v1/access-requests", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/arm/v1/access-requests",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            accesses: [
              {
                crn: 'crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic',
                roles: ['DeveloperRead']
              }
            ],
            message: 'string'
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/arm/v1/access-requests");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"accesses\":[{\"crn\":\"crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic\",\"roles\":[\"DeveloperRead\"]}],\"message\":\"string\"}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/arm/v1/access-requests");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"accesses\":[{\"crn\":\"crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic\",\"roles\":[\"DeveloperRead\"]}],\"message\":\"string\"}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
components:
  responses:
    BadRequestError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "400"
              code: invalid_filter
              title: Invalid Filter
              detail: The 'delorean' resource can't be filtered by 'num_doors'
              source:
                parameter: num_doors
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    UnauthenticatedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "401"
              code: user_unauthenticated
              title: Authentication Required
              detail: Valid authentication credentials must be provided
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request lacks valid authentication credentials for this resource.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        WWW-Authenticate:
          description: The unique identifier for the API request.
          example: Basic error="invalid_key", error_description="The API Key is invalid"
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Unauthorized
    OverQuotaError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "402"
              code: quota_exceeded
              title: Kafka Clusters Per Org Quota Exceeded
              detail: 'The request would exceed the quota: kafka_clusters_per_environment'
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request would exceed one or more quotas.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Over Quota
    UnauthorizedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "403"
              code: user_unauthorized
              title: User Access Unauthorized
              detail: The user 'mcfly' is not allowed to access the 'delorean' resource
                without the 'plutonium' role.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The access credentials were considered insufficient to grant access
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Forbidden
    ConflictError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "409"
              code: resource_already_exists
              title: Resource Already exists
              detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                exists.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request is in conflict with the current server state
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        Location:
          description: Resource URI of conflicting resource
          explode: false
          schema:
            example: https://api.confluent.cloud/{object}/{id}
            format: uri
            type: string
          style: simple
      x-summary: Conflict
    NotFoundError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "404"
              title: Not Found
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    ValidationError:
      content:
        application/json:
          example:
            errors:
            - status: "422"
              code: invalid_configuration
              id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              title: Validation Failed
              detail: 'The property ''/cluster/storage_size'' of type string did not
                match the following type: integer'
              source:
                pointer: /cluster/storage_size
          schema:
            $ref: '#/components/schemas/Failure'
      description: Validation Failed
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        X-RateLimit-Limit:
          description: The maximum number of requests you're permitted to make per
            time period.
          explode: false
          schema:
            type: integer
          style: simple
        X-RateLimit-Remaining:
          description: The number of requests remaining in the current rate limit
            window.
          explode: false
          schema:
            type: integer
          style: simple
        X-RateLimit-Reset:
          description: "The relative time in seconds until the current rate-limit\
            \ window resets.  \n  \n**Important:** This differs from Github and Twitter's\
            \ same-named header which uses UTC epoch seconds. We use relative time\
            \ to avoid client/server time synchronization issues."
          explode: false
          schema:
            type: integer
          style: simple
        Retry-After:
          description: The number of seconds to wait until the rate limit window resets.
            Only sent when the rate limit is reached.
          explode: false
          schema:
            type: integer
          style: simple
    DefaultSystemError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "500"
              code: out_of_gas
              title: DeLorean Out Of Gas
              detail: The DeLorean has run out of gas, but Doc Brown will fill 'er
                up for you asap
          schema:
            $ref: '#/components/schemas/Failure'
      description: Oops, something went wrong!
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    arm.v1.AccessRequest:
      description: |-
        `AccessRequest` object contains details of the request (access, message, metadata) that you initiate


        ## The Access Requests Model
        <SchemaDefinition schemaRef="#/components/schemas/arm.v1.AccessRequest" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - arm/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - AccessRequest
          readOnly: true
          type: string
        id:
          description: The resource id
          example: u-j93dy8
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/arm/v1/access-requests/ar-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/access-request=ar-12345
        accesses:
          description: The desire accesses, can only support requesting 1 topic.
          items:
            $ref: '#/components/schemas/arm.v1.Access'
          type: array
          x-immutable: true
        requester:
          allOf:
          - $ref: '#/components/schemas/arm.v1.Requester'
          description: The user who initiate this request
          readOnly: true
        status:
          description: The status of the request
          example: PENDING
          readOnly: true
          type: string
          x-extensible-enum:
          - PENDING
          - APPROVED
          - REJECTED
        message:
          description: Optional message attached with the request
          maxLength: 300
          type: string
          x-immutable: true
        created_at:
          description: The date and time at which this request is created
          example: 2023-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        expires_at:
          description: The date and time at which this request will expire if not
            approved or rejected
          example: 2023-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
      type: object
    arm.v1.Access:
      description: |
        `Access` objects include a resource and the roles that the requester is requesting
      properties:
        crn:
          description: The requesting resource crn
          example: crn://confluent.cloud/organization=92fe5f20-f7c2-4a1b-8f62-b1aab73c915c/environment=env-mx05q/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=myTopic
          pattern: ^crn://.+$
          type: string
        roles:
          description: List of desire roles for the resource
          items:
            description: A RBAC role
            example: DeveloperRead
            type: string
            x-extensible-enum:
            - DeveloperRead
            - DeveloperWrite
          minItems: 1
          type: array
      required:
      - crn
      - roles
      type: object
    arm.v1.Requester:
      description: |
        `Requester` objects contains user info who initiates request
      properties:
        id:
          description: The resource id
          example: u-j93dy8
          maxLength: 255
          type: string
        email:
          description: The user email
          format: email
          type: string
        full_name:
          description: The user full name
          type: string
      type: object
    arm.v1.UpdateAccessRequestRequest:
      description: API request object for updating access request
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - arm/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - UpdateAccessRequestRequest
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/arm/v1/update-access-request-requests/uarr-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/update-access-request-request=uarr-12345
        access_requests:
          description: List of access requests
          items:
            $ref: '#/components/schemas/arm.v1.AccessRequestUpdateOperation'
          minItems: 1
          type: array
      type: object
    arm.v1.AccessRequestUpdateOperation:
      description: Operation details for updating an access request
      properties:
        op:
          description: The operation
          type: string
          x-extensible-enum:
          - APPROVE
          - REJECT
        id:
          description: The access request resource id
          maxLength: 255
          type: string
      required:
      - id
      - op
      type: object
    arm.v1.UpdateAccessRequestResponse:
      description: Update result
      example:
        metadata: ""
        kind: UpdateAccessRequestResponse
        access_request: ""
        id: dlz-f3a90de
        api_version: arm/v1
        error: ""
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - arm/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - UpdateAccessRequestResponse
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/arm/v1/update-access-request-responses/uarr-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/update-access-request-response=uarr-12345
        access_request:
          allOf:
          - $ref: '#/components/schemas/arm.v1.AccessRequest'
          description: The updated AccessRequest
        error:
          allOf:
          - $ref: '#/components/schemas/arm.v1.Error'
          description: The optional error if the operation fails
      type: object
    arm.v1.Error:
      description: Error details
      properties:
        error_code:
          description: The error code
          format: int32
          readOnly: true
          type: integer
        error_message:
          description: The error message
          readOnly: true
          type: string
      type: object
    SearchFilter:
      description: Filter a collection by a string search
      type: string
    BooleanFilter:
      description: Filter for whether this value is true or false.
      type: boolean
    arm.v1.AccessRequestList:
      description: |-
        `AccessRequest` object contains details of the request (access, message, metadata) that you initiate


        ## The Access Requests Model
        <SchemaDefinition schemaRef="#/components/schemas/arm.v1.AccessRequest" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - arm/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - AccessRequestList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/arm/v1/access-requests
              last:
                example: https://api.confluent.cloud/arm/v1/access-requests?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/arm/v1/access-requests?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/arm/v1/access-requests?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/arm.v1.AccessRequest'
            - required:
              - accesses
              - id
              - metadata
              - requester
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    ObjectMeta:
      description: ObjectMeta is metadata that all persisted resources must have,
        which includes all objects users must create.
      properties:
        self:
          description: Self is a Uniform Resource Locator (URL) at which an object
            can be addressed. This URL encodes the service location, API version,
            and other particulars necessary to locate the resource at a point in time
          example: https://api.confluent.cloud/v2/kafka-clusters/lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        resource_name:
          description: Resource Name is a Uniform Resource Identifier (URI) that is
            globally unique across space and time. It is represented as a Confluent
            Resource Name
          example: crn://confluent.cloud/kafka=lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        created_at:
          description: The date and time at which this object was created. It is represented
            in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: The date and time at which this object was last updated. It
            is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        deleted_at:
          description: The date and time at which this object was (or will be) deleted.
            It is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
      readOnly: true
      required:
      - self
    ListMeta:
      description: ListMeta describes metadata that resource collections may have
      properties:
        first:
          description: A link to the first page of results. If a response does not
            contain a first link, then direct navigation to the first page is not
            supported.
          example: https://api.confluent.cloud/v2/resourcekinds
          format: uri
          nullable: true
          type: string
        last:
          description: A link to the last page of results. If a response does not
            contain a last link, then direct navigation to the last page is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=bcAOehAY8F16YD84Z1wT
          format: uri
          nullable: true
          type: string
        prev:
          description: A link to the previous page of results. If a response does
            not contain a prev link, then either there is no previous data or backwards
            traversal through the result set is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=YIXRY97wWYmwzrax4dld
          format: uri
          nullable: true
          type: string
        next:
          description: A link to the next page of results. If a response does not
            contain a next link, then there is no more data available.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=UvmDWOB1iwfAIBPj6EYb
          format: uri
          nullable: true
          type: string
        total_size:
          description: Number of records in the full result set. This response may
            be paginated and have a smaller number of records.
          example: 123
          format: int32
          minimum: 0
          type: integer
      type: object
    ObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        environment:
          description: Environment of the referred resource, if env-scoped
          maxLength: 255
          minLength: 1
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
        api_version:
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
          type: string
        kind:
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    Failure:
      description: Provides information about problems encountered while performing
        an operation.
      properties:
        errors:
          description: List of errors which caused this operation to fail
          items:
            $ref: '#/components/schemas/Error'
          type: array
          uniqueItems: true
      required:
      - errors
      type: object
    Error:
      description: Describes a particular error encountered while performing an operation.
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          maxLength: 255
          type: string
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          type: string
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        title:
          description: A short, human-readable summary of the problem. It **SHOULD
            NOT** change from occurrence to occurrence of the problem, except for
            purposes of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        source:
          $ref: '#/components/schemas/Error_source'
      type: object
    inline_response_200:
      example:
        access_requests:
        - metadata: ""
          kind: UpdateAccessRequestResponse
          access_request: ""
          id: dlz-f3a90de
          api_version: arm/v1
          error: ""
        - metadata: ""
          kind: UpdateAccessRequestResponse
          access_request: ""
          id: dlz-f3a90de
          api_version: arm/v1
          error: ""
      properties:
        access_requests:
          items:
            $ref: '#/components/schemas/arm.v1.UpdateAccessRequestResponse'
          type: array
      type: object
    Error_source:
      description: If this error was caused by a particular part of the API request,
        the source will point to the query string parameter or request body property
        that caused it.
      properties:
        pointer:
          description: A JSON Pointer [RFC6901] to the associated entity in the request
            document [e.g. "/spec" for a spec object, or "/spec/title" for a specific
            field].
          type: string
        parameter:
          description: A string indicating which query parameter caused the error.
          type: string
      type: object
  securitySchemes:
    cloud-api-key:
      description: Authenticate with Cloud API Keys using HTTP Basic Auth. Treat the
        Cloud API Key ID as the username and Cloud API Key Secret as the password.
      scheme: basic
      type: http
