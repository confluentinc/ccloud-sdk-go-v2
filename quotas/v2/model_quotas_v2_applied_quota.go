/*
 * Quotas Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1-alpha0
 * Contact: api-framework-team@confluent.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// QuotasV2AppliedQuota A `quota` object represent a specific quotas config for confluent cloud resources.
type QuotasV2AppliedQuota struct {
	// APIVersion defines the schema version of this representation of a resource.
	ApiVersion *string `json:"api_version,omitempty"`
	// Kind defines the object this REST resource represents.
	Kind *string `json:"kind,omitempty"`
	// ID is the \"natural identifier\" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted (\"time\"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace (\"space\").
	Id *string `json:"id,omitempty"`
	Metadata *ObjectMeta `json:"metadata,omitempty"`
	// The applied scope that this quota belongs to.
	Scope *string `json:"scope,omitempty"`
	// A human-readable name for the quota type name.
	DisplayName *string `json:"display_name,omitempty"`
	// The latest applied service quota value, taking into account any limit adjustments. 
	AppliedLimit *int32 `json:"applied_limit,omitempty"`
	// The user to which this belongs.
	User *ObjectReference `json:"user,omitempty"`
	// A unique organization id to associate a specific organization to this quota.
	Organization *ObjectReference `json:"organization,omitempty"`
	// A unique environment id to associate a specific environment to this quota. 
	Environment *ObjectReference `json:"environment,omitempty"`
	// A unique cluster id to associate a specific cluster to this quota. 
	Cluster *ObjectReference `json:"cluster,omitempty"`
}

// NewQuotasV2AppliedQuota instantiates a new QuotasV2AppliedQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotasV2AppliedQuota() *QuotasV2AppliedQuota {
	this := QuotasV2AppliedQuota{}
	return &this
}

// NewQuotasV2AppliedQuotaWithDefaults instantiates a new QuotasV2AppliedQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotasV2AppliedQuotaWithDefaults() *QuotasV2AppliedQuota {
	this := QuotasV2AppliedQuota{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *QuotasV2AppliedQuota) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *QuotasV2AppliedQuota) SetKind(v string) {
	o.Kind = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QuotasV2AppliedQuota) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetMetadata() ObjectMeta {
	if o == nil || o.Metadata == nil {
		var ret ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetMetadataOk() (*ObjectMeta, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ObjectMeta and assigns it to the Metadata field.
func (o *QuotasV2AppliedQuota) SetMetadata(v ObjectMeta) {
	o.Metadata = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *QuotasV2AppliedQuota) SetScope(v string) {
	o.Scope = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *QuotasV2AppliedQuota) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAppliedLimit returns the AppliedLimit field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetAppliedLimit() int32 {
	if o == nil || o.AppliedLimit == nil {
		var ret int32
		return ret
	}
	return *o.AppliedLimit
}

// GetAppliedLimitOk returns a tuple with the AppliedLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetAppliedLimitOk() (*int32, bool) {
	if o == nil || o.AppliedLimit == nil {
		return nil, false
	}
	return o.AppliedLimit, true
}

// HasAppliedLimit returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasAppliedLimit() bool {
	if o != nil && o.AppliedLimit != nil {
		return true
	}

	return false
}

// SetAppliedLimit gets a reference to the given int32 and assigns it to the AppliedLimit field.
func (o *QuotasV2AppliedQuota) SetAppliedLimit(v int32) {
	o.AppliedLimit = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetUser() ObjectReference {
	if o == nil || o.User == nil {
		var ret ObjectReference
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetUserOk() (*ObjectReference, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given ObjectReference and assigns it to the User field.
func (o *QuotasV2AppliedQuota) SetUser(v ObjectReference) {
	o.User = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetOrganization() ObjectReference {
	if o == nil || o.Organization == nil {
		var ret ObjectReference
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetOrganizationOk() (*ObjectReference, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given ObjectReference and assigns it to the Organization field.
func (o *QuotasV2AppliedQuota) SetOrganization(v ObjectReference) {
	o.Organization = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetEnvironment() ObjectReference {
	if o == nil || o.Environment == nil {
		var ret ObjectReference
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetEnvironmentOk() (*ObjectReference, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectReference and assigns it to the Environment field.
func (o *QuotasV2AppliedQuota) SetEnvironment(v ObjectReference) {
	o.Environment = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *QuotasV2AppliedQuota) GetCluster() ObjectReference {
	if o == nil || o.Cluster == nil {
		var ret ObjectReference
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotasV2AppliedQuota) GetClusterOk() (*ObjectReference, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *QuotasV2AppliedQuota) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ObjectReference and assigns it to the Cluster field.
func (o *QuotasV2AppliedQuota) SetCluster(v ObjectReference) {
	o.Cluster = &v
}

func (o QuotasV2AppliedQuota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api_version"] = o.ApiVersion
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.AppliedLimit != nil {
		toSerialize["applied_limit"] = o.AppliedLimit
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	return json.Marshal(toSerialize)
}

type NullableQuotasV2AppliedQuota struct {
	value *QuotasV2AppliedQuota
	isSet bool
}

func (v NullableQuotasV2AppliedQuota) Get() *QuotasV2AppliedQuota {
	return v.value
}

func (v *NullableQuotasV2AppliedQuota) Set(val *QuotasV2AppliedQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotasV2AppliedQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotasV2AppliedQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotasV2AppliedQuota(val *QuotasV2AppliedQuota) *NullableQuotasV2AppliedQuota {
	return &NullableQuotasV2AppliedQuota{value: val, isSet: true}
}

func (v NullableQuotasV2AppliedQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotasV2AppliedQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


