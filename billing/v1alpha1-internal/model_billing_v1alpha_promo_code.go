// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Billing API

Confluent Cloud Billing API 

API version: 0.0.1-alpha0
Contact: monetization-eng@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

import (
	"reflect"
)

// BillingV1alphaPromoCode `PromoCode` objects represent a promo code and details of the claim for that code. 
type BillingV1alphaPromoCode struct {
	// The promotional code.
	Code *string `json:"code,omitempty"`
	// Total value of promo code in dollars.
	Amount *float64 `json:"amount,omitempty"`
	// The promo code's claim details.
	Claim *BillingV1alphaPromoCodeClaim `json:"claim,omitempty"`
}

// NewBillingV1alphaPromoCode instantiates a new BillingV1alphaPromoCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingV1alphaPromoCode() *BillingV1alphaPromoCode {
	this := BillingV1alphaPromoCode{}
	return &this
}

// NewBillingV1alphaPromoCodeWithDefaults instantiates a new BillingV1alphaPromoCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingV1alphaPromoCodeWithDefaults() *BillingV1alphaPromoCode {
	this := BillingV1alphaPromoCode{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *BillingV1alphaPromoCode) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingV1alphaPromoCode) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *BillingV1alphaPromoCode) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *BillingV1alphaPromoCode) SetCode(v string) {
	o.Code = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *BillingV1alphaPromoCode) GetAmount() float64 {
	if o == nil || o.Amount == nil {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingV1alphaPromoCode) GetAmountOk() (*float64, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *BillingV1alphaPromoCode) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *BillingV1alphaPromoCode) SetAmount(v float64) {
	o.Amount = &v
}

// GetClaim returns the Claim field value if set, zero value otherwise.
func (o *BillingV1alphaPromoCode) GetClaim() BillingV1alphaPromoCodeClaim {
	if o == nil || o.Claim == nil {
		var ret BillingV1alphaPromoCodeClaim
		return ret
	}
	return *o.Claim
}

// GetClaimOk returns a tuple with the Claim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingV1alphaPromoCode) GetClaimOk() (*BillingV1alphaPromoCodeClaim, bool) {
	if o == nil || o.Claim == nil {
		return nil, false
	}
	return o.Claim, true
}

// HasClaim returns a boolean if a field has been set.
func (o *BillingV1alphaPromoCode) HasClaim() bool {
	if o != nil && o.Claim != nil {
		return true
	}

	return false
}

// SetClaim gets a reference to the given BillingV1alphaPromoCodeClaim and assigns it to the Claim field.
func (o *BillingV1alphaPromoCode) SetClaim(v BillingV1alphaPromoCodeClaim) {
	o.Claim = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *BillingV1alphaPromoCode) Redact() {
    o.recurseRedact(o.Code)
    o.recurseRedact(o.Amount)
    o.recurseRedact(o.Claim)
}

func (o *BillingV1alphaPromoCode) recurseRedact(v interface{}) {
    type redactor interface {
        Redact()
    }
    if r, ok := v.(redactor); ok {
        r.Redact()
    } else {
        val := reflect.ValueOf(v)
        if val.Kind() == reflect.Ptr {
            val = val.Elem()
        }
        switch val.Kind() {
        case reflect.Slice, reflect.Array:
            for i := 0; i < val.Len(); i++ {
                // support data types declared without pointers
                o.recurseRedact(val.Index(i).Interface())
                // ... and data types that were declared without but need pointers (for Redact)
                if val.Index(i).CanAddr() {
                    o.recurseRedact(val.Index(i).Addr().Interface())
                }
            }
        }
    }
}

func (o BillingV1alphaPromoCode) zeroField(v interface{}) {
    p := reflect.ValueOf(v).Elem()
    p.Set(reflect.Zero(p.Type()))
}

func (o BillingV1alphaPromoCode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Claim != nil {
		toSerialize["claim"] = o.Claim
	}
	return json.Marshal(toSerialize)
}

type NullableBillingV1alphaPromoCode struct {
	value *BillingV1alphaPromoCode
	isSet bool
}

func (v NullableBillingV1alphaPromoCode) Get() *BillingV1alphaPromoCode {
	return v.value
}

func (v *NullableBillingV1alphaPromoCode) Set(val *BillingV1alphaPromoCode) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingV1alphaPromoCode) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingV1alphaPromoCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingV1alphaPromoCode(val *BillingV1alphaPromoCode) *NullableBillingV1alphaPromoCode {
	return &NullableBillingV1alphaPromoCode{value: val, isSet: true}
}

func (v NullableBillingV1alphaPromoCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingV1alphaPromoCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


