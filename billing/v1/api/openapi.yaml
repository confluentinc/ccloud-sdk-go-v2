openapi: 3.0.0
info:
  contact:
    email: monetization-eng@confluent.io
    name: Monetization Team
    url: https://confluent.slack.com/app_redirect?channel=billing-eng
  description: |
    Confluent Cloud Billing API
  title: Billing API
  version: 0.0.1-alpha0
  x-api-id: 21c65edb-5671-44b4-a916-4e29d71b32fe
  x-api-group: billing/v1
  x-audience: external-public
  x-tag-group: Billing API (%s)
servers:
- description: Confluent Cloud production
  url: https://api.confluent.cloud
tags:
- description: |-
    [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

    `Cost` objects represent the aggregated billing costs for an organization


    ## The Costs Model
    <SchemaDefinition schemaRef="#/components/schemas/billing.v1.Cost" />
  name: Costs (billing/v1)
paths:
  /billing/v1/costs:
    get:
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all costs.
      operationId: listBillingV1Costs
      parameters:
      - description: Filter the results by exact match for start_date.
        example: 2022-10-12
        explode: true
        in: query
        name: start_date
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for end_date.
        example: 2022-10-15
        explode: true
        in: query
        name: end_date
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 5000
          maximum: 10000
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/billing.v1.CostList'
          description: Cost.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: List of Costs
      tags:
      - Costs (billing/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/billing/v1/costs?start_date=2022-10-12&end_date=2022-10-15' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/billing/v1/costs?start_date=2022-10-12&end_date=2022-10-15")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/billing/v1/costs?start_date=2022-10-12&end_date=2022-10-15\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/billing/v1/costs?start_date=2022-10-12&end_date=2022-10-15", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/billing/v1/costs?start_date=2022-10-12&end_date=2022-10-15",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/billing/v1/costs?start_date=2022-10-12&end_date=2022-10-15");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/billing/v1/costs?start_date=2022-10-12&end_date=2022-10-15");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
components:
  responses:
    BadRequestError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "400"
              code: invalid_filter
              title: Invalid Filter
              detail: The 'delorean' resource can't be filtered by 'num_doors'
              source:
                parameter: num_doors
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    UnauthenticatedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "401"
              code: user_unauthenticated
              title: Authentication Required
              detail: Valid authentication credentials must be provided
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request lacks valid authentication credentials for this resource.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        WWW-Authenticate:
          description: The unique identifier for the API request.
          example: Basic error="invalid_key", error_description="The API Key is invalid"
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Unauthorized
    OverQuotaError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "402"
              code: quota_exceeded
              title: Kafka Clusters Per Org Quota Exceeded
              detail: 'The request would exceed the quota: kafka_clusters_per_environment'
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request would exceed one or more quotas.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Over Quota
    UnauthorizedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "403"
              code: user_unauthorized
              title: User Access Unauthorized
              detail: The user 'mcfly' is not allowed to access the 'delorean' resource
                without the 'plutonium' role.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The access credentials were considered insufficient to grant access
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Forbidden
    ConflictError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "409"
              code: resource_already_exists
              title: Resource Already exists
              detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                exists.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request is in conflict with the current server state
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        Location:
          description: Resource URI of conflicting resource
          explode: false
          schema:
            example: https://api.confluent.cloud/{object}/{id}
            format: uri
            type: string
          style: simple
      x-summary: Conflict
    NotFoundError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "404"
              title: Not Found
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    ValidationError:
      content:
        application/json:
          example:
            errors:
            - status: "422"
              code: invalid_configuration
              id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              title: Validation Failed
              detail: 'The property ''/cluster/storage_size'' of type string did not
                match the following type: integer'
              source:
                pointer: /cluster/storage_size
          schema:
            $ref: '#/components/schemas/Failure'
      description: Validation Failed
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    DefaultSystemError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "500"
              code: out_of_gas
              title: DeLorean Out Of Gas
              detail: The DeLorean has run out of gas, but Doc Brown will fill 'er
                up for you asap
          schema:
            $ref: '#/components/schemas/Failure'
      description: Oops, something went wrong!
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    billing.v1.Cost:
      description: |-
        `Cost` objects represent the aggregated billing costs for an organization


        ## The Costs Model
        <SchemaDefinition schemaRef="#/components/schemas/billing.v1.Cost" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - billing/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - Cost
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        start_date:
          description: Start date of time period (inclusive) to retrieve billing costs.
            It is represented in RFC3339 format and is in UTC.
          example: 2022-10-12
          format: date
          type: string
        end_date:
          description: End date of time period (exclusive) to retrieve billing costs.
            It is represented in RFC3339 format and is in UTC.
          example: 2022-10-15
          format: date
          type: string
        granularity:
          default: DAILY
          description: Granularity at which each line item is aggregated.
          type: string
          x-extensible-enum:
          - DAILY
        network_access_type:
          description: Network access type for the cluster.
          example: INTERNET
          type: string
          x-extensible-enum:
          - INTERNET
          - TRANSIT_GATEWAY
          - PRIVATE_LINK
          - PEERED_VPC
        product:
          description: Product name.
          example: KAFKA
          type: string
          x-extensible-enum:
          - KAFKA
          - CONNECT
          - KSQL
          - AUDIT_LOG
          - STREAM_GOVERNANCE
          - CLUSTER_LINK
          - SUPPORT_CLOUD_BASIC
          - SUPPORT_CLOUD_DEVELOPER
          - SUPPORT_CLOUD_BUSINESS
          - SUPPORT_CLOUD_PREMIER
        line_type:
          description: Type of the line item.
          example: KAFKA_NUM_CKUS
          type: string
          x-extensible-enum:
          - KAFKA_STORAGE
          - KAFKA_PARTITION
          - KAFKA_NETWORK_READ
          - KAFKA_NETWORK_WRITE
          - KAFKA_BASE
          - KAFKA_NUM_CKUS
          - KAFKA_REST_PRODUCE
          - KSQL_NUM_CSUS
          - CONNECT_CAPACITY
          - CONNECT_NUM_TASKS
          - CONNECT_THROUGHPUT
          - CONNECT_NUM_RECORDS
          - SUPPORT
          - CLUSTER_LINKING_PER_LINK
          - CLUSTER_LINKING_WRITE
          - CLUSTER_LINKING_READ
          - AUDIT_LOG_READ
          - GOVERNANCE_BASE
          - SCHEMA_REGISTRY
          - PROMO_CREDIT
        price:
          description: Price for the line item in dollars.
          example: 1.5
          format: double
          type: number
        unit:
          description: Unit of the line item.
          example: GB
          type: string
        quantity:
          description: Quantity of the line item.
          example: 99.95
          format: double
          type: number
        original_amount:
          description: Original amount accrued for this line item.
          example: 99.95
          format: double
          type: number
        discount_amount:
          description: Amount discounted from the original amount in dollars.
          example: 20.95
          format: double
          type: number
        amount:
          description: Final amount after deducting discounts.
          example: 79.0
          format: double
          type: number
        resource:
          allOf:
          - $ref: '#/components/schemas/billing.v1.Resource'
          description: The resource for a given object
      type: object
    billing.v1.Resource:
      description: |
        The resource associated with this object. The resource can be one of Kafka Cluster ID (example: lkc-12345),
        Connector ID (example:
            lcc-12345), Schema Registry Cluster ID (example: lsrc-12345), or ksqlDB Cluster ID
        (example: lksqlc-12345).
        May be null or omitted if not associated with a resource.
      properties:
        id:
          description: ID of the resource.
          example: lkc-12345
          type: string
        display_name:
          description: Display name of the resource.
          example: prod-kafka-cluster
          type: string
        environment:
          allOf:
          - $ref: '#/components/schemas/billing.v1.Environment'
          description: The environment associated with this resource
          nullable: true
      type: object
    billing.v1.Environment:
      description: |
        The details of the environment for a given resource.
      properties:
        id:
          description: ID of the environment.
          example: env-123
          type: string
      type: object
    SearchFilter:
      description: Filter a collection by a string search
      type: string
    billing.v1.CostList:
      description: |-
        `Cost` objects represent the aggregated billing costs for an organization


        ## The Costs Model
        <SchemaDefinition schemaRef="#/components/schemas/billing.v1.Cost" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - billing/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - CostList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/billing/v1/costs
              last:
                example: https://api.confluent.cloud/billing/v1/costs?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/billing/v1/costs?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/billing/v1/costs?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/billing.v1.Cost'
            - required:
              - end_date
              - id
              - original_amount
              - start_date
              - unit
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    ObjectMeta:
      description: ObjectMeta is metadata that all persisted resources must have,
        which includes all objects users must create.
      properties:
        self:
          description: Self is a Uniform Resource Locator (URL) at which an object
            can be addressed. This URL encodes the service location, API version,
            and other particulars necessary to locate the resource at a point in time
          example: https://api.confluent.cloud/v2/kafka-clusters/lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        resource_name:
          description: Resource Name is a Uniform Resource Identifier (URI) that is
            globally unique across space and time. It is represented as a Confluent
            Resource Name
          example: crn://confluent.cloud/kafka=lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        created_at:
          description: The date and time at which this object was created. It is represented
            in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: The date and time at which this object was last updated. It
            is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        deleted_at:
          description: The date and time at which this object was (or will be) deleted.
            It is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
      readOnly: true
      required:
      - self
    ListMeta:
      description: ListMeta describes metadata that resource collections may have
      properties:
        first:
          description: A link to the first page of results. If a response does not
            contain a first link, then direct navigation to the first page is not
            supported.
          example: https://api.confluent.cloud/v2/resourcekinds
          format: uri
          nullable: true
          type: string
        last:
          description: A link to the last page of results. If a response does not
            contain a last link, then direct navigation to the last page is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=bcAOehAY8F16YD84Z1wT
          format: uri
          nullable: true
          type: string
        prev:
          description: A link to the previous page of results. If a response does
            not contain a prev link, then either there is no previous data or backwards
            traversal through the result set is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=YIXRY97wWYmwzrax4dld
          format: uri
          nullable: true
          type: string
        next:
          description: A link to the next page of results. If a response does not
            contain a next link, then there is no more data available.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=UvmDWOB1iwfAIBPj6EYb
          format: uri
          nullable: true
          type: string
        total_size:
          description: Number of records in the full result set. This response may
            be paginated and have a smaller number of records.
          example: 123
          format: int32
          minimum: 0
          type: integer
      type: object
    ObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        environment:
          description: Environment of the referred resource, if env-scoped
          maxLength: 255
          minLength: 1
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
        api_version:
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
          type: string
        kind:
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    Failure:
      description: Provides information about problems encountered while performing
        an operation.
      properties:
        errors:
          description: List of errors which caused this operation to fail
          items:
            $ref: '#/components/schemas/Error'
          type: array
          uniqueItems: true
      required:
      - errors
      type: object
    Error:
      description: Describes a particular error encountered while performing an operation.
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          maxLength: 255
          type: string
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          type: string
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        title:
          description: A short, human-readable summary of the problem. It **SHOULD
            NOT** change from occurrence to occurrence of the problem, except for
            purposes of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        source:
          $ref: '#/components/schemas/Error_source'
      type: object
    Error_source:
      description: If this error was caused by a particular part of the API request,
        the source will point to the query string parameter or request body property
        that caused it.
      properties:
        pointer:
          description: A JSON Pointer [RFC6901] to the associated entity in the request
            document [e.g. "/spec" for a spec object, or "/spec/title" for a specific
            field].
          type: string
        parameter:
          description: A string indicating which query parameter caused the error.
          type: string
      type: object
  securitySchemes:
    api-key:
      description: Authenticate with API Keys using HTTP Basic Auth. Treat the API
        Key ID as the username and API Key Secret as the password.
      scheme: basic
      type: http
