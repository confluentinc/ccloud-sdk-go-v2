// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Billing API

Confluent Cloud Billing API 

API version: 0.0.1-alpha0
Contact: monetization-eng@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha

import (
	"encoding/json"
)

// BillingV1alphaProfile `Profile` objects represent the billing profile to your organization. 
type BillingV1alphaProfile struct {
	// The organization's billing email address.
	Email *string `json:"email,omitempty"`
	// The organization's tax information.
	Tax *BillingV1alphaTax `json:"tax,omitempty"`
}

// NewBillingV1alphaProfile instantiates a new BillingV1alphaProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingV1alphaProfile() *BillingV1alphaProfile {
	this := BillingV1alphaProfile{}
	return &this
}

// NewBillingV1alphaProfileWithDefaults instantiates a new BillingV1alphaProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingV1alphaProfileWithDefaults() *BillingV1alphaProfile {
	this := BillingV1alphaProfile{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BillingV1alphaProfile) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingV1alphaProfile) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BillingV1alphaProfile) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BillingV1alphaProfile) SetEmail(v string) {
	o.Email = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *BillingV1alphaProfile) GetTax() BillingV1alphaTax {
	if o == nil || o.Tax == nil {
		var ret BillingV1alphaTax
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingV1alphaProfile) GetTaxOk() (*BillingV1alphaTax, bool) {
	if o == nil || o.Tax == nil {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *BillingV1alphaProfile) HasTax() bool {
	if o != nil && o.Tax != nil {
		return true
	}

	return false
}

// SetTax gets a reference to the given BillingV1alphaTax and assigns it to the Tax field.
func (o *BillingV1alphaProfile) SetTax(v BillingV1alphaTax) {
	o.Tax = &v
}

func (o BillingV1alphaProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Tax != nil {
		toSerialize["tax"] = o.Tax
	}
	return json.Marshal(toSerialize)
}

type NullableBillingV1alphaProfile struct {
	value *BillingV1alphaProfile
	isSet bool
}

func (v NullableBillingV1alphaProfile) Get() *BillingV1alphaProfile {
	return v.value
}

func (v *NullableBillingV1alphaProfile) Set(val *BillingV1alphaProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingV1alphaProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingV1alphaProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingV1alphaProfile(val *BillingV1alphaProfile) *NullableBillingV1alphaProfile {
	return &NullableBillingV1alphaProfile{value: val, isSet: true}
}

func (v NullableBillingV1alphaProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingV1alphaProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


