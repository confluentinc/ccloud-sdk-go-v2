/*
Apache Iceberg REST Catalog API

Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the MetadataLog type satisfies the MappedNullable interface at compile time
var _ ArrayMappedNullable = &MetadataLog{}

// MetadataLog struct for MetadataLog
type MetadataLog struct {
	Items []MetadataLogInner
}

// NewMetadataLog instantiates a new MetadataLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataLog() *MetadataLog {
	this := MetadataLog{}
	return &this
}

// NewMetadataLogWithDefaults instantiates a new MetadataLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataLogWithDefaults() *MetadataLog {
	this := MetadataLog{}
	return &this
}

func (o MetadataLog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataLog) ToMap() ([]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *MetadataLog) UnmarshalJSON(data []byte) (err error) {
	return json.Unmarshal(data, &o.Items)
}

type NullableMetadataLog struct {
	value MetadataLog
	isSet bool
}

func (v NullableMetadataLog) Get() MetadataLog {
	return v.value
}

func (v *NullableMetadataLog) Set(val MetadataLog) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataLog) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataLog) Unset() {
	//v.value = nil
	v.isSet = false
}

func NewNullableMetadataLog(val MetadataLog) *NullableMetadataLog {
	return &NullableMetadataLog{value: val, isSet: true}
}

func (v NullableMetadataLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
