// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Network API

Network API

API version: 0.0.1-alpha1
Contact: cire-traffic@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// NetworkingV1AwsEgressPrivateLinkEndpointStatus Status of an AWS PrivateLink Endpoint.
type NetworkingV1AwsEgressPrivateLinkEndpointStatus struct {
	// AwsEgressPrivateLinkEndpointStatus kind.
	Kind *string `json:"kind,omitempty"`
	// Id of a VPC Endpoint (if any) that is connected to the VPC Endpoint service.
	VpcEndpointId string `json:"vpc_endpoint_id,omitempty"`
}

// NewNetworkingV1AwsEgressPrivateLinkEndpointStatus instantiates a new NetworkingV1AwsEgressPrivateLinkEndpointStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingV1AwsEgressPrivateLinkEndpointStatus(vpcEndpointId string) *NetworkingV1AwsEgressPrivateLinkEndpointStatus {
	this := NetworkingV1AwsEgressPrivateLinkEndpointStatus{}
	this.VpcEndpointId = vpcEndpointId
	return &this
}

// NewNetworkingV1AwsEgressPrivateLinkEndpointStatusWithDefaults instantiates a new NetworkingV1AwsEgressPrivateLinkEndpointStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingV1AwsEgressPrivateLinkEndpointStatusWithDefaults() *NetworkingV1AwsEgressPrivateLinkEndpointStatus {
	this := NetworkingV1AwsEgressPrivateLinkEndpointStatus{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) SetKind(v string) {
	o.Kind = &v
}

// GetVpcEndpointId returns the VpcEndpointId field value
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) GetVpcEndpointId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcEndpointId
}

// GetVpcEndpointIdOk returns a tuple with the VpcEndpointId field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) GetVpcEndpointIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcEndpointId, true
}

// SetVpcEndpointId sets field value
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) SetVpcEndpointId(v string) {
	o.VpcEndpointId = v
}

// Redact resets all sensitive fields to their zero value.
func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) Redact() {
	o.recurseRedact(o.Kind)
	o.recurseRedact(&o.VpcEndpointId)
}

func (o *NetworkingV1AwsEgressPrivateLinkEndpointStatus) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o NetworkingV1AwsEgressPrivateLinkEndpointStatus) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o NetworkingV1AwsEgressPrivateLinkEndpointStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["vpc_endpoint_id"] = o.VpcEndpointId
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus struct {
	value *NetworkingV1AwsEgressPrivateLinkEndpointStatus
	isSet bool
}

func (v NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus) Get() *NetworkingV1AwsEgressPrivateLinkEndpointStatus {
	return v.value
}

func (v *NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus) Set(val *NetworkingV1AwsEgressPrivateLinkEndpointStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingV1AwsEgressPrivateLinkEndpointStatus(val *NetworkingV1AwsEgressPrivateLinkEndpointStatus) *NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus {
	return &NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus{value: val, isSet: true}
}

func (v NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullableNetworkingV1AwsEgressPrivateLinkEndpointStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
