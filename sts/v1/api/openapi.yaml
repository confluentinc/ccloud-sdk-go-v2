openapi: 3.0.0
info:
  contact:
    email: paas-team@confluent.io
    name: CDMUM Team
    url: https://confluent.slack.com/app_redirect?channel=cdmum-eng
  title: Security Token Service API
  version: 0.0.1-alpha0
  x-api-id: 8f7e497b-8ee2-424b-ad71-daf28b47a4c1
  x-api-group: sts/v1
  x-audience: external-public
  x-tag-group: Security Token Service (%s)
servers:
- description: Confluent Cloud production
  url: https://api.confluent.cloud
- description: Confluent Cloud staging
  url: https://api.stag.cpdev.cloud
- description: Confluent Cloud development
  url: https://api.devel.cpdev.cloud
tags:
- description: |
    [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

    OAuth Token is a [JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519) that enables the use of
    external identities to access Confluent Cloud APIs
  name: OAuth Tokens (sts/v1)
paths:
  /sts/v1/oauth2/token:
    post:
      description: |
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Use this operation to exchange an access token (JWT) issued by an external identity provider for
        an access token (JWT) issued by Confluent.This enables the use of external identities
        to access Confluent Cloud APIs.
      operationId: exchangeStsV1OauthToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
              - $ref: '#/components/schemas/sts.v1.TokenExchangeRequest'
              - required:
                - grant_type
                - identity_pool_id
                - requested_token_type
                - subject_token
                - subject_token_type
                type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sts.v1.TokenExchangeReply'
          description: |
            access token used to access public control plane api
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      summary: Exchange an OAuth Token
      tags:
      - OAuth Tokens (sts/v1)
      x-name: sts.v1.OauthToken
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.confluent.cloud/sts/v1/oauth2/token \
            --header 'content-type: application/x-www-form-urlencoded' \
            --data grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Atoken-exchange \
            --data subject_token=test_jwt_token \
            --data identity_pool_id=pool_1 \
            --data subject_token_type=urn%3Aietf%3Aparams%3Aoauth%3Atoken-type%3Ajwt \
            --data requested_token_type=urn%3Aietf%3Aparams%3Aoauth%3Atoken-type%3Aaccess_token \
            --data expires_in=900
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
          RequestBody body = RequestBody.create(mediaType, "grant_type=urn%253Aietf%253Aparams%253Aoauth%253Agrant-type%253Atoken-exchange&subject_token=test_jwt_token&identity_pool_id=pool_1&subject_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Ajwt&requested_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Aaccess_token&expires_in=900");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/sts/v1/oauth2/token")
            .post(body)
            .addHeader("content-type", "application/x-www-form-urlencoded")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/sts/v1/oauth2/token\"\
          \n\n\tpayload := strings.NewReader(\"grant_type=urn%253Aietf%253Aparams%253Aoauth%253Agrant-type%253Atoken-exchange&subject_token=test_jwt_token&identity_pool_id=pool_1&subject_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Ajwt&requested_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Aaccess_token&expires_in=900\"\
          )\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"\
          content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "grant_type=urn%253Aietf%253Aparams%253Aoauth%253Agrant-type%253Atoken-exchange&subject_token=test_jwt_token&identity_pool_id=pool_1&subject_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Ajwt&requested_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Aaccess_token&expires_in=900"

          headers = { 'content-type': "application/x-www-form-urlencoded" }

          conn.request("POST", "/sts/v1/oauth2/token", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const qs = require("querystring");
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/sts/v1/oauth2/token",
            "headers": {
              "content-type": "application/x-www-form-urlencoded"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(qs.stringify({
            grant_type: 'urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Atoken-exchange',
            subject_token: 'test_jwt_token',
            identity_pool_id: 'pool_1',
            subject_token_type: 'urn%3Aietf%3Aparams%3Aoauth%3Atoken-type%3Ajwt',
            requested_token_type: 'urn%3Aietf%3Aparams%3Aoauth%3Atoken-type%3Aaccess_token',
            expires_in: '900'
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/sts/v1/oauth2/token");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/x-www-form-urlencoded");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "grant_type=urn%253Aietf%253Aparams%253Aoauth%253Agrant-type%253Atoken-exchange&subject_token=test_jwt_token&identity_pool_id=pool_1&subject_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Ajwt&requested_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Aaccess_token&expires_in=900");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/sts/v1/oauth2/token");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/x-www-form-urlencoded");
          request.AddParameter("application/x-www-form-urlencoded", "grant_type=urn%253Aietf%253Aparams%253Aoauth%253Agrant-type%253Atoken-exchange&subject_token=test_jwt_token&identity_pool_id=pool_1&subject_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Ajwt&requested_token_type=urn%253Aietf%253Aparams%253Aoauth%253Atoken-type%253Aaccess_token&expires_in=900", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
components:
  responses:
    BadRequestError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "400"
              code: invalid_filter
              title: Invalid Filter
              detail: The 'delorean' resource can't be filtered by 'num_doors'
              source:
                parameter: num_doors
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    UnauthenticatedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "401"
              code: user_unauthenticated
              title: Authentication Required
              detail: Valid authentication credentials must be provided
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request lacks valid authentication credentials for this resource.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        WWW-Authenticate:
          description: The unique identifier for the API request.
          example: Basic error="invalid_key", error_description="The API Key is invalid"
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Unauthorized
    OverQuotaError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "402"
              code: quota_exceeded
              title: Kafka Clusters Per Org Quota Exceeded
              detail: 'The request would exceed the quota: kafka_clusters_per_environment'
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request would exceed one or more quotas.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Over Quota
    UnauthorizedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "403"
              code: user_unauthorized
              title: User Access Unauthorized
              detail: The user 'mcfly' is not allowed to access the 'delorean' resource
                without the 'plutonium' role.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The access credentials were considered insufficient to grant access
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Forbidden
    ConflictError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "409"
              code: resource_already_exists
              title: Resource Already exists
              detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                exists.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request is in conflict with the current server state
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        Location:
          description: Resource URI of conflicting resource
          explode: false
          schema:
            example: https://api.confluent.cloud/{object}/{id}
            format: uri
            type: string
          style: simple
      x-summary: Conflict
    NotFoundError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "404"
              title: Not Found
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    ValidationError:
      content:
        application/json:
          example:
            errors:
            - status: "422"
              code: invalid_configuration
              id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              title: Validation Failed
              detail: 'The property ''/cluster/storage_size'' of type string did not
                match the following type: integer'
              source:
                pointer: /cluster/storage_size
          schema:
            $ref: '#/components/schemas/Failure'
      description: Validation Failed
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        X-RateLimit-Limit:
          description: The maximum number of requests you're permitted to make per
            time period.
          explode: false
          schema:
            type: integer
          style: simple
        X-RateLimit-Remaining:
          description: The number of requests remaining in the current rate limit
            window.
          explode: false
          schema:
            type: integer
          style: simple
        X-RateLimit-Reset:
          description: "The relative time in seconds until the current rate-limit\
            \ window resets.  \n  \n**Important:** This differs from Github and Twitter's\
            \ same-named header which uses UTC epoch seconds. We use relative time\
            \ to avoid client/server time synchronization issues."
          explode: false
          schema:
            type: integer
          style: simple
        Retry-After:
          description: The number of seconds to wait until the rate limit window resets.
            Only sent when the rate limit is reached.
          explode: false
          schema:
            type: integer
          style: simple
    DefaultSystemError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "500"
              code: out_of_gas
              title: DeLorean Out Of Gas
              detail: The DeLorean has run out of gas, but Doc Brown will fill 'er
                up for you asap
          schema:
            $ref: '#/components/schemas/Failure'
      description: Oops, something went wrong!
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    sts.v1.TokenExchangeRequest:
      description: token exchange request parameters
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - sts/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - TokenExchangeRequest
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/sts/v1/token-exchange-requests/ter-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/token-exchange-request=ter-12345
        grant_type:
          description: |
            The grant type. Must be urn:ietf:params:oauth:grant-type:token-exchange, which indicates a token exchange.
          example: urn:ietf:params:oauth:grant-type:token-exchange
          type: string
          x-extensible-enum:
          - urn:ietf:params:oauth:grant-type:token-exchange
        subject_token:
          description: Confluent Cloud only accepts JSON Web Token (JWT) access tokens
            from customer identity provider
          example: test_jwt_token
          type: string
        identity_pool_id:
          description: |
            Identity pool is a group of external identities that are assigned a certain level of access based on policy
          example: pool_1
          type: string
        subject_token_type:
          description: |
            An identifier for the type of requested security token. Supported values
            is urn:ietf:params:oauth:token-type:jwt.
          example: urn:ietf:params:oauth:token-type:jwt
          type: string
          x-extensible-enum:
          - urn:ietf:params:oauth:token-type:jwt
        requested_token_type:
          description: |
            An identifier for the type of requested security token.
            Supported values is urn:ietf:params:oauth:token-type:access_token.
          example: urn:ietf:params:oauth:token-type:access_token
          type: string
          x-extensible-enum:
          - urn:ietf:params:oauth:token-type:access_token
        expires_in:
          default: 900
          description: |
            The amount of time, in seconds, between the time when the access token was issued
            and the time when the access token will expire
          format: int32
          maximum: 900
          type: integer
      type: object
    sts.v1.TokenExchangeReply:
      description: token exchange response
      example:
        access_token: access_token
        issued_token_type: urn:ietf:params:oauth:token-type:access_token
        token_type: Bearer
        expires_in: 3600
      properties:
        access_token:
          description: |
            An JWT access token, issued by Confluent, in response to the token exchange request.
            Client application could use the access token to access confluent public api
          type: string
        issued_token_type:
          description: The token type. Always matches the value of requested_token_type
            from the request.
          example: urn:ietf:params:oauth:token-type:access_token
          type: string
          x-extensible-enum:
          - urn:ietf:params:oauth:token-type:access_token
        token_type:
          description: Indicates the token type value. The only type that Confluent
            supports is Bearer
          example: Bearer
          type: string
          x-extensible-enum:
          - Bearer
        expires_in:
          description: The length of time, in seconds, that the access token is valid.
          example: 3600
          format: int32
          type: integer
      required:
      - access_token
      - expires_in
      - issued_token_type
      - token_type
      type: object
    ObjectMeta:
      description: ObjectMeta is metadata that all persisted resources must have,
        which includes all objects users must create.
      properties:
        self:
          description: Self is a Uniform Resource Locator (URL) at which an object
            can be addressed. This URL encodes the service location, API version,
            and other particulars necessary to locate the resource at a point in time
          example: https://api.confluent.cloud/v2/kafka-clusters/lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        resource_name:
          description: Resource Name is a Uniform Resource Identifier (URI) that is
            globally unique across space and time. It is represented as a Confluent
            Resource Name
          example: crn://confluent.cloud/kafka=lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        created_at:
          description: The date and time at which this object was created. It is represented
            in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: The date and time at which this object was last updated. It
            is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        deleted_at:
          description: The date and time at which this object was (or will be) deleted.
            It is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
      readOnly: true
      required:
      - self
    ListMeta:
      description: ListMeta describes metadata that resource collections may have
      properties:
        first:
          description: A link to the first page of results. If a response does not
            contain a first link, then direct navigation to the first page is not
            supported.
          example: https://api.confluent.cloud/v2/resourcekinds
          format: uri
          nullable: true
          type: string
        last:
          description: A link to the last page of results. If a response does not
            contain a last link, then direct navigation to the last page is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=bcAOehAY8F16YD84Z1wT
          format: uri
          nullable: true
          type: string
        prev:
          description: A link to the previous page of results. If a response does
            not contain a prev link, then either there is no previous data or backwards
            traversal through the result set is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=YIXRY97wWYmwzrax4dld
          format: uri
          nullable: true
          type: string
        next:
          description: A link to the next page of results. If a response does not
            contain a next link, then there is no more data available.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=UvmDWOB1iwfAIBPj6EYb
          format: uri
          nullable: true
          type: string
        total_size:
          description: Number of records in the full result set. This response may
            be paginated and have a smaller number of records.
          example: 123
          format: int32
          minimum: 0
          type: integer
      type: object
    ObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        environment:
          description: Environment of the referred resource, if env-scoped
          maxLength: 255
          minLength: 1
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
        api_version:
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
          type: string
        kind:
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    Failure:
      description: Provides information about problems encountered while performing
        an operation.
      properties:
        errors:
          description: List of errors which caused this operation to fail
          items:
            $ref: '#/components/schemas/Error'
          type: array
          uniqueItems: true
      required:
      - errors
      type: object
    Error:
      description: Describes a particular error encountered while performing an operation.
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          maxLength: 255
          type: string
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          type: string
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        title:
          description: A short, human-readable summary of the problem. It **SHOULD
            NOT** change from occurrence to occurrence of the problem, except for
            purposes of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        source:
          $ref: '#/components/schemas/Error_source'
      type: object
    Error_source:
      description: If this error was caused by a particular part of the API request,
        the source will point to the query string parameter or request body property
        that caused it.
      properties:
        pointer:
          description: A JSON Pointer [RFC6901] to the associated entity in the request
            document [e.g. "/spec" for a spec object, or "/spec/title" for a specific
            field].
          type: string
        parameter:
          description: A string indicating which query parameter caused the error.
          type: string
      type: object
  securitySchemes: {}
