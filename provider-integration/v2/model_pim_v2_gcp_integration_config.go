// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Provider Integration Management API

REST API for the Provider Integration

API version: 0.1.0
Contact: identity-team@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// PimV2GcpIntegrationConfig config schema for GCP cloud service provider.
type PimV2GcpIntegrationConfig struct {
	// The ID of the Google Service Account that Confluent Cloud uses to impersonate customer Google Service Account when it accesses resources in your GCP project.
	GoogleServiceAccount *string `json:"google_service_account,omitempty"`
	// The ID of the Google Service Account that Confluent Cloud impersonates to access resources in your GCP Project.
	CustomerGoogleServiceAccount *string `json:"customer_google_service_account,omitempty"`
	// Cloud provider specific config to which access is provided through provider integration.
	Kind string `json:"kind,omitempty"`
}

// NewPimV2GcpIntegrationConfig instantiates a new PimV2GcpIntegrationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimV2GcpIntegrationConfig(kind string) *PimV2GcpIntegrationConfig {
	this := PimV2GcpIntegrationConfig{}
	this.Kind = kind
	return &this
}

// NewPimV2GcpIntegrationConfigWithDefaults instantiates a new PimV2GcpIntegrationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimV2GcpIntegrationConfigWithDefaults() *PimV2GcpIntegrationConfig {
	this := PimV2GcpIntegrationConfig{}
	return &this
}

// GetGoogleServiceAccount returns the GoogleServiceAccount field value if set, zero value otherwise.
func (o *PimV2GcpIntegrationConfig) GetGoogleServiceAccount() string {
	if o == nil || o.GoogleServiceAccount == nil {
		var ret string
		return ret
	}
	return *o.GoogleServiceAccount
}

// GetGoogleServiceAccountOk returns a tuple with the GoogleServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimV2GcpIntegrationConfig) GetGoogleServiceAccountOk() (*string, bool) {
	if o == nil || o.GoogleServiceAccount == nil {
		return nil, false
	}
	return o.GoogleServiceAccount, true
}

// HasGoogleServiceAccount returns a boolean if a field has been set.
func (o *PimV2GcpIntegrationConfig) HasGoogleServiceAccount() bool {
	if o != nil && o.GoogleServiceAccount != nil {
		return true
	}

	return false
}

// SetGoogleServiceAccount gets a reference to the given string and assigns it to the GoogleServiceAccount field.
func (o *PimV2GcpIntegrationConfig) SetGoogleServiceAccount(v string) {
	o.GoogleServiceAccount = &v
}

// GetCustomerGoogleServiceAccount returns the CustomerGoogleServiceAccount field value if set, zero value otherwise.
func (o *PimV2GcpIntegrationConfig) GetCustomerGoogleServiceAccount() string {
	if o == nil || o.CustomerGoogleServiceAccount == nil {
		var ret string
		return ret
	}
	return *o.CustomerGoogleServiceAccount
}

// GetCustomerGoogleServiceAccountOk returns a tuple with the CustomerGoogleServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimV2GcpIntegrationConfig) GetCustomerGoogleServiceAccountOk() (*string, bool) {
	if o == nil || o.CustomerGoogleServiceAccount == nil {
		return nil, false
	}
	return o.CustomerGoogleServiceAccount, true
}

// HasCustomerGoogleServiceAccount returns a boolean if a field has been set.
func (o *PimV2GcpIntegrationConfig) HasCustomerGoogleServiceAccount() bool {
	if o != nil && o.CustomerGoogleServiceAccount != nil {
		return true
	}

	return false
}

// SetCustomerGoogleServiceAccount gets a reference to the given string and assigns it to the CustomerGoogleServiceAccount field.
func (o *PimV2GcpIntegrationConfig) SetCustomerGoogleServiceAccount(v string) {
	o.CustomerGoogleServiceAccount = &v
}

// GetKind returns the Kind field value
func (o *PimV2GcpIntegrationConfig) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *PimV2GcpIntegrationConfig) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *PimV2GcpIntegrationConfig) SetKind(v string) {
	o.Kind = v
}

// Redact resets all sensitive fields to their zero value.
func (o *PimV2GcpIntegrationConfig) Redact() {
	o.recurseRedact(o.GoogleServiceAccount)
	o.recurseRedact(o.CustomerGoogleServiceAccount)
	o.recurseRedact(&o.Kind)
}

func (o *PimV2GcpIntegrationConfig) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o PimV2GcpIntegrationConfig) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o PimV2GcpIntegrationConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GoogleServiceAccount != nil {
		toSerialize["google_service_account"] = o.GoogleServiceAccount
	}
	if o.CustomerGoogleServiceAccount != nil {
		toSerialize["customer_google_service_account"] = o.CustomerGoogleServiceAccount
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullablePimV2GcpIntegrationConfig struct {
	value *PimV2GcpIntegrationConfig
	isSet bool
}

func (v NullablePimV2GcpIntegrationConfig) Get() *PimV2GcpIntegrationConfig {
	return v.value
}

func (v *NullablePimV2GcpIntegrationConfig) Set(val *PimV2GcpIntegrationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePimV2GcpIntegrationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePimV2GcpIntegrationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimV2GcpIntegrationConfig(val *PimV2GcpIntegrationConfig) *NullablePimV2GcpIntegrationConfig {
	return &NullablePimV2GcpIntegrationConfig{value: val, isSet: true}
}

func (v NullablePimV2GcpIntegrationConfig) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullablePimV2GcpIntegrationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
