// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Provider Integration Management API

REST API for the Provider Integration

API version: 0.1.0
Contact: connect@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// PimV1AwsIntegrationConfig config schema for AWS cloud service provider. 
type PimV1AwsIntegrationConfig struct {
	// Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that Confluent Cloud assumes when it accesses resources in your AWS account. 
	ConfluentAwsRoleArn *string `json:"confluent_aws_role_arn,omitempty"`
	// Unique external ID that Confluent Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account. 
	ConfluentAwsExternalId *string `json:"confluent_aws_external_id,omitempty"`
	// Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that Confluent Cloud assumes when it accesses resources in your AWS account. 
	AwsRoleArn *string `json:"aws_role_arn,omitempty"`
	// Cloud provider specific config to which access is provided through provider integration.
	Kind string `json:"kind,omitempty"`
}

// NewPimV1AwsIntegrationConfig instantiates a new PimV1AwsIntegrationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimV1AwsIntegrationConfig(kind string) *PimV1AwsIntegrationConfig {
	this := PimV1AwsIntegrationConfig{}
	this.Kind = kind
	return &this
}

// NewPimV1AwsIntegrationConfigWithDefaults instantiates a new PimV1AwsIntegrationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimV1AwsIntegrationConfigWithDefaults() *PimV1AwsIntegrationConfig {
	this := PimV1AwsIntegrationConfig{}
	return &this
}

// GetConfluentAwsRoleArn returns the ConfluentAwsRoleArn field value if set, zero value otherwise.
func (o *PimV1AwsIntegrationConfig) GetConfluentAwsRoleArn() string {
	if o == nil || o.ConfluentAwsRoleArn == nil {
		var ret string
		return ret
	}
	return *o.ConfluentAwsRoleArn
}

// GetConfluentAwsRoleArnOk returns a tuple with the ConfluentAwsRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimV1AwsIntegrationConfig) GetConfluentAwsRoleArnOk() (*string, bool) {
	if o == nil || o.ConfluentAwsRoleArn == nil {
		return nil, false
	}
	return o.ConfluentAwsRoleArn, true
}

// HasConfluentAwsRoleArn returns a boolean if a field has been set.
func (o *PimV1AwsIntegrationConfig) HasConfluentAwsRoleArn() bool {
	if o != nil && o.ConfluentAwsRoleArn != nil {
		return true
	}

	return false
}

// SetConfluentAwsRoleArn gets a reference to the given string and assigns it to the ConfluentAwsRoleArn field.
func (o *PimV1AwsIntegrationConfig) SetConfluentAwsRoleArn(v string) {
	o.ConfluentAwsRoleArn = &v
}

// GetConfluentAwsExternalId returns the ConfluentAwsExternalId field value if set, zero value otherwise.
func (o *PimV1AwsIntegrationConfig) GetConfluentAwsExternalId() string {
	if o == nil || o.ConfluentAwsExternalId == nil {
		var ret string
		return ret
	}
	return *o.ConfluentAwsExternalId
}

// GetConfluentAwsExternalIdOk returns a tuple with the ConfluentAwsExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimV1AwsIntegrationConfig) GetConfluentAwsExternalIdOk() (*string, bool) {
	if o == nil || o.ConfluentAwsExternalId == nil {
		return nil, false
	}
	return o.ConfluentAwsExternalId, true
}

// HasConfluentAwsExternalId returns a boolean if a field has been set.
func (o *PimV1AwsIntegrationConfig) HasConfluentAwsExternalId() bool {
	if o != nil && o.ConfluentAwsExternalId != nil {
		return true
	}

	return false
}

// SetConfluentAwsExternalId gets a reference to the given string and assigns it to the ConfluentAwsExternalId field.
func (o *PimV1AwsIntegrationConfig) SetConfluentAwsExternalId(v string) {
	o.ConfluentAwsExternalId = &v
}

// GetAwsRoleArn returns the AwsRoleArn field value if set, zero value otherwise.
func (o *PimV1AwsIntegrationConfig) GetAwsRoleArn() string {
	if o == nil || o.AwsRoleArn == nil {
		var ret string
		return ret
	}
	return *o.AwsRoleArn
}

// GetAwsRoleArnOk returns a tuple with the AwsRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimV1AwsIntegrationConfig) GetAwsRoleArnOk() (*string, bool) {
	if o == nil || o.AwsRoleArn == nil {
		return nil, false
	}
	return o.AwsRoleArn, true
}

// HasAwsRoleArn returns a boolean if a field has been set.
func (o *PimV1AwsIntegrationConfig) HasAwsRoleArn() bool {
	if o != nil && o.AwsRoleArn != nil {
		return true
	}

	return false
}

// SetAwsRoleArn gets a reference to the given string and assigns it to the AwsRoleArn field.
func (o *PimV1AwsIntegrationConfig) SetAwsRoleArn(v string) {
	o.AwsRoleArn = &v
}

// GetKind returns the Kind field value
func (o *PimV1AwsIntegrationConfig) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *PimV1AwsIntegrationConfig) GetKindOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *PimV1AwsIntegrationConfig) SetKind(v string) {
	o.Kind = v
}

// Redact resets all sensitive fields to their zero value.
func (o *PimV1AwsIntegrationConfig) Redact() {
    o.recurseRedact(o.ConfluentAwsRoleArn)
    o.recurseRedact(o.ConfluentAwsExternalId)
    o.recurseRedact(o.AwsRoleArn)
    o.recurseRedact(&o.Kind)
}

func (o *PimV1AwsIntegrationConfig) recurseRedact(v interface{}) {
    type redactor interface {
        Redact()
    }
    if r, ok := v.(redactor); ok {
        r.Redact()
    } else {
        val := reflect.ValueOf(v)
        if val.Kind() == reflect.Ptr {
            val = val.Elem()
        }
        switch val.Kind() {
        case reflect.Slice, reflect.Array:
            for i := 0; i < val.Len(); i++ {
                // support data types declared without pointers
                o.recurseRedact(val.Index(i).Interface())
                // ... and data types that were declared without but need pointers (for Redact)
                if val.Index(i).CanAddr() {
                    o.recurseRedact(val.Index(i).Addr().Interface())
                }
            }
        }
    }
}

func (o PimV1AwsIntegrationConfig) zeroField(v interface{}) {
    p := reflect.ValueOf(v).Elem()
    p.Set(reflect.Zero(p.Type()))
}

func (o PimV1AwsIntegrationConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfluentAwsRoleArn != nil {
		toSerialize["confluent_aws_role_arn"] = o.ConfluentAwsRoleArn
	}
	if o.ConfluentAwsExternalId != nil {
		toSerialize["confluent_aws_external_id"] = o.ConfluentAwsExternalId
	}
	if o.AwsRoleArn != nil {
		toSerialize["aws_role_arn"] = o.AwsRoleArn
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullablePimV1AwsIntegrationConfig struct {
	value *PimV1AwsIntegrationConfig
	isSet bool
}

func (v NullablePimV1AwsIntegrationConfig) Get() *PimV1AwsIntegrationConfig {
	return v.value
}

func (v *NullablePimV1AwsIntegrationConfig) Set(val *PimV1AwsIntegrationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePimV1AwsIntegrationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePimV1AwsIntegrationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimV1AwsIntegrationConfig(val *PimV1AwsIntegrationConfig) *NullablePimV1AwsIntegrationConfig {
	return &NullablePimV1AwsIntegrationConfig{value: val, isSet: true}
}

func (v NullablePimV1AwsIntegrationConfig) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullablePimV1AwsIntegrationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


