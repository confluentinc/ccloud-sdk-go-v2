openapi: 3.0.0
info:
  contact:
    email: stream-designer@confluent.io
    name: Stream Designer
    url: https://confluent.slack.com/app_redirect?channel=streaming-designer-eng
  description: The Workspace API for Flink
  title: Workspaces API v1
  version: 0.0.1
  x-api-id: c07fb3e8-a36f-406b-9798-e7b97e2abfba
  x-api-group: ws/v1
  x-audience: component-internal
  x-tag-group: Workspace API (%s)
servers:
- description: Regional Flink Gateway
  url: https://flink.region.provider.confluent.cloud
tags:
- description: |-
    [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)

    A Workspace represents a named and ordered collection of Flink SQL code blocks.
    The API allows you to list, create, read, update and delete your workspaces.


    Related guide: [Confluent Flink Workspace API](https://docs.confluent.io/cloud/current/flink/workspaces.html).

    ## The Workspaces Model
    <SchemaDefinition schemaRef="#/components/schemas/ws.v1.Workspace" />

    ## Quotas and Limits
    This resource is subject to the following quotas:

    | Quota | Description |
    | --- | --- |
    | `ws.max_workspaces.per_env` | Maximum number of workspaces in a region of a Confluent Cloud environment. |
  name: Workspaces (ws/v1)
paths:
  /ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces:
    get:
      description: |-
        [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of workspaces.

        By default, only workspaces created by the caller will be returned. See the `all` query parameter for more details.
      operationId: listWsV1Workspaces
      parameters:
      - description: The unique identifier for the organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The unique identifier for the environment.
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter the results by exact match for spec.compute_pool.id.
        example: lfcp-00000
        explode: true
        in: query
        name: spec.compute_pool
        required: false
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: If true **and** the requester has either OrgAdmin or EnvAdmin
          roles, then return all workspaces in the environment. Otherwise return only
          those created by the caller (default).
        explode: true
        in: query
        name: all
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ws.v1.WorkspaceList'
          description: Workspaces.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'my-workspace'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: List of Workspaces
      tags:
      - Workspaces (ws/v1)
      x-request-access-name: Workspaces API v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces?spec.compute_pool=lfcp-00000' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces?spec.compute_pool=lfcp-00000")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces?spec.compute_pool=lfcp-00000\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("flink.region.provider.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces?spec.compute_pool=lfcp-00000", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "flink.region.provider.confluent.cloud",
            "port": null,
            "path": "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces?spec.compute_pool=lfcp-00000",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces?spec.compute_pool=lfcp-00000");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces?spec.compute_pool=lfcp-00000");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    post:
      description: |-
        [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)
        Make a request to create a workspace.
      operationId: createWsV1Workspace
      parameters:
      - description: The unique identifier for the organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The unique identifier for the environment.
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ws.v1.Workspace'
              - properties:
                  name:
                    description: The user-supplied name for the workspace, which must
                      be unique across the environment and region.
                    example: my-workspace
                    maxLength: 253
                    pattern: '[a-z0-9]([-.a-z0-9]{0,251}[a-z0-9])?'
                    type: string
                  spec:
                    properties:
                      display_name:
                        description: A human-readable display name for the workspace,
                          or generated if absent.
                        maxLength: 255
                        type: string
                      service_account:
                        description: The service account that clients can use to execute
                          the workspace's code blocks.
                        example:
                          id: sa-00000
                        nullable: true
                      compute_pool:
                        description: The compute pool in the same environment that
                          clients can use to execute the workspace's code blocks.
                        example:
                          id: lfcp-00000
                        nullable: true
                      blocks:
                        description: The ordered blocks for the new workspace
                      properties:
                        description: The key-value pair properties for the new workspace.
                          All key-value pairs are optional, and clients choose whether
                          and how to use these key-value pairs.
                    type: object
                required:
                - name
                type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ws.v1.Workspace'
                - required:
                  - api_version
                  - environment
                  - kind
                  - metadata
                  - name
                  - org
                  - spec
                  type: object
                - properties:
                    metadata:
                      required:
                      - self
                      - uid
                      type: object
                    spec:
                      required:
                      - display_name
                      type: object
                  type: object
          description: A Workspace is being created.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Workspace resource URI
              explode: false
              schema:
                example: https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'my-workspace'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The workspace '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://flink.region.provider.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: Create a Workspace
      tags:
      - Workspaces (ws/v1)
      x-request-access-name: Workspace API v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url 'https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"name":"my-workspace","spec":{"display_name":"string","compute_pool":{"id":"lfcp-00000"},"service_account":{"id":"sa-00000"},"blocks":null,"properties":null}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"name\":\"my-workspace\",\"spec\":{\"display_name\":\"string\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":null,\"properties\":null}}");
          Request request = new Request.Builder()
            .url("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces")
            .post(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"my-workspace\\\"\
          ,\\\"spec\\\":{\\\"display_name\\\":\\\"string\\\",\\\"compute_pool\\\"\
          :{\\\"id\\\":\\\"lfcp-00000\\\"},\\\"service_account\\\":{\\\"id\\\":\\\"\
          sa-00000\\\"},\\\"blocks\\\":null,\\\"properties\\\":null}}\")\n\n\treq,\
          \ _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\"\
          , \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\"\
          )\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\
          \tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\
          \n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("flink.region.provider.confluent.cloud")

          payload = "{\"name\":\"my-workspace\",\"spec\":{\"display_name\":\"string\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":null,\"properties\":null}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("POST", "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "flink.region.provider.confluent.cloud",
            "port": null,
            "path": "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            name: 'my-workspace',
            spec: {
              display_name: 'string',
              compute_pool: {id: 'lfcp-00000'},
              service_account: {id: 'sa-00000'},
              blocks: null,
              properties: null
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"name\":\"my-workspace\",\"spec\":{\"display_name\":\"string\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":null,\"properties\":null}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"name\":\"my-workspace\",\"spec\":{\"display_name\":\"string\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":null,\"properties\":null}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Workspaces API v1
  /ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}:
    delete:
      description: |-
        [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)
        Make a request to delete a workspace.
      operationId: deleteWsV1Workspace
      parameters:
      - description: The unique identifier for the organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The unique identifier for the environment.
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      - description: The workspace name that is unique across the environment and
          region.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: A Workspace is being deleted.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'my-workspace'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: Delete a Workspace
      tags:
      - Workspaces (ws/v1)
      x-request-access-name: Workspace API v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url 'https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}")
            .delete(null)
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}\"\
          \n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("flink.region.provider.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("DELETE", "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "DELETE",
            "hostname": "flink.region.provider.confluent.cloud",
            "port": null,
            "path": "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");
          var request = new RestRequest(Method.DELETE);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    get:
      description: |-
        [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)
        Make a request to read a workspace.
      operationId: getWsV1Workspace
      parameters:
      - description: The unique identifier for the organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The unique identifier for the environment.
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      - description: The workspace name that is unique across the environment and
          region.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ws.v1.Workspace'
                - required:
                  - api_version
                  - environment
                  - kind
                  - metadata
                  - name
                  - org
                  - spec
                  type: object
                - properties:
                    metadata:
                      required:
                      - self
                      - uid
                      type: object
                    spec:
                      properties:
                        compute_pool:
                          example:
                            id: lfcp-00000
                            environment: env-12345
                            related: https://flink.region.provider.confluent.cloud/fcpm/v2/compute-pools/lfcp-00000
                            resource_name: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-12345/flink-region=aws.us-east-2/compute-pool=lfcp-00000
                        service_account:
                          example:
                            id: sa-4voj5e
                            related: https://api.confluent.cloud/iam/v2/service-accounts/sa-4voj5e
                            resource_name: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/service-account=sa-4voj5e
                      required:
                      - display_name
                      type: object
                  type: object
          description: The Workspace.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'my-workspace'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: Read a Workspace
      tags:
      - Workspaces (ws/v1)
      x-request-access-name: Workspace API v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("flink.region.provider.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "flink.region.provider.confluent.cloud",
            "port": null,
            "path": "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    patch:
      description: |-
        [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)
        Make a request to patch a workspace.
      operationId: patchWsV1Workspace
      parameters:
      - description: The unique identifier for the organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The unique identifier for the environment.
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      - description: The workspace name that is unique across the environment and
          region.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ws.v1.Workspace'
                - required:
                  - api_version
                  - environment
                  - kind
                  - metadata
                  - name
                  - org
                  - spec
                  type: object
                - properties:
                    metadata:
                      required:
                      - self
                      - uid
                      type: object
                    spec:
                      required:
                      - display_name
                      type: object
                  type: object
          description: The updated workspace.
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'my-workspace'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The workspace '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://flink.region.provider.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: Update a Workspace with patch request
      tags:
      - Workspaces (ws/v1)
      x-request-access-name: Workspace API v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PATCH \
            --url 'https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json-patch+json'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}")
            .patch(null)
            .addHeader("content-type", "application/json-patch+json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}\"\
          \n\n\treq, _ := http.NewRequest(\"PATCH\", url, nil)\n\n\treq.Header.Add(\"\
          content-type\", \"application/json-patch+json\")\n\treq.Header.Add(\"Authorization\"\
          , \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("flink.region.provider.confluent.cloud")

          headers = {
              'content-type': "application/json-patch+json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PATCH", "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "flink.region.provider.confluent.cloud",
            "port": null,
            "path": "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}",
            "headers": {
              "content-type": "application/json-patch+json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json-patch+json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");
          var request = new RestRequest(Method.PATCH);
          request.AddHeader("content-type", "application/json-patch+json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    put:
      description: |-
        [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)
        Make a request to update a workspace.

        The request will fail with a 409 Conflict error if the Workspace has changed since it was fetched.
        In this case, do a GET, reapply the modifications, and try the update again.
      operationId: putWsV1Workspace
      parameters:
      - description: The unique identifier for the organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The unique identifier for the environment.
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      - description: The workspace name that is unique across the environment and
          region.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ws.v1.Workspace'
              - properties:
                  name:
                    description: The identifier for the workspace, which may not be
                      changed and any provided value is ignored.
                    maxLength: 253
                    type: string
                  spec:
                    type: object
                  metadata:
                    properties:
                      resource_version:
                        description: The system-generated opaque version from the
                          workspace representation most recent read by the client
                          before making the update request. It is used for optimistic
                          locking and client-side detection of changes. A client includes
                          this version to instruct the update to fail if the workspace
                          has since been modified (i.e., the workspace resource has
                          a different version). If the update fails, the client should
                          re-read the workspace, apply the changes to the new representation
                          while keeping the newer the resource version, and submit
                          another update request.
                        readOnly: false
                    readOnly: false
                    required:
                    - resource_version
                    type: object
                required:
                - metadata
                type: object
              - properties:
                  spec:
                    properties:
                      compute_pool:
                        example:
                          id: lfcp-00000
                        nullable: true
                      service_account:
                        example:
                          id: sa-00000
                        nullable: true
                    required:
                    - display_name
                    type: object
                type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ws.v1.Workspace'
                - required:
                  - api_version
                  - environment
                  - kind
                  - metadata
                  - name
                  - org
                  - spec
                  type: object
                - properties:
                    metadata:
                      required:
                      - self
                      - uid
                      type: object
                    spec:
                      required:
                      - display_name
                      type: object
                  type: object
          description: The updated workspace.
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'my-workspace'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The workspace '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://flink.region.provider.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      summary: Update a Workspace
      tags:
      - Workspaces (ws/v1)
      x-request-access-name: Workspace API v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PUT \
            --url 'https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"name":"string","spec":{"display_name":"My first workspace","compute_pool":{"id":"lfcp-00000"},"service_account":{"id":"sa-00000"},"blocks":[{"type":"CODE","properties":{"app_id":"block-1234","language":"SQL"},"code_options":{"source":["SELECT * FROM my-catalog.cluster_3.topic-1;"]}}],"properties":{"sql-catalog":"inventory","sql-database":"customers"}},"metadata":{"resource_version":null}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"name\":\"string\",\"spec\":{\"display_name\":\"My first workspace\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":[{\"type\":\"CODE\",\"properties\":{\"app_id\":\"block-1234\",\"language\":\"SQL\"},\"code_options\":{\"source\":[\"SELECT * FROM my-catalog.cluster_3.topic-1;\"]}}],\"properties\":{\"sql-catalog\":\"inventory\",\"sql-database\":\"customers\"}},\"metadata\":{\"resource_version\":null}}");
          Request request = new Request.Builder()
            .url("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}")
            .put(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"spec\\\
          \":{\\\"display_name\\\":\\\"My first workspace\\\",\\\"compute_pool\\\"\
          :{\\\"id\\\":\\\"lfcp-00000\\\"},\\\"service_account\\\":{\\\"id\\\":\\\"\
          sa-00000\\\"},\\\"blocks\\\":[{\\\"type\\\":\\\"CODE\\\",\\\"properties\\\
          \":{\\\"app_id\\\":\\\"block-1234\\\",\\\"language\\\":\\\"SQL\\\"},\\\"\
          code_options\\\":{\\\"source\\\":[\\\"SELECT * FROM my-catalog.cluster_3.topic-1;\\\
          \"]}}],\\\"properties\\\":{\\\"sql-catalog\\\":\\\"inventory\\\",\\\"sql-database\\\
          \":\\\"customers\\\"}},\\\"metadata\\\":{\\\"resource_version\\\":null}}\"\
          )\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"\
          content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\"\
          , \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("flink.region.provider.confluent.cloud")

          payload = "{\"name\":\"string\",\"spec\":{\"display_name\":\"My first workspace\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":[{\"type\":\"CODE\",\"properties\":{\"app_id\":\"block-1234\",\"language\":\"SQL\"},\"code_options\":{\"source\":[\"SELECT * FROM my-catalog.cluster_3.topic-1;\"]}}],\"properties\":{\"sql-catalog\":\"inventory\",\"sql-database\":\"customers\"}},\"metadata\":{\"resource_version\":null}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PUT", "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PUT",
            "hostname": "flink.region.provider.confluent.cloud",
            "port": null,
            "path": "/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            name: 'string',
            spec: {
              display_name: 'My first workspace',
              compute_pool: {id: 'lfcp-00000'},
              service_account: {id: 'sa-00000'},
              blocks: [
                {
                  type: 'CODE',
                  properties: {app_id: 'block-1234', language: 'SQL'},
                  code_options: {source: ['SELECT * FROM my-catalog.cluster_3.topic-1;']}
                }
              ],
              properties: {'sql-catalog': 'inventory', 'sql-database': 'customers'}
            },
            metadata: {resource_version: null}
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"name\":\"string\",\"spec\":{\"display_name\":\"My first workspace\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":[{\"type\":\"CODE\",\"properties\":{\"app_id\":\"block-1234\",\"language\":\"SQL\"},\"code_options\":{\"source\":[\"SELECT * FROM my-catalog.cluster_3.topic-1;\"]}}],\"properties\":{\"sql-catalog\":\"inventory\",\"sql-database\":\"customers\"}},\"metadata\":{\"resource_version\":null}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://flink.region.provider.confluent.cloud/ws/v1/organizations/{organization_id}/environments/{environment_id}/workspaces/{name}");
          var request = new RestRequest(Method.PUT);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"name\":\"string\",\"spec\":{\"display_name\":\"My first workspace\",\"compute_pool\":{\"id\":\"lfcp-00000\"},\"service_account\":{\"id\":\"sa-00000\"},\"blocks\":[{\"type\":\"CODE\",\"properties\":{\"app_id\":\"block-1234\",\"language\":\"SQL\"},\"code_options\":{\"source\":[\"SELECT * FROM my-catalog.cluster_3.topic-1;\"]}}],\"properties\":{\"sql-catalog\":\"inventory\",\"sql-database\":\"customers\"}},\"metadata\":{\"resource_version\":null}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Workspace API v1
components:
  responses:
    BadRequestError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "400"
              code: invalid_filter
              title: Invalid Filter
              detail: The 'delorean' resource can't be filtered by 'num_doors'
              source:
                parameter: num_doors
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    UnauthenticatedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "401"
              code: user_unauthenticated
              title: Authentication Required
              detail: Valid authentication credentials must be provided
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request lacks valid authentication credentials for this resource.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        WWW-Authenticate:
          description: The unique identifier for the API request.
          example: Basic error="invalid_key", error_description="The API Key is invalid"
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Unauthorized
    OverQuotaError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "402"
              code: quota_exceeded
              title: Maximum Workspaces Per Environment Quota Exceeded
              detail: 'The request would exceed the quota: ws.max_workspaces.per_env'
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request would exceed one or more quotas.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Over Quota
    UnauthorizedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "403"
              code: user_unauthorized
              title: User Access Unauthorized
              detail: The user 'mcfly' is not allowed to access the 'my-workspace'
                resource without the 'plutonium' role.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The access credentials were considered insufficient to grant access
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Forbidden
    ConflictError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "409"
              code: resource_already_exists
              title: Resource Already exists
              detail: The workspace '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                exists.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request is in conflict with the current server state
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        Location:
          description: Resource URI of conflicting resource
          explode: false
          schema:
            example: https://flink.region.provider.confluent.cloud/{object}/{id}
            format: uri
            type: string
          style: simple
      x-summary: Conflict
    NotFoundError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "404"
              title: Not Found
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    ValidationError:
      content:
        application/json:
          example:
            errors:
            - status: "422"
              code: invalid_configuration
              id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              title: Validation Failed
              detail: 'The property ''/cluster/storage_size'' of type string did not
                match the following type: integer'
              source:
                pointer: /cluster/storage_size
          schema:
            $ref: '#/components/schemas/Failure'
      description: Validation Failed
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    DefaultSystemError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "500"
              code: out_of_gas
              title: DeLorean Out Of Gas
              detail: The DeLorean has run out of gas, but Doc Brown will fill 'er
                up for you asap
          schema:
            $ref: '#/components/schemas/Failure'
      description: Oops, something went wrong!
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    ws.v1.Workspace:
      description: |-
        A Workspace represents a named and ordered collection of Flink SQL code blocks.
        The API allows you to list, create, read, update and delete your workspaces.


        Related guide: [Confluent Flink Workspace API](https://docs.confluent.io/cloud/current/flink/workspaces.html).

        ## The Workspaces Model
        <SchemaDefinition schemaRef="#/components/schemas/ws.v1.Workspace" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `ws.max_workspaces.per_env` | Maximum number of workspaces in a region of a Confluent Cloud environment. |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - ws/v1
          example: ws/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - Workspace
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://flink.region.provider.confluent.cloud/ws/v1/organization/9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environments/env-12345/workspaces/my-workspace
        organization_id:
          description: The organization in which the workspace exists.
          example: 9bb441c4-edef-46ac-8a41-c49e44a3fd9a
          readOnly: true
          type: string
        environment_id:
          description: The environment in which the workspace exists.
          example: env-12345
          readOnly: true
          type: string
        name:
          description: The workspace name that is unique across the environment and
            region.
          example: my-workspace
          maxLength: 253
          type: string
        spec:
          $ref: '#/components/schemas/ws.v1.WorkspaceSpec'
        status:
          $ref: '#/components/schemas/ws.v1.WorkspaceStatus'
      type: object
    MultipleSearchFilter:
      description: Filter a collection by a string search for one or more values
      items:
        type: string
      type: array
    SearchFilter:
      description: Filter a collection by a string search
      type: string
    ws.v1.WorkspaceList:
      description: |-
        `Workspace` represents a named resource with an ordered collection of SQL code blocks.
        The API allows you to list, create, read, update and delete your workspaces.
        ## The Workspace Model
        <SchemaDefinition schemaRef="#/components/schemas/ws.v1.Workspace" />
      example:
        metadata: ""
        data:
        - ""
        - ""
        kind: WorkspaceList
        api_version: ws/v1
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - ws/v1
          example: ws/v1
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - WorkspaceList
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
        data:
          description: The array of workspace resource.
          items:
            allOf:
            - $ref: '#/components/schemas/ws.v1.Workspace'
            - properties:
                metadata:
                  required:
                  - self
                  - uid
                  type: object
                spec:
                  required:
                  - display_name
                  type: object
              required:
              - environment
              - metadata
              - name
              - org
              - spec
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    ws.v1.WorkspaceSpec:
      description: The specification for the Workspace
      properties:
        display_name:
          description: A human-readable display name for the workspace.
          example: My first workspace
          type: string
        compute_pool:
          allOf:
          - $ref: '#/components/schemas/EnvScopedObjectReference'
        service_account:
          allOf:
          - $ref: '#/components/schemas/GlobalObjectReference'
        blocks:
          description: The ordered blocks for the new workspace
          items:
            allOf:
            - $ref: '#/components/schemas/ws.v1.Block'
            - required:
              - type
              type: object
          maxItems: 20
          minItems: 0
          type: array
        properties:
          additionalProperties:
            type: string
          description: A map (key-value pairs) of workspace-level properties. All
            key-value pairs are optional, and clients choose whether and how to use
            these key-value pairs.
          example:
            sql-catalog: inventory
            sql-database: customers
          maximum: 32
          type: object
      type: object
      x-enable-listmeta: true
      x-enable-objectmeta: true
    ws.v1.WorkspaceStatus:
      description: The status of the Workspace
      properties:
        network_kind:
          description: |
            The networking type used by the Workspace:

            PUBLIC: Workspace is using public networking;

            PRIVATE: Workspace is using private networking;
          example: PUBLIC
          readOnly: true
          type: string
          x-extensible-enum:
          - PUBLIC
          - PRIVATE
      readOnly: true
      type: object
    ObjectMeta:
      description: The metadata of the workspace.
      properties:
        self:
          description: Self is a Uniform Resource Locator (URL) at which an object
            can be addressed. This URL encodes the service location, API version,
            and other particulars necessary to locate the resource at a point in time
          example: https://flink.us-west1.aws.confluent.cloud/ws/v1/organizations/9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environments/env-12345/workspaces/my-workspace
          format: uri
          readOnly: true
          type: string
        uid:
          description: The system-generated identifier of the resource that is unique
            across space and time.
          example: 8241081c-a167-44ed-a920-7ec8f8473ee2
          format: uuid
          readOnly: true
          type: string
        resource_version:
          description: The system-generated opaque version used for optimistic locking
            and client-side detection of changes. A client should include this version
            in an update request, instructing the update to fail if the workspace
            has since been modified (i.e., the workspace resource has a different
            version).
          example: YOp5OKKb6w6sm3IfizBj
          readOnly: true
          type: string
        created_at:
          description: The date and time at which this object was created. It is represented
            in RFC3339 format and is in UTC.
          example: 1996-03-19T01:02:03-04:05
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: The date and time at which this object was last updated. It
            is represented in RFC3339 format and is in UTC.
          example: 2023-03-31T00:00:00Z
          format: date-time
          readOnly: true
          type: string
      readOnly: true
      required:
      - self
    ListMeta:
      description: ListMeta describes metadata that resource collections may have
      properties:
        self:
          description: Self is a Uniform Resource Locator (URL) at which an object
            can be addressed. This URL encodes the service location, API version,
            and other particulars necessary to locate the resource at a point in time
          example: https://flink.us-west1.aws.confluent.cloud/ws/v1/organizations/9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environments/env-12345/workspaces
          type: string
        next:
          description: A URL that can be followed to get the next batch of results.
          example: https://flink.us-west1.aws.confluent.cloud/ws/v1/organizations/9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environments/env-12345/workspaces?page_token=UvmDWOB1iwfAIBPj6EYb
          type: string
      type: object
    ws.v1.Block:
      description: A block within a workspace.
      properties:
        type:
          description: The type of block.
          enum:
          - CODE
          example: CODE
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map (key-value pairs) of cell properties. All key-value pairs
            are optional, and clients choose whether and how to use these key-value
            pairs.
          example:
            app_id: block-1234
            language: SQL
          maximum: 32
          type: object
        code_options:
          $ref: '#/components/schemas/ws.v1.CodeOptions'
      type: object
    ws.v1.CodeOptions:
      description: The options for a code block
      properties:
        source:
          description: The lines of source code for this code block.
          items:
            example: SELECT * FROM my-catalog.cluster_3.topic-1;
            type: string
          maxItems: 100
          minItems: 0
          type: array
      required:
      - source
      type: object
    GlobalObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    EnvScopedObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        environment:
          description: Environment of the referred resource, which is the same environment
            as the workspace
          maxLength: 255
          minLength: 1
          readOnly: true
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    Failure:
      description: Provides information about problems encountered while performing
        an operation.
      properties:
        errors:
          description: List of errors which caused this operation to fail
          items:
            $ref: '#/components/schemas/Error'
          type: array
          uniqueItems: true
      required:
      - errors
      type: object
    Error:
      description: Describes a particular error encountered while performing an operation.
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          maxLength: 255
          type: string
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          type: string
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        title:
          description: A short, human-readable summary of the problem. It **SHOULD
            NOT** change from occurrence to occurrence of the problem, except for
            purposes of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        source:
          $ref: '#/components/schemas/Error_source'
      type: object
    PatchRequest:
      description: PatchRequest represent a json-patch request to be applied to the
        workspace. See https://tools.ietf.org/html/rfc6902
      items:
        oneOf:
        - $ref: '#/components/schemas/JSONPatchRequestAddReplace'
        - $ref: '#/components/schemas/JSONPatchRequestRemove'
        - $ref: '#/components/schemas/JSONPatchRequestMoveCopy'
        x-one-of-name: PatchRequestOneOf
      type: array
    JSONPatchRequestAddReplace:
      additionalProperties: false
      description: This option is used to add or replace a value for a field
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        value:
          description: The value to add, replace or test.
        op:
          description: The operation to perform.
          enum:
          - add
          - replace
          - test
          type: string
      required:
      - op
      - path
      - value
      type: object
    JSONPatchRequestRemove:
      additionalProperties: false
      description: This option is used to remove a field
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        op:
          description: The operation to perform.
          enum:
          - remove
          type: string
      required:
      - op
      - path
      type: object
    JSONPatchRequestMoveCopy:
      additionalProperties: false
      description: This option is used to move or copy a field
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        op:
          description: The operation to perform.
          enum:
          - move
          - copy
          type: string
        from:
          description: A JSON Pointer path.
          type: string
      required:
      - from
      - op
      - path
      type: object
    Error_source:
      description: If this error was caused by a particular part of the API request,
        the source will point to the query string parameter or request body property
        that caused it.
      properties:
        pointer:
          description: A JSON Pointer [RFC6901] to the associated entity in the request
            document [e.g. "/spec" for a spec object, or "/spec/title" for a specific
            field].
          type: string
        parameter:
          description: A string indicating which query parameter caused the error.
          type: string
      type: object
  securitySchemes:
    cloud-api-key:
      description: Authenticate with Cloud API Keys using HTTP Basic Auth. Treat the
        Cloud API Key ID as the username and Cloud API Key Secret as the password.
      scheme: basic
      type: http
