// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Stream Share APIs

# Introduction

API version: 0.1.0-alpha0
Contact: cdx@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

import (
	"reflect"
)

// CdxV1CreateShareRequest Create share request
type CdxV1CreateShareRequest struct {
	// APIVersion defines the schema version of this representation of a resource.
	ApiVersion *string `json:"api_version,omitempty"`
	// Kind defines the object this REST resource represents.
	Kind *string `json:"kind,omitempty"`
	// ID is the \"natural identifier\" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted (\"time\"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace (\"space\").
	Id       *string     `json:"id,omitempty"`
	Metadata *ObjectMeta `json:"metadata,omitempty"`
	// Id of ccloud environment
	Environment *string `json:"environment,omitempty"`
	// Id of the Kafka cluster
	KafkaCluster *string `json:"kafka_cluster,omitempty"`
	// Method by which the invite will be delivered
	DeliveryMethod *string `json:"delivery_method,omitempty"`
	// Restrictions on the consumer that can redeem this token
	ConsumerRestriction *CdxV1CreateShareRequestConsumerRestrictionOneOf `json:"consumer_restriction,omitempty"`
	// List of resource crns to be shared
	Resources *[]string `json:"resources,omitempty"`
}

// NewCdxV1CreateShareRequest instantiates a new CdxV1CreateShareRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdxV1CreateShareRequest() *CdxV1CreateShareRequest {
	this := CdxV1CreateShareRequest{}
	return &this
}

// NewCdxV1CreateShareRequestWithDefaults instantiates a new CdxV1CreateShareRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdxV1CreateShareRequestWithDefaults() *CdxV1CreateShareRequest {
	this := CdxV1CreateShareRequest{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *CdxV1CreateShareRequest) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CdxV1CreateShareRequest) SetKind(v string) {
	o.Kind = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CdxV1CreateShareRequest) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetMetadata() ObjectMeta {
	if o == nil || o.Metadata == nil {
		var ret ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetMetadataOk() (*ObjectMeta, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ObjectMeta and assigns it to the Metadata field.
func (o *CdxV1CreateShareRequest) SetMetadata(v ObjectMeta) {
	o.Metadata = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *CdxV1CreateShareRequest) SetEnvironment(v string) {
	o.Environment = &v
}

// GetKafkaCluster returns the KafkaCluster field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetKafkaCluster() string {
	if o == nil || o.KafkaCluster == nil {
		var ret string
		return ret
	}
	return *o.KafkaCluster
}

// GetKafkaClusterOk returns a tuple with the KafkaCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetKafkaClusterOk() (*string, bool) {
	if o == nil || o.KafkaCluster == nil {
		return nil, false
	}
	return o.KafkaCluster, true
}

// HasKafkaCluster returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasKafkaCluster() bool {
	if o != nil && o.KafkaCluster != nil {
		return true
	}

	return false
}

// SetKafkaCluster gets a reference to the given string and assigns it to the KafkaCluster field.
func (o *CdxV1CreateShareRequest) SetKafkaCluster(v string) {
	o.KafkaCluster = &v
}

// GetDeliveryMethod returns the DeliveryMethod field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetDeliveryMethod() string {
	if o == nil || o.DeliveryMethod == nil {
		var ret string
		return ret
	}
	return *o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetDeliveryMethodOk() (*string, bool) {
	if o == nil || o.DeliveryMethod == nil {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// HasDeliveryMethod returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasDeliveryMethod() bool {
	if o != nil && o.DeliveryMethod != nil {
		return true
	}

	return false
}

// SetDeliveryMethod gets a reference to the given string and assigns it to the DeliveryMethod field.
func (o *CdxV1CreateShareRequest) SetDeliveryMethod(v string) {
	o.DeliveryMethod = &v
}

// GetConsumerRestriction returns the ConsumerRestriction field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetConsumerRestriction() CdxV1CreateShareRequestConsumerRestrictionOneOf {
	if o == nil || o.ConsumerRestriction == nil {
		var ret CdxV1CreateShareRequestConsumerRestrictionOneOf
		return ret
	}
	return *o.ConsumerRestriction
}

// GetConsumerRestrictionOk returns a tuple with the ConsumerRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetConsumerRestrictionOk() (*CdxV1CreateShareRequestConsumerRestrictionOneOf, bool) {
	if o == nil || o.ConsumerRestriction == nil {
		return nil, false
	}
	return o.ConsumerRestriction, true
}

// HasConsumerRestriction returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasConsumerRestriction() bool {
	if o != nil && o.ConsumerRestriction != nil {
		return true
	}

	return false
}

// SetConsumerRestriction gets a reference to the given CdxV1CreateShareRequestConsumerRestrictionOneOf and assigns it to the ConsumerRestriction field.
func (o *CdxV1CreateShareRequest) SetConsumerRestriction(v CdxV1CreateShareRequestConsumerRestrictionOneOf) {
	o.ConsumerRestriction = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *CdxV1CreateShareRequest) GetResources() []string {
	if o == nil || o.Resources == nil {
		var ret []string
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1CreateShareRequest) GetResourcesOk() (*[]string, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *CdxV1CreateShareRequest) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []string and assigns it to the Resources field.
func (o *CdxV1CreateShareRequest) SetResources(v []string) {
	o.Resources = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *CdxV1CreateShareRequest) Redact() {
	o.recurseRedact(o.ApiVersion)
	o.recurseRedact(o.Kind)
	o.recurseRedact(o.Id)
	o.recurseRedact(o.Metadata)
	o.recurseRedact(o.Environment)
	o.recurseRedact(o.KafkaCluster)
	o.recurseRedact(o.DeliveryMethod)
	o.recurseRedact(o.ConsumerRestriction)
	o.recurseRedact(o.Resources)
}

func (o *CdxV1CreateShareRequest) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o CdxV1CreateShareRequest) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o CdxV1CreateShareRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api_version"] = o.ApiVersion
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.KafkaCluster != nil {
		toSerialize["kafka_cluster"] = o.KafkaCluster
	}
	if o.DeliveryMethod != nil {
		toSerialize["delivery_method"] = o.DeliveryMethod
	}
	if o.ConsumerRestriction != nil {
		toSerialize["consumer_restriction"] = o.ConsumerRestriction
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableCdxV1CreateShareRequest struct {
	value *CdxV1CreateShareRequest
	isSet bool
}

func (v NullableCdxV1CreateShareRequest) Get() *CdxV1CreateShareRequest {
	return v.value
}

func (v *NullableCdxV1CreateShareRequest) Set(val *CdxV1CreateShareRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCdxV1CreateShareRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCdxV1CreateShareRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdxV1CreateShareRequest(val *CdxV1CreateShareRequest) *NullableCdxV1CreateShareRequest {
	return &NullableCdxV1CreateShareRequest{value: val, isSet: true}
}

func (v NullableCdxV1CreateShareRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdxV1CreateShareRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
