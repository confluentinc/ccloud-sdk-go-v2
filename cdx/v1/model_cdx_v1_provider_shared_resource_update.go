// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Stream Share APIs

# Introduction

API version: 0.1.0-alpha0
Contact: cdx@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

import (
	"reflect"
)

// CdxV1ProviderSharedResourceUpdate Resources shared by the provider   ## The Provider Shared Resources Model <SchemaDefinition schemaRef=\"#/components/schemas/cdx.v1.ProviderSharedResource\" />
type CdxV1ProviderSharedResourceUpdate struct {
	// APIVersion defines the schema version of this representation of a resource.
	ApiVersion *string `json:"api_version,omitempty"`
	// Kind defines the object this REST resource represents.
	Kind *string `json:"kind,omitempty"`
	// ID is the \"natural identifier\" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted (\"time\"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace (\"space\").
	Id       *string     `json:"id,omitempty"`
	Metadata *ObjectMeta `json:"metadata,omitempty"`
	// Shared resource display name
	DisplayName *string `json:"display_name,omitempty"`
	// Description of shared resource
	Description *string `json:"description,omitempty"`
	// list of labels
	Labels *[]string `json:"labels,omitempty"`
	// List of example data in JSON format. This field is work in progress and subject to changes.
	Examples *[]string `json:"examples,omitempty"`
	// List of schemas in JSON format. This field is work in progress and subject to changes.
	Schemas *[]string `json:"schemas,omitempty"`
	// Shared resource's organization description
	OrganizationDescription *string `json:"organization_description,omitempty"`
	// Email of contact person from the organization
	OrganizationContact *string `json:"organization_contact,omitempty"`
	// Resource logo url
	LogoUrl *string `json:"logo_url,omitempty"`
	// Organization to which the shared resource belongs. Deprecated
	OrganizationName interface{} `json:"organization_name,omitempty"`
	// The environment name of the shared resource. Deprecated
	EnvironmentName *string `json:"environment_name,omitempty"`
	// The cluster display name of the shared resource. Deprecated
	ClusterName *string `json:"cluster_name,omitempty"`
}

// NewCdxV1ProviderSharedResourceUpdate instantiates a new CdxV1ProviderSharedResourceUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdxV1ProviderSharedResourceUpdate() *CdxV1ProviderSharedResourceUpdate {
	this := CdxV1ProviderSharedResourceUpdate{}
	return &this
}

// NewCdxV1ProviderSharedResourceUpdateWithDefaults instantiates a new CdxV1ProviderSharedResourceUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdxV1ProviderSharedResourceUpdateWithDefaults() *CdxV1ProviderSharedResourceUpdate {
	this := CdxV1ProviderSharedResourceUpdate{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *CdxV1ProviderSharedResourceUpdate) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CdxV1ProviderSharedResourceUpdate) SetKind(v string) {
	o.Kind = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CdxV1ProviderSharedResourceUpdate) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetMetadata() ObjectMeta {
	if o == nil || o.Metadata == nil {
		var ret ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetMetadataOk() (*ObjectMeta, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ObjectMeta and assigns it to the Metadata field.
func (o *CdxV1ProviderSharedResourceUpdate) SetMetadata(v ObjectMeta) {
	o.Metadata = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CdxV1ProviderSharedResourceUpdate) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CdxV1ProviderSharedResourceUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *CdxV1ProviderSharedResourceUpdate) SetLabels(v []string) {
	o.Labels = &v
}

// GetExamples returns the Examples field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetExamples() []string {
	if o == nil || o.Examples == nil {
		var ret []string
		return ret
	}
	return *o.Examples
}

// GetExamplesOk returns a tuple with the Examples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetExamplesOk() (*[]string, bool) {
	if o == nil || o.Examples == nil {
		return nil, false
	}
	return o.Examples, true
}

// HasExamples returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasExamples() bool {
	if o != nil && o.Examples != nil {
		return true
	}

	return false
}

// SetExamples gets a reference to the given []string and assigns it to the Examples field.
func (o *CdxV1ProviderSharedResourceUpdate) SetExamples(v []string) {
	o.Examples = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetSchemas() []string {
	if o == nil || o.Schemas == nil {
		var ret []string
		return ret
	}
	return *o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetSchemasOk() (*[]string, bool) {
	if o == nil || o.Schemas == nil {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasSchemas() bool {
	if o != nil && o.Schemas != nil {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []string and assigns it to the Schemas field.
func (o *CdxV1ProviderSharedResourceUpdate) SetSchemas(v []string) {
	o.Schemas = &v
}

// GetOrganizationDescription returns the OrganizationDescription field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetOrganizationDescription() string {
	if o == nil || o.OrganizationDescription == nil {
		var ret string
		return ret
	}
	return *o.OrganizationDescription
}

// GetOrganizationDescriptionOk returns a tuple with the OrganizationDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetOrganizationDescriptionOk() (*string, bool) {
	if o == nil || o.OrganizationDescription == nil {
		return nil, false
	}
	return o.OrganizationDescription, true
}

// HasOrganizationDescription returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasOrganizationDescription() bool {
	if o != nil && o.OrganizationDescription != nil {
		return true
	}

	return false
}

// SetOrganizationDescription gets a reference to the given string and assigns it to the OrganizationDescription field.
func (o *CdxV1ProviderSharedResourceUpdate) SetOrganizationDescription(v string) {
	o.OrganizationDescription = &v
}

// GetOrganizationContact returns the OrganizationContact field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetOrganizationContact() string {
	if o == nil || o.OrganizationContact == nil {
		var ret string
		return ret
	}
	return *o.OrganizationContact
}

// GetOrganizationContactOk returns a tuple with the OrganizationContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetOrganizationContactOk() (*string, bool) {
	if o == nil || o.OrganizationContact == nil {
		return nil, false
	}
	return o.OrganizationContact, true
}

// HasOrganizationContact returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasOrganizationContact() bool {
	if o != nil && o.OrganizationContact != nil {
		return true
	}

	return false
}

// SetOrganizationContact gets a reference to the given string and assigns it to the OrganizationContact field.
func (o *CdxV1ProviderSharedResourceUpdate) SetOrganizationContact(v string) {
	o.OrganizationContact = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *CdxV1ProviderSharedResourceUpdate) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CdxV1ProviderSharedResourceUpdate) GetOrganizationName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CdxV1ProviderSharedResourceUpdate) GetOrganizationNameOk() (*interface{}, bool) {
	if o == nil || o.OrganizationName == nil {
		return nil, false
	}
	return &o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasOrganizationName() bool {
	if o != nil && o.OrganizationName != nil {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given interface{} and assigns it to the OrganizationName field.
func (o *CdxV1ProviderSharedResourceUpdate) SetOrganizationName(v interface{}) {
	o.OrganizationName = v
}

// GetEnvironmentName returns the EnvironmentName field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetEnvironmentName() string {
	if o == nil || o.EnvironmentName == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentName
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetEnvironmentNameOk() (*string, bool) {
	if o == nil || o.EnvironmentName == nil {
		return nil, false
	}
	return o.EnvironmentName, true
}

// HasEnvironmentName returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasEnvironmentName() bool {
	if o != nil && o.EnvironmentName != nil {
		return true
	}

	return false
}

// SetEnvironmentName gets a reference to the given string and assigns it to the EnvironmentName field.
func (o *CdxV1ProviderSharedResourceUpdate) SetEnvironmentName(v string) {
	o.EnvironmentName = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *CdxV1ProviderSharedResourceUpdate) GetClusterName() string {
	if o == nil || o.ClusterName == nil {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ProviderSharedResourceUpdate) GetClusterNameOk() (*string, bool) {
	if o == nil || o.ClusterName == nil {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *CdxV1ProviderSharedResourceUpdate) HasClusterName() bool {
	if o != nil && o.ClusterName != nil {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *CdxV1ProviderSharedResourceUpdate) SetClusterName(v string) {
	o.ClusterName = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *CdxV1ProviderSharedResourceUpdate) Redact() {
	o.recurseRedact(o.ApiVersion)
	o.recurseRedact(o.Kind)
	o.recurseRedact(o.Id)
	o.recurseRedact(o.Metadata)
	o.recurseRedact(o.DisplayName)
	o.recurseRedact(o.Description)
	o.recurseRedact(o.Labels)
	o.recurseRedact(o.Examples)
	o.recurseRedact(o.Schemas)
	o.recurseRedact(o.OrganizationDescription)
	o.recurseRedact(o.OrganizationContact)
	o.recurseRedact(o.LogoUrl)
	o.recurseRedact(o.OrganizationName)
	o.recurseRedact(o.EnvironmentName)
	o.recurseRedact(o.ClusterName)
}

func (o *CdxV1ProviderSharedResourceUpdate) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o CdxV1ProviderSharedResourceUpdate) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o CdxV1ProviderSharedResourceUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api_version"] = o.ApiVersion
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Examples != nil {
		toSerialize["examples"] = o.Examples
	}
	if o.Schemas != nil {
		toSerialize["schemas"] = o.Schemas
	}
	if o.OrganizationDescription != nil {
		toSerialize["organization_description"] = o.OrganizationDescription
	}
	if o.OrganizationContact != nil {
		toSerialize["organization_contact"] = o.OrganizationContact
	}
	if o.LogoUrl != nil {
		toSerialize["logo_url"] = o.LogoUrl
	}
	if o.OrganizationName != nil {
		toSerialize["organization_name"] = o.OrganizationName
	}
	if o.EnvironmentName != nil {
		toSerialize["environment_name"] = o.EnvironmentName
	}
	if o.ClusterName != nil {
		toSerialize["cluster_name"] = o.ClusterName
	}
	return json.Marshal(toSerialize)
}

type NullableCdxV1ProviderSharedResourceUpdate struct {
	value *CdxV1ProviderSharedResourceUpdate
	isSet bool
}

func (v NullableCdxV1ProviderSharedResourceUpdate) Get() *CdxV1ProviderSharedResourceUpdate {
	return v.value
}

func (v *NullableCdxV1ProviderSharedResourceUpdate) Set(val *CdxV1ProviderSharedResourceUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCdxV1ProviderSharedResourceUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCdxV1ProviderSharedResourceUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdxV1ProviderSharedResourceUpdate(val *CdxV1ProviderSharedResourceUpdate) *NullableCdxV1ProviderSharedResourceUpdate {
	return &NullableCdxV1ProviderSharedResourceUpdate{value: val, isSet: true}
}

func (v NullableCdxV1ProviderSharedResourceUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdxV1ProviderSharedResourceUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
