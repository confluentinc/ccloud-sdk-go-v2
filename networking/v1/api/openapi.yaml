openapi: 3.0.0
info:
  contact:
    email: cire-traffic@confluent.io
    name: CIRE Traffic
    url: https://confluent.slack.com/app_redirect?channel=cire-traffic-eng
  title: Network API
  version: 0.0.1-alpha1
  x-api-id: c1259878-7b77-11eb-9439-0242ac130002
  x-api-group: networking/v1
  x-audience: external-public
  x-tag-group: Networking (%s)
servers:
- description: Confluent Cloud production
  url: https://api.confluent.cloud
tags:
- description: |-
    [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

    `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
    provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
    Shared networks can contain any cluster type.

    The API allows you to list, create, read, update, and delete your networks.


    Related guide: [APIs to manage networks in Confluent Cloud.](https://docs.confluent.cloud).

    ## The Networks Model
    <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

    ## Quotas and Limits
    This resource is subject to the following quotas:

    | Quota | Description |
    | --- | --- |
    | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
  name: Networks (networking/v1)
- description: |-
    [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

    VPC Peering Connections

    Related guide: [APIs to manage VPC peering connections.](https://docs.confluent.cloud).

    ## The Peerings Model
    <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

    ## Quotas and Limits
    This resource is subject to the following quotas:

    | Quota | Description |
    | --- | --- |
    | `peerings_per_network` | Number of peerings per network |
  name: Peerings (networking/v1)
- description: |-
    [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

    AWS Transit Gateway Attachments

    Related guide: [APIs to manage AWS Transit Gateway Attachments.](https://docs.confluent.cloud).

    ## The Transit Gateway Attachments Model
    <SchemaDefinition schemaRef="#/components/schemas/networking.v1.TransitGatewayAttachment" />

    ## Quotas and Limits
    This resource is subject to the following quotas:

    | Quota | Description |
    | --- | --- |
    | `tgw_attachments_per_network` | Number of TGW attachments per network |
  name: Transit Gateway Attachments (networking/v1)
- description: |-
    [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

    Add or remove access to PrivateLink endpoints by AWS account or Azure subscription.

    Related guide: [APIs to manage PrivateLink access.](https://docs.confluent.cloud).

    ## The Private Link Accesses Model
    <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

    ## Quotas and Limits
    This resource is subject to the following quotas:

    | Quota | Description |
    | --- | --- |
    | `privatelink_accounts_per_network` | Number of AWS accounts per network |
    | `privatelink_subscriptions_per_network` | Number of Azure subscriptions per network |
  name: Private Link Accesses (networking/v1)
paths:
  /networking/v1/networks:
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Retrieve a sorted, filtered, paginated list of all networks.
      operationId: listNetworkingV1Networks
      parameters:
      - description: Filter the results by exact match for spec.display_name. Pass
          multiple times to see results matching any of the values.
        example:
        - prod-gcp-us-central1
        - prod-aws-us-east1
        explode: true
        in: query
        name: spec.display_name
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for spec.cloud. Pass multiple
          times to see results matching any of the values.
        example:
        - GCP
        - AWS
        explode: true
        in: query
        name: spec.cloud
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for spec.region. Pass multiple
          times to see results matching any of the values.
        example:
        - us-central1
        - us-east-1
        explode: true
        in: query
        name: spec.region
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for spec.cidr. Pass multiple
          times to see results matching any of the values.
        example:
        - 10.200.0.0/16
        explode: true
        in: query
        name: spec.cidr
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for status.phase. Pass multiple
          times to see results matching any of the values.
        example:
        - PROVISIONING
        - READY
        explode: true
        in: query
        name: status.phase
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for connection_type. Pass multiple
          times to see results matching any of the values.
        example:
        - peering
        - privatelink
        explode: true
        in: query
        name: connection_type
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.NetworkList'
                - properties:
                    data:
                      items:
                        properties:
                          spec:
                            properties:
                              environment:
                                example:
                                  id: env-00000
                                  related: https://api.confluent.cloud/v2/environments/env-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                            type: object
                      type: array
                  type: object
          description: Network.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: List of Networks
      tags:
      - Networks (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/networks?spec.display_name=SOME_ARRAY_VALUE&spec.cloud=SOME_ARRAY_VALUE&spec.region=SOME_ARRAY_VALUE&spec.cidr=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&connection_type=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/networks?spec.display_name=SOME_ARRAY_VALUE&spec.cloud=SOME_ARRAY_VALUE&spec.region=SOME_ARRAY_VALUE&spec.cidr=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&connection_type=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks?spec.display_name=SOME_ARRAY_VALUE&spec.cloud=SOME_ARRAY_VALUE&spec.region=SOME_ARRAY_VALUE&spec.cidr=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&connection_type=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/networks?spec.display_name=SOME_ARRAY_VALUE&spec.cloud=SOME_ARRAY_VALUE&spec.region=SOME_ARRAY_VALUE&spec.cidr=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&connection_type=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/networks?spec.display_name=SOME_ARRAY_VALUE&spec.cloud=SOME_ARRAY_VALUE&spec.region=SOME_ARRAY_VALUE&spec.cidr=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&connection_type=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks?spec.display_name=SOME_ARRAY_VALUE&spec.cloud=SOME_ARRAY_VALUE&spec.region=SOME_ARRAY_VALUE&spec.cidr=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&connection_type=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/networks?spec.display_name=SOME_ARRAY_VALUE&spec.cloud=SOME_ARRAY_VALUE&spec.region=SOME_ARRAY_VALUE&spec.cidr=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&connection_type=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    post:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to create a network.
      operationId: createNetworkingV1Network
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.Network'
              - properties:
                  spec:
                    required:
                    - cloud
                    - connection_types
                    - environment
                    - region
                    type: object
                required:
                - spec
                type: object
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                    type: object
                type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.Network'
                - properties:
                    spec:
                      required:
                      - cloud
                      - connection_types
                      - environment
                      - region
                      type: object
                  required:
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                      type: object
                  type: object
          description: A Network is being created.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Network resource uri
              explode: false
              schema:
                example: https://api.confluent.cloud/networking/v1/networks/{id}
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "402":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "402"
                  code: quota_exceeded
                  title: Kafka Clusters Per Org Quota Exceeded
                  detail: 'The request would exceed the quota: kafka_clusters_per_environment'
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request would exceed one or more quotas.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Over Quota
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Create a Network
      tags:
      - Networks (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.confluent.cloud/networking/v1/networks \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-gcp-us-central1","cloud":"GCP","region":"us-central1","connection_types":["PRIVATELINK"],"cidr":"10.200.0.0/16","zones":["us-central1-a","us-central1-b","us-central1-c"],"environment":{"id":"env-00000","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/networks")
            .post(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-gcp-us-central1\\\",\\\"cloud\\\":\\\"GCP\\\",\\\"region\\\":\\\
          \"us-central1\\\",\\\"connection_types\\\":[\\\"PRIVATELINK\\\"],\\\"cidr\\\
          \":\\\"10.200.0.0/16\\\",\\\"zones\\\":[\\\"us-central1-a\\\",\\\"us-central1-b\\\
          \",\\\"us-central1-c\\\"],\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\
          \",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"\
          POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\"\
          )\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\
          \tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody,\
          \ _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\
          \n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("POST", "/networking/v1/networks", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/networks",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-gcp-us-central1',
              cloud: 'GCP',
              region: 'us-central1',
              connection_types: ['PRIVATELINK'],
              cidr: '10.200.0.0/16',
              zones: ['us-central1-a', 'us-central1-b', 'us-central1-c'],
              environment: {id: 'env-00000', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/networks");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
  /networking/v1/networks/{id}:
    delete:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to delete a network.
      operationId: deleteNetworkingV1Network
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the network.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A Network is being deleted.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Delete a Network
      tags:
      - Networks (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url 'https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE")
            .delete(null)
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("DELETE", "/networking/v1/networks/{id}?environment=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "DELETE",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/networks/{id}?environment=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE");
          var request = new RestRequest(Method.DELETE);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to read a network.
      operationId: getNetworkingV1Network
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the network.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.Network'
                - properties:
                    spec:
                      required:
                      - cloud
                      - connection_types
                      - environment
                      - region
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                      type: object
                  type: object
          description: Network.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Read a Network
      tags:
      - Networks (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/networks/{id}?environment=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/networks/{id}?environment=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/networks/{id}?environment=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    patch:
      description: |+
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to update a network.

      operationId: updateNetworkingV1Network
      parameters:
      - description: The unique identifier for the network.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.NetworkUpdate'
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                    required:
                    - environment
                    type: object
                required:
                - spec
                type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.Network'
                - properties:
                    spec:
                      required:
                      - cloud
                      - connection_types
                      - environment
                      - region
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                      type: object
                  type: object
          description: Network.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "402":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "402"
                  code: quota_exceeded
                  title: Kafka Clusters Per Org Quota Exceeded
                  detail: 'The request would exceed the quota: kafka_clusters_per_environment'
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request would exceed one or more quotas.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Over Quota
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Update a Network
      tags:
      - Networks (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PATCH \
            --url 'https://api.confluent.cloud/networking/v1/networks/{id}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-gcp-us-central1","cloud":"GCP","region":"us-central1","connection_types":["PRIVATELINK"],"cidr":"10.200.0.0/16","zones":["us-central1-a","us-central1-b","us-central1-c"],"environment":{"id":"env-00000","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/networks/{id}")
            .patch(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks/{id}\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-gcp-us-central1\\\",\\\"cloud\\\":\\\"GCP\\\",\\\"region\\\":\\\
          \"us-central1\\\",\\\"connection_types\\\":[\\\"PRIVATELINK\\\"],\\\"cidr\\\
          \":\\\"10.200.0.0/16\\\",\\\"zones\\\":[\\\"us-central1-a\\\",\\\"us-central1-b\\\
          \",\\\"us-central1-c\\\"],\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\
          \",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"\
          PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\"\
          )\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\
          \tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody,\
          \ _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\
          \n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PATCH", "/networking/v1/networks/{id}", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/networks/{id}",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-gcp-us-central1',
              cloud: 'GCP',
              region: 'us-central1',
              connection_types: ['PRIVATELINK'],
              cidr: '10.200.0.0/16',
              zones: ['us-central1-a', 'us-central1-b', 'us-central1-c'],
              environment: {id: 'env-00000', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks/{id}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/networks/{id}");
          var request = new RestRequest(Method.PATCH);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-gcp-us-central1\",\"cloud\":\"GCP\",\"region\":\"us-central1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"us-central1-a\",\"us-central1-b\",\"us-central1-c\"],\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
  /networking/v1/peerings:
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Retrieve a sorted, filtered, paginated list of all peerings.
      operationId: listNetworkingV1Peerings
      parameters:
      - description: Filter the results by exact match for spec.display_name. Pass
          multiple times to see results matching any of the values.
        example:
        - prod-peering-uscentral1
        - prod-peering-use1
        explode: true
        in: query
        name: spec.display_name
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for status.phase. Pass multiple
          times to see results matching any of the values.
        example:
        - PROVISIONING
        - READY
        explode: true
        in: query
        name: status.phase
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for spec.network. Pass multiple
          times to see results matching any of the values.
        example:
        - n-00000
        - n-00001
        explode: true
        in: query
        name: spec.network
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.PeeringList'
                - properties:
                    data:
                      items:
                        properties:
                          spec:
                            properties:
                              environment:
                                example:
                                  id: env-00000
                                  related: https://api.confluent.cloud/v2/environments/env-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                              network:
                                example:
                                  id: n-00000
                                  related: https://api.confluent.cloud/networking/v1/networks/n-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                            type: object
                      type: array
                  type: object
          description: Peering.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: List of Peerings
      tags:
      - Peerings (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/peerings?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/peerings?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/peerings?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/peerings?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    post:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to create a peering.
      operationId: createNetworkingV1Peering
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.Peering'
              - properties:
                  spec:
                    required:
                    - cloud
                    - environment
                    - network
                    type: object
                required:
                - spec
                type: object
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                      network:
                        example:
                          id: n-00000
                    type: object
                type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.Peering'
                - properties:
                    spec:
                      required:
                      - cloud
                      - environment
                      - network
                      type: object
                  required:
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        network:
                          example:
                            id: n-00000
                            related: https://api.confluent.cloud/networking/v1/networks/n-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                      type: object
                  type: object
          description: A Peering is being created.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Peering resource uri
              explode: false
              schema:
                example: https://api.confluent.cloud/networking/v1/peerings/{id}
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "402":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "402"
                  code: quota_exceeded
                  title: Kafka Clusters Per Org Quota Exceeded
                  detail: 'The request would exceed the quota: kafka_clusters_per_environment'
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request would exceed one or more quotas.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Over Quota
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Create a Peering
      tags:
      - Peerings (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.confluent.cloud/networking/v1/peerings \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-peering-use1","cloud":{"kind":"AwsPeering","account":"000000000000","vpc":"vpc-00000000000000000","routes":["10.108.16.0/21"],"customer_region":"us-east-1"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"n-00000","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/peerings")
            .post(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-peering-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPeering\\\"\
          ,\\\"account\\\":\\\"000000000000\\\",\\\"vpc\\\":\\\"vpc-00000000000000000\\\
          \",\\\"routes\\\":[\\\"10.108.16.0/21\\\"],\\\"customer_region\\\":\\\"\
          us-east-1\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\
          \":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"n-00000\\\",\\\"environment\\\
          \":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\
          \n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("POST", "/networking/v1/peerings", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/peerings",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-peering-use1',
              cloud: {
                kind: 'AwsPeering',
                account: '000000000000',
                vpc: 'vpc-00000000000000000',
                routes: ['10.108.16.0/21'],
                customer_region: 'us-east-1'
              },
              environment: {id: 'env-00000', environment: 'string'},
              network: {id: 'n-00000', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
  /networking/v1/peerings/{id}:
    delete:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to delete a peering.
      operationId: deleteNetworkingV1Peering
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the peering.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A Peering is being deleted.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Delete a Peering
      tags:
      - Peerings (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url 'https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE")
            .delete(null)
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("DELETE", "/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "DELETE",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE");
          var request = new RestRequest(Method.DELETE);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to read a peering.
      operationId: getNetworkingV1Peering
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the peering.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.Peering'
                - properties:
                    spec:
                      required:
                      - cloud
                      - environment
                      - network
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        network:
                          example:
                            id: n-00000
                            related: https://api.confluent.cloud/networking/v1/networks/n-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                      type: object
                  type: object
          description: Peering.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Read a Peering
      tags:
      - Peerings (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    patch:
      description: |+
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to update a peering.

      operationId: updateNetworkingV1Peering
      parameters:
      - description: The unique identifier for the peering.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.PeeringUpdate'
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                    required:
                    - environment
                    type: object
                required:
                - spec
                type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.Peering'
                - properties:
                    spec:
                      required:
                      - cloud
                      - environment
                      - network
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        network:
                          example:
                            id: n-00000
                            related: https://api.confluent.cloud/networking/v1/networks/n-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                      type: object
                  type: object
          description: Peering.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "402":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "402"
                  code: quota_exceeded
                  title: Kafka Clusters Per Org Quota Exceeded
                  detail: 'The request would exceed the quota: kafka_clusters_per_environment'
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request would exceed one or more quotas.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Over Quota
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Update a Peering
      tags:
      - Peerings (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PATCH \
            --url 'https://api.confluent.cloud/networking/v1/peerings/{id}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-peering-use1","cloud":{"kind":"AwsPeering","account":"000000000000","vpc":"vpc-00000000000000000","routes":["10.108.16.0/21"],"customer_region":"us-east-1"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"string","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/peerings/{id}")
            .patch(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings/{id}\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-peering-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPeering\\\"\
          ,\\\"account\\\":\\\"000000000000\\\",\\\"vpc\\\":\\\"vpc-00000000000000000\\\
          \",\\\"routes\\\":[\\\"10.108.16.0/21\\\"],\\\"customer_region\\\":\\\"\
          us-east-1\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\
          \":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\
          \":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\
          \n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PATCH", "/networking/v1/peerings/{id}", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/peerings/{id}",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-peering-use1',
              cloud: {
                kind: 'AwsPeering',
                account: '000000000000',
                vpc: 'vpc-00000000000000000',
                routes: ['10.108.16.0/21'],
                customer_region: 'us-east-1'
              },
              environment: {id: 'env-00000', environment: 'string'},
              network: {id: 'string', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings/{id}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings/{id}");
          var request = new RestRequest(Method.PATCH);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
  /networking/v1/transit-gateway-attachments:
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Retrieve a sorted, filtered, paginated list of all transit gateway attachments.
      operationId: listNetworkingV1TransitGatewayAttachments
      parameters:
      - description: Filter the results by exact match for spec.display_name. Pass
          multiple times to see results matching any of the values.
        example:
        - prod-tgw-use1
        - prod-tgw-usw2
        explode: true
        in: query
        name: spec.display_name
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for status.phase. Pass multiple
          times to see results matching any of the values.
        example:
        - PROVISIONING
        - READY
        explode: true
        in: query
        name: status.phase
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for spec.network. Pass multiple
          times to see results matching any of the values.
        example:
        - n-00000
        - n-00001
        explode: true
        in: query
        name: spec.network
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentList'
                - properties:
                    data:
                      items:
                        properties:
                          spec:
                            properties:
                              environment:
                                example:
                                  id: env-00000
                                  related: https://api.confluent.cloud/v2/environments/env-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                              network:
                                example:
                                  id: n-00000
                                  related: https://api.confluent.cloud/networking/v1/networks/n-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                            type: object
                      type: array
                  type: object
          description: Transit Gateway Attachment.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: List of Transit Gateway Attachments
      tags:
      - Transit Gateway Attachments (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/transit-gateway-attachments?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/transit-gateway-attachments?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
  /networking/v1/transit-gateway-attachments/{id}:
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to read a transit gateway attachment.
      operationId: getNetworkingV1TransitGatewayAttachment
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the transit gateway attachment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachment'
                - properties:
                    spec:
                      required:
                      - environment
                      - network
                      - ram_share_arn
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        network:
                          example:
                            id: n-00000
                            related: https://api.confluent.cloud/networking/v1/networks/n-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                      type: object
                  type: object
          description: Transit Gateway Attachment.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Read a Transit Gateway Attachment
      tags:
      - Transit Gateway Attachments (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/transit-gateway-attachments/{id}?environment=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/transit-gateway-attachments/{id}?environment=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
  /networking/v1/private-link-accesses:
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Retrieve a sorted, filtered, paginated list of all private link accesses.
      operationId: listNetworkingV1PrivateLinkAccesses
      parameters:
      - description: Filter the results by exact match for spec.display_name. Pass
          multiple times to see results matching any of the values.
        example:
        - prod-pl-use1
        - prod-pl-usw2
        explode: true
        in: query
        name: spec.display_name
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for status.phase. Pass multiple
          times to see results matching any of the values.
        example:
        - PROVISIONING
        - READY
        explode: true
        in: query
        name: status.phase
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for spec.network. Pass multiple
          times to see results matching any of the values.
        example:
        - n-00000
        - n-00001
        explode: true
        in: query
        name: spec.network
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessList'
                - properties:
                    data:
                      items:
                        properties:
                          spec:
                            properties:
                              environment:
                                example:
                                  id: env-00000
                                  related: https://api.confluent.cloud/v2/environments/env-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                              network:
                                example:
                                  id: n-00000
                                  related: https://api.confluent.cloud/networking/v1/networks/n-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                            type: object
                      type: array
                  type: object
          description: Private Link Access.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: List of Private Link Accesses
      tags:
      - Private Link Accesses (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/private-link-accesses?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/private-link-accesses?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=SOME_ARRAY_VALUE&status.phase=SOME_ARRAY_VALUE&environment=SOME_STRING_VALUE&spec.network=SOME_ARRAY_VALUE&page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    post:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to create a private link access.
      operationId: createNetworkingV1PrivateLinkAccess
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
              - properties:
                  spec:
                    required:
                    - cloud
                    - environment
                    - network
                    type: object
                required:
                - spec
                type: object
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                      network:
                        example:
                          id: n-00000
                    type: object
                type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
                - properties:
                    spec:
                      required:
                      - cloud
                      - environment
                      - network
                      type: object
                  required:
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        network:
                          example:
                            id: n-00000
                            related: https://api.confluent.cloud/networking/v1/networks/n-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                      type: object
                  type: object
          description: A Private Link Access is being created.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: PrivateLinkAccess resource uri
              explode: false
              schema:
                example: https://api.confluent.cloud/networking/v1/private-link-accesses/{id}
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "402":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "402"
                  code: quota_exceeded
                  title: Kafka Clusters Per Org Quota Exceeded
                  detail: 'The request would exceed the quota: kafka_clusters_per_environment'
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request would exceed one or more quotas.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Over Quota
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Create a Private Link Access
      tags:
      - Private Link Accesses (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.confluent.cloud/networking/v1/private-link-accesses \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-pl-use1","cloud":{"kind":"AwsPrivateLinkAccess","account":"000000000000"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"n-00000","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/private-link-accesses")
            .post(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-pl-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPrivateLinkAccess\\\
          \",\\\"account\\\":\\\"000000000000\\\"},\\\"environment\\\":{\\\"id\\\"\
          :\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\
          \"id\\\":\\\"n-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\t\
          req, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"\
          content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\"\
          , \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("POST", "/networking/v1/private-link-accesses", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/private-link-accesses",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-pl-use1',
              cloud: {kind: 'AwsPrivateLinkAccess', account: '000000000000'},
              environment: {id: 'env-00000', environment: 'string'},
              network: {id: 'n-00000', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
  /networking/v1/private-link-accesses/{id}:
    delete:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to delete a private link access.
      operationId: deleteNetworkingV1PrivateLinkAccess
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the private link access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A Private Link Access is being deleted.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Delete a Private Link Access
      tags:
      - Private Link Accesses (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url 'https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE")
            .delete(null)
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("DELETE", "/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "DELETE",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE");
          var request = new RestRequest(Method.DELETE);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    get:
      description: |-
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to read a private link access.
      operationId: getNetworkingV1PrivateLinkAccess
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the private link access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
                - properties:
                    spec:
                      required:
                      - cloud
                      - environment
                      - network
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        network:
                          example:
                            id: n-00000
                            related: https://api.confluent.cloud/networking/v1/networks/n-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                      type: object
                  type: object
          description: Private Link Access.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Read a Private Link Access
      tags:
      - Private Link Accesses (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=SOME_STRING_VALUE");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    patch:
      description: |+
        [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

        Make a request to update a private link access.

      operationId: updateNetworkingV1PrivateLinkAccess
      parameters:
      - description: The unique identifier for the private link access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessUpdate'
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                    required:
                    - environment
                    type: object
                required:
                - spec
                type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
                - properties:
                    spec:
                      required:
                      - cloud
                      - environment
                      - network
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        network:
                          example:
                            id: n-00000
                            related: https://api.confluent.cloud/networking/v1/networks/n-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-00000
                      type: object
                  type: object
          description: Private Link Access.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "402":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "402"
                  code: quota_exceeded
                  title: Kafka Clusters Per Org Quota Exceeded
                  detail: 'The request would exceed the quota: kafka_clusters_per_environment'
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request would exceed one or more quotas.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Over Quota
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api-key: []
      summary: Update a Private Link Access
      tags:
      - Private Link Accesses (networking/v1)
      x-request-access-name: Networking v1
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PATCH \
            --url 'https://api.confluent.cloud/networking/v1/private-link-accesses/{id}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-pl-use1","cloud":{"kind":"AwsPrivateLinkAccess","account":"000000000000"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"string","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}")
            .patch(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses/{id}\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-pl-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPrivateLinkAccess\\\
          \",\\\"account\\\":\\\"000000000000\\\"},\\\"environment\\\":{\\\"id\\\"\
          :\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\
          \"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq,\
          \ _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\"\
          , \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\"\
          )\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\
          \tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\
          \n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PATCH", "/networking/v1/private-link-accesses/{id}", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/private-link-accesses/{id}",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-pl-use1',
              cloud: {kind: 'AwsPrivateLinkAccess', account: '000000000000'},
              environment: {id: 'env-00000', environment: 'string'},
              network: {id: 'string', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses/{id}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}");
          var request = new RestRequest(Method.PATCH);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
    x-request-access-name: Networking v1
components:
  responses:
    BadRequestError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "400"
              code: invalid_filter
              title: Invalid Filter
              detail: The 'delorean' resource can't be filtered by 'num_doors'
              source:
                parameter: num_doors
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    UnauthenticatedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "401"
              code: user_unauthenticated
              title: Authentication Required
              detail: Valid authentication credentials must be provided
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request lacks valid authentication credentials for this resource.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        WWW-Authenticate:
          description: The unique identifier for the API request.
          example: Basic error="invalid_key", error_description="The API Key is invalid"
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Unauthorized
    OverQuotaError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "402"
              code: quota_exceeded
              title: Kafka Clusters Per Org Quota Exceeded
              detail: 'The request would exceed the quota: kafka_clusters_per_environment'
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request would exceed one or more quotas.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Over Quota
    UnauthorizedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "403"
              code: user_unauthorized
              title: User Access Unauthorized
              detail: The user 'mcfly' is not allowed to access the 'delorean' resource
                without the 'plutonium' role.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The access credentials were considered insufficient to grant access
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Forbidden
    ConflictError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "409"
              code: resource_already_exists
              title: Resource Already exists
              detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                exists.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request is in conflict with the current server state
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        Location:
          description: Resource URI of conflicting resource
          explode: false
          schema:
            example: https://api.confluent.cloud/{object}/{id}
            format: uri
            type: string
          style: simple
      x-summary: Conflict
    NotFoundError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "404"
              title: Not Found
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    ValidationError:
      content:
        application/json:
          example:
            errors:
            - status: "422"
              code: invalid_configuration
              id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              title: Validation Failed
              detail: 'The property ''/cluster/storage_size'' of type string did not
                match the following type: integer'
              source:
                pointer: /cluster/storage_size
          schema:
            $ref: '#/components/schemas/Failure'
      description: Validation Failed
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    DefaultSystemError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "500"
              code: out_of_gas
              title: DeLorean Out Of Gas
              detail: The DeLorean has run out of gas, but Doc Brown will fill 'er
                up for you asap
          schema:
            $ref: '#/components/schemas/Failure'
      description: Oops, something went wrong!
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    networking.v1.Network:
      description: |-
        `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
        provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
        Shared networks can contain any cluster type.

        The API allows you to list, create, read, update, and delete your networks.


        Related guide: [APIs to manage networks in Confluent Cloud.](https://docs.confluent.cloud).

        ## The Networks Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - Network
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/networks/n-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-12345
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkSpec'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkStatus'
      type: object
    networking.v1.NetworkStatus:
      description: The status of the Network
      properties:
        phase:
          description: |
            The lifecyle phase of the network:

            PROVISIONING:  network provisioning is in progress;

            READY:  network is ready;

            FAILED: provisioning failed
          example: READY
          readOnly: true
          type: string
          x-extensible-enum:
          - PROVISIONING
          - READY
          - FAILED
        supported_connection_types:
          allOf:
          - $ref: '#/components/schemas/networking.v1.StatusConnectionTypes'
          readOnly: true
        error_code:
          description: Error code if network is in a failed state. May be used for
            programmatic error checking.
          example: insufficient_capacity
          readOnly: true
          type: string
        error_message:
          description: Displayable error message if network is in a failed state
          example: Could not provision cloud resources
          readOnly: true
          type: string
        dns_domain:
          description: The root DNS domain for the network if applicable. Present
            on networks that support PrivateLink.
          example: 00000.us-east-1.aws.glb.confluent.cloud
          readOnly: true
          type: string
        zonal_subdomains:
          additionalProperties:
            type: string
          description: |
            The DNS subdomain for each zone. Present on networks that support PrivateLink. Keys are zones and
            values are DNS domains.
          example:
            use1-az1: use1-az1.00000.us-east-1.aws.confluent.cloud
            use1-az4: use1-az4.00000.us-east-1.aws.confluent.cloud
            use1-az5: use1-az5.00000.us-east-1.aws.confluent.cloud
          readOnly: true
          type: object
        cloud:
          description: The cloud-specific network details. These will be populated
            when the network reaches the READY state.
          discriminator:
            mapping:
              AwsNetwork: '#/components/schemas/networking.v1.AwsNetwork'
              GcpNetwork: '#/components/schemas/networking.v1.GcpNetwork'
              AzureNetwork: '#/components/schemas/networking.v1.AzureNetwork'
            propertyName: kind
          oneOf:
          - $ref: '#/components/schemas/networking.v1.AwsNetwork'
          - $ref: '#/components/schemas/networking.v1.GcpNetwork'
          - $ref: '#/components/schemas/networking.v1.AzureNetwork'
          readOnly: true
          type: object
          x-one-of-name: NetworkingV1NetworkStatusCloudOneOf
      readOnly: true
      required:
      - phase
      - supported_connection_types
      type: object
    networking.v1.Peering:
      description: |-
        VPC Peering Connections

        Related guide: [APIs to manage VPC peering connections.](https://docs.confluent.cloud).

        ## The Peerings Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `peerings_per_network` | Number of peerings per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - Peering
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/peerings/p-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/peering=p-12345
        spec:
          $ref: '#/components/schemas/networking.v1.PeeringSpec'
        status:
          $ref: '#/components/schemas/networking.v1.PeeringStatus'
      type: object
    networking.v1.PeeringStatus:
      description: The status of the Peering
      properties:
        phase:
          description: |
            The lifecycle phase of the peering:
              PROVISIONING: peering provisioning is in progress;
              PENDING_ACCEPT: peering connection request is pending acceptance by the customer;
              READY:  peering is ready;
              FAILED: peering is in a failed state;
              DEPROVISIONING: peering deprovisioning is in progress;
          example: READY
          readOnly: true
          type: string
          x-extensible-enum:
          - PROVISIONING
          - PENDING_ACCEPT
          - READY
          - FAILED
          - DEPROVISIONING
        error_code:
          description: Error code if peering is in a failed state. May be used for
            programmatic error checking.
          readOnly: true
          type: string
        error_message:
          description: Displayable error message if peering is in a failed state
          readOnly: true
          type: string
      readOnly: true
      required:
      - phase
      type: object
    networking.v1.TransitGatewayAttachment:
      description: |-
        AWS Transit Gateway Attachments

        Related guide: [APIs to manage AWS Transit Gateway Attachments.](https://docs.confluent.cloud).

        ## The Transit Gateway Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.TransitGatewayAttachment" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `tgw_attachments_per_network` | Number of TGW attachments per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - TransitGatewayAttachment
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/transit-gateway-attachments/tga-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/transit-gateway-attachment=tga-12345
        spec:
          $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentSpec'
        status:
          $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentStatus'
      type: object
    networking.v1.TransitGatewayAttachmentStatus:
      description: The status of the Transit Gateway Attachment
      properties:
        phase:
          description: |
            The lifecycle phase of the TGW attachment:
              PROVISIONING: attachment provisioning is in progress;
              PENDING_ACCEPT: attachment request is pending acceptance by the customer;
              READY:  attachment is ready;
              FAILED: attachment is in a failed state;
              DEPROVISIONING: attachment deprovisioning is in progress;
          example: READY
          readOnly: true
          type: string
          x-extensible-enum:
          - PROVISIONING
          - READY
          - PENDING_ACCEPT
          - FAILED
          - DEPROVISIONING
        error_code:
          description: Error code if TGW attachment is in a failed state. May be used
            for programmatic error checking.
          readOnly: true
          type: string
        error_message:
          description: Displayable error message if TGW attachment is in a failed
            state
          readOnly: true
          type: string
      readOnly: true
      required:
      - phase
      type: object
    networking.v1.PrivateLinkAccess:
      description: |-
        Add or remove access to PrivateLink endpoints by AWS account or Azure subscription.

        Related guide: [APIs to manage PrivateLink access.](https://docs.confluent.cloud).

        ## The Private Link Accesses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `privatelink_accounts_per_network` | Number of AWS accounts per network |
        | `privatelink_subscriptions_per_network` | Number of Azure subscriptions per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - PrivateLinkAccess
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/private-link-accesses/pla-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-access=pla-12345
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessSpec'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessStatus'
      type: object
    networking.v1.PrivateLinkAccessStatus:
      description: The status of the Private Link Access
      properties:
        phase:
          description: |
            The lifecycle phase of the PrivateLink access configuration:
              PROVISIONING: PrivateLink access provisioning is in progress;
              READY:  PrivateLink access is ready;
              FAILED: PrivateLink access is in a failed state;
              DEPROVISIONING: PrivateLink access deprovisioning is in progress;
          example: READY
          readOnly: true
          type: string
          x-extensible-enum:
          - PROVISIONING
          - READY
          - FAILED
          - DEPROVISIONING
        error_code:
          description: Error code if PrivateLink access is in a failed state. May
            be used for programmatic error checking.
          readOnly: true
          type: string
        error_message:
          description: Displayable error message if PrivateLink access is in a failed
            state
          readOnly: true
          type: string
      readOnly: true
      required:
      - phase
      type: object
    networking.v1.AwsAccount:
      description: AWS account
      example: "000000000000"
      pattern: ^\d{12}$
      type: string
    networking.v1.Cidr:
      description: IPv4 CIDR block
      example: 10.200.0.0/16
      pattern: ^\d+\.\d+\.\d+\.\d+/\d+$
      type: string
    networking.v1.ConnectionType:
      description: Network connection type.
      example: PRIVATELINK
      type: string
      x-extensible-enum:
      - PEERING
      - TRANSITGATEWAY
      - PRIVATELINK
    networking.v1.ConnectionTypes:
      description: The connection types requested for use with the network.
      items:
        $ref: '#/components/schemas/networking.v1.ConnectionType'
      minItems: 1
      type: array
      uniqueItems: true
    networking.v1.StatusConnectionTypes:
      description: The connection types this network supports.
      items:
        $ref: '#/components/schemas/networking.v1.ConnectionType'
      minItems: 1
      type: array
      uniqueItems: true
    networking.v1.AwsNetwork:
      description: The AWS network details.
      properties:
        kind:
          description: Network kind type.
          enum:
          - AwsNetwork
          type: string
        vpc:
          description: The AWS VPC id for the network.
          example: vpc-00000000000000000
          readOnly: true
          type: string
        account:
          description: The AWS account id for the network.
          example: "000000000000"
          readOnly: true
          type: string
        private_link_endpoint_service:
          description: The AWS VPC endpoint service for the network (used for PrivateLink)
            if available.
          example: com.amazonaws.vpce.eu-west-3.vpce-00000000000000000
          readOnly: true
          type: string
      required:
      - account
      - kind
      - vpc
      type: object
    networking.v1.GcpNetwork:
      description: The GCP network details.
      properties:
        kind:
          description: Network kind type.
          enum:
          - GcpNetwork
          type: string
        project:
          description: The GCP project.
          example: cc-prod-3
          readOnly: true
          type: string
        vpc_network:
          description: The GCP VPC network name.
          example: prod-network
          readOnly: true
          type: string
      required:
      - kind
      - project
      - vpc_network
      type: object
    networking.v1.AzureNetwork:
      description: The Azure network details.
      properties:
        kind:
          description: Network kind type.
          enum:
          - AzureNetwork
          type: string
        vnet:
          description: The Azure Virtual Network.
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/prod-group/providers/Microsoft.Network/virtualNetworks/prod-network
          readOnly: true
          type: string
        subscription:
          description: The Azure subscription.
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        private_link_service_aliases:
          additionalProperties:
            type: string
          description: |
            The mapping of zones to PrivateLink Service Aliases if available.  Keys are zones
            and values are [Azure PrivateLink Service
            Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service)
          example:
            "1": 0-00000-privatelink-1.00000000-0000-0000-0000-000000000000.westeurope.azure.privatelinkservice
            "2": 0-00000-privatelink-2.00000000-0000-0000-0000-000000000000.westeurope.azure.privatelinkservice
            "3": 0-00000-privatelink-3.00000000-0000-0000-0000-000000000000.westeurope.azure.privatelinkservice
          readOnly: true
          type: object
      required:
      - kind
      - subscription
      - vnet
      type: object
    networking.v1.AwsPeering:
      description: AWS VPC Peering.
      properties:
        kind:
          description: Peering kind type.
          enum:
          - AwsPeering
          type: string
        account:
          allOf:
          - $ref: '#/components/schemas/networking.v1.AwsAccount'
          description: AWS account for VPC to peer with the network
        vpc:
          description: The id of the AWS VPC to peer with
          example: vpc-00000000000000000
          minLength: 1
          type: string
        routes:
          description: List of routes for the peering
          example:
          - 10.108.16.0/21
          items:
            $ref: '#/components/schemas/networking.v1.Cidr'
          type: array
        customer_region:
          description: Region of customer VPC
          example: us-east-1
          type: string
      required:
      - account
      - customer_region
      - kind
      - routes
      - vpc
      title: AWS
      type: object
    networking.v1.GcpPeering:
      description: GCP VPC Peering.
      properties:
        kind:
          description: Peering kind type.
          enum:
          - GcpPeering
          example: GcpPeering
          type: string
        project:
          description: The name of the GCP project.
          example: my-gcp-project
          minLength: 1
          type: string
        vpc_network:
          description: The name of the GCP VPC network to peer with.
          example: my-gcp-network
          minLength: 1
          type: string
        import_custom_routes:
          default: false
          description: Enable customer route import.
          example: true
          type: boolean
      required:
      - kind
      - project
      - vpc_network
      title: GCP
      type: object
    networking.v1.AzurePeering:
      description: Azure VNet Peering.
      properties:
        kind:
          description: Peering kind type.
          enum:
          - AzurePeering
          type: string
        tenant:
          description: Customer Azure tenant.
          minLength: 1
          type: string
        vnet:
          description: Customer vnet to peer with.
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-rg/providers/Microsoft.Network/virtualNetworks/my-vnet
          minLength: 1
          type: string
        customer_region:
          description: Region of customer VNet
          example: eastus2
          type: string
      required:
      - customer_region
      - kind
      - tenant
      - vnet
      title: AZURE
      type: object
    networking.v1.AwsPrivateLinkAccess:
      description: AWS PrivateLink access configuration.
      properties:
        kind:
          description: PrivateLink kind type.
          enum:
          - AwsPrivateLinkAccess
          type: string
        account:
          allOf:
          - $ref: '#/components/schemas/networking.v1.AwsAccount'
          description: AWS account to allow for PrivateLink access.
      required:
      - account
      - kind
      title: AWS
      type: object
    networking.v1.AzurePrivateLinkAccess:
      description: Azure PrivateLink access configuration.
      properties:
        kind:
          description: PrivateLink kind type.
          enum:
          - AzurePrivateLinkAccess
          type: string
        subscription:
          description: Azure subscription to allow for PrivateLink access.
          minLength: 1
          type: string
      required:
      - kind
      - subscription
      title: AZURE
      type: object
    MultipleSearchFilter:
      description: Filter a collection by a string search for one or more values
      items:
        type: string
      type: array
    SearchFilter:
      description: Filter a collection by a string search
      type: string
    networking.v1.NetworkList:
      description: |-
        `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
        provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
        Shared networks can contain any cluster type.

        The API allows you to list, create, read, update, and delete your networks.


        Related guide: [APIs to manage networks in Confluent Cloud.](https://docs.confluent.cloud).

        ## The Networks Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - NetworkList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/networking/v1/networks
              last:
                example: https://api.confluent.cloud/networking/v1/networks?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/networking/v1/networks?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/networking/v1/networks?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/networking.v1.Network'
            - properties:
                spec:
                  required:
                  - cloud
                  - connection_types
                  - environment
                  - region
                  type: object
              required:
              - id
              - metadata
              - spec
              - status
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    networking.v1.NetworkSpec:
      description: The desired state of the Network
      properties:
        display_name:
          description: The name of the Network
          example: prod-gcp-us-central1
          type: string
        cloud:
          description: The cloud service provider in which the network exists.
          example: GCP
          type: string
          x-extensible-enum:
          - AWS
          - GCP
          - AZURE
          x-immutable: true
        region:
          description: The service provider region where the cluster is running.
          example: us-central1
          type: string
          x-immutable: true
        connection_types:
          allOf:
          - $ref: '#/components/schemas/networking.v1.ConnectionTypes'
          x-immutable: true
        cidr:
          allOf:
          - $ref: '#/components/schemas/networking.v1.Cidr'
          description: The IPv4 CIDR block to used for this network.  Must be /16.
            Required for VPC peering and AWS TransitGateway.
          example: 10.200.0.0/16
          x-immutable: true
        zones:
          description: |
            The 3 availability zones for this network. They can optionally be specified for AWS networks
            used with PrivateLink. Otherwise, they are automatically chosen by Confluent Cloud.

            On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html)
             (e.g. use1-az3)

            On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones)
             (e.g. us-central1-c).

            On Azure, zones are Confluent-chosen names (e.g. 1, 2, 3) since Azure does not
             have universal zone identifiers.
          example:
          - us-central1-a
          - us-central1-b
          - us-central1-c
          items:
            type: string
          maxItems: 3
          minItems: 3
          type: array
          uniqueItems: true
          x-immutable: true
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PeeringList:
      description: |-
        VPC Peering Connections

        Related guide: [APIs to manage VPC peering connections.](https://docs.confluent.cloud).

        ## The Peerings Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `peerings_per_network` | Number of peerings per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - PeeringList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/networking/v1/peerings
              last:
                example: https://api.confluent.cloud/networking/v1/peerings?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/networking/v1/peerings?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/networking/v1/peerings?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/networking.v1.Peering'
            - properties:
                spec:
                  required:
                  - cloud
                  - environment
                  - network
                  type: object
              required:
              - id
              - metadata
              - spec
              - status
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    networking.v1.PeeringSpec:
      description: The desired state of the Peering
      properties:
        display_name:
          description: The name of the Peering
          example: prod-peering-use1
          type: string
        cloud:
          description: The cloud-specific peering details.
          discriminator:
            mapping:
              AwsPeering: '#/components/schemas/networking.v1.AwsPeering'
              GcpPeering: '#/components/schemas/networking.v1.GcpPeering'
              AzurePeering: '#/components/schemas/networking.v1.AzurePeering'
            propertyName: kind
          oneOf:
          - $ref: '#/components/schemas/networking.v1.AwsPeering'
          - $ref: '#/components/schemas/networking.v1.GcpPeering'
          - $ref: '#/components/schemas/networking.v1.AzurePeering'
          type: object
          x-immutable: true
          x-one-of-name: NetworkingV1PeeringSpecCloudOneOf
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The network to which this belongs.
          x-immutable: true
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.TransitGatewayAttachmentList:
      description: |-
        AWS Transit Gateway Attachments

        Related guide: [APIs to manage AWS Transit Gateway Attachments.](https://docs.confluent.cloud).

        ## The Transit Gateway Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.TransitGatewayAttachment" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `tgw_attachments_per_network` | Number of TGW attachments per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - TransitGatewayAttachmentList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/networking/v1/transit-gateway-attachments
              last:
                example: https://api.confluent.cloud/networking/v1/transit-gateway-attachments?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/networking/v1/transit-gateway-attachments?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/networking/v1/transit-gateway-attachments?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachment'
            - properties:
                spec:
                  required:
                  - environment
                  - network
                  - ram_share_arn
                  type: object
              required:
              - id
              - metadata
              - spec
              - status
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    networking.v1.TransitGatewayAttachmentSpec:
      description: The desired state of the Transit Gateway Attachment
      properties:
        display_name:
          description: The name of the TGW attachment
          example: prod-tgw-use1
          type: string
        ram_share_arn:
          description: The full AWS Resource Name (ARN) for the AWS Resource Access
            Manager (RAM) Share of the Transit Gateways that you want Confluent Cloud
            attached to
          example: arn:aws:ram:eu-west-1:000000000000:resource-share/000000000
          minLength: 1
          type: string
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The network to which this belongs.
          x-immutable: true
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PrivateLinkAccessList:
      description: |-
        Add or remove access to PrivateLink endpoints by AWS account or Azure subscription.

        Related guide: [APIs to manage PrivateLink access.](https://docs.confluent.cloud).

        ## The Private Link Accesses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `privatelink_accounts_per_network` | Number of AWS accounts per network |
        | `privatelink_subscriptions_per_network` | Number of Azure subscriptions per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - PrivateLinkAccessList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/networking/v1/private-link-accesses
              last:
                example: https://api.confluent.cloud/networking/v1/private-link-accesses?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/networking/v1/private-link-accesses?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/networking/v1/private-link-accesses?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
            - properties:
                spec:
                  required:
                  - cloud
                  - environment
                  - network
                  type: object
              required:
              - id
              - metadata
              - spec
              - status
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    networking.v1.PrivateLinkAccessSpec:
      description: The desired state of the Private Link Access
      properties:
        display_name:
          description: The name of the PrivateLink access
          example: prod-pl-use1
          type: string
        cloud:
          description: The cloud-specific PrivateLink details.
          discriminator:
            mapping:
              AwsPrivateLinkAccess: '#/components/schemas/networking.v1.AwsPrivateLinkAccess'
              AzurePrivateLinkAccess: '#/components/schemas/networking.v1.AzurePrivateLinkAccess'
            propertyName: kind
          oneOf:
          - $ref: '#/components/schemas/networking.v1.AwsPrivateLinkAccess'
          - $ref: '#/components/schemas/networking.v1.AzurePrivateLinkAccess'
          type: object
          x-immutable: true
          x-one-of-name: NetworkingV1PrivateLinkAccessSpecCloudOneOf
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The network to which this belongs.
          x-immutable: true
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    ObjectMeta:
      description: ObjectMeta is metadata that all persisted resources must have,
        which includes all objects users must create.
      properties:
        self:
          description: Self is a Uniform Resource Locator (URL) at which an object
            can be addressed. This URL encodes the service location, API version,
            and other particulars necessary to locate the resource at a point in time
          example: https://api.confluent.cloud/v2/kafka-clusters/lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        resource_name:
          description: Resource Name is a Uniform Resource Identifier (URI) that is
            globally unique across space and time. It is represented as a Confluent
            Resource Name
          example: crn://confluent.cloud/kafka=lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        created_at:
          description: The date and time at which this object was created. It is represented
            in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: The date and time at which this object was last updated. It
            is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        deleted_at:
          description: The date and time at which this object was (or will be) deleted.
            It is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
      readOnly: true
      required:
      - self
    ListMeta:
      description: ListMeta describes metadata that resource collections may have
      properties:
        first:
          description: A link to the first page of results. If a response does not
            contain a first link, then direct navigation to the first page is not
            supported.
          example: https://api.confluent.cloud/v2/resourcekinds
          format: uri
          nullable: true
          type: string
        last:
          description: A link to the last page of results. If a response does not
            contain a last link, then direct navigation to the last page is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=bcAOehAY8F16YD84Z1wT
          format: uri
          nullable: true
          type: string
        prev:
          description: A link to the previous page of results. If a response does
            not contain a prev link, then either there is no previous data or backwards
            traversal through the result set is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=YIXRY97wWYmwzrax4dld
          format: uri
          nullable: true
          type: string
        next:
          description: A link to the next page of results. If a response does not
            contain a next link, then there is no more data available.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=UvmDWOB1iwfAIBPj6EYb
          format: uri
          nullable: true
          type: string
        total_size:
          description: Number of records in the full result set. This response may
            be paginated and have a smaller number of records.
          example: 123
          format: int32
          minimum: 0
          type: integer
      type: object
    ObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        environment:
          description: Environment of the referred resource, if env-scoped
          maxLength: 255
          minLength: 1
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
        api_version:
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
          type: string
        kind:
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    Failure:
      description: Provides information about problems encountered while performing
        an operation.
      properties:
        errors:
          description: List of errors which caused this operation to fail
          items:
            $ref: '#/components/schemas/Error'
          type: array
          uniqueItems: true
      required:
      - errors
      type: object
    Error:
      description: Describes a particular error encountered while performing an operation.
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          maxLength: 255
          type: string
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          type: string
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        title:
          description: A short, human-readable summary of the problem. It **SHOULD
            NOT** change from occurrence to occurrence of the problem, except for
            purposes of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        source:
          $ref: '#/components/schemas/Error_source'
      type: object
    networking.v1.NetworkSpecUpdate:
      description: The desired state of the Network
      properties:
        display_name:
          description: The name of the Network
          example: prod-gcp-us-central1
          type: string
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkUpdate:
      description: |-
        `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
        provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
        Shared networks can contain any cluster type.

        The API allows you to list, create, read, update, and delete your networks.


        Related guide: [APIs to manage networks in Confluent Cloud.](https://docs.confluent.cloud).

        ## The Networks Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - Network
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/networks/n-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/network=n-12345
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkStatus'
      type: object
    networking.v1.PeeringSpecUpdate:
      description: The desired state of the Peering
      properties:
        display_name:
          description: The name of the Peering
          example: prod-peering-use1
          type: string
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PeeringUpdate:
      description: |-
        VPC Peering Connections

        Related guide: [APIs to manage VPC peering connections.](https://docs.confluent.cloud).

        ## The Peerings Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `peerings_per_network` | Number of peerings per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - Peering
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/peerings/p-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/peering=p-12345
        spec:
          $ref: '#/components/schemas/networking.v1.PeeringSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.PeeringStatus'
      type: object
    networking.v1.PrivateLinkAccessSpecUpdate:
      description: The desired state of the Private Link Access
      properties:
        display_name:
          description: The name of the PrivateLink access
          example: prod-pl-use1
          type: string
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PrivateLinkAccessUpdate:
      description: |-
        Add or remove access to PrivateLink endpoints by AWS account or Azure subscription.

        Related guide: [APIs to manage PrivateLink access.](https://docs.confluent.cloud).

        ## The Private Link Accesses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

        ## Quotas and Limits
        This resource is subject to the following quotas:

        | Quota | Description |
        | --- | --- |
        | `privatelink_accounts_per_network` | Number of AWS accounts per network |
        | `privatelink_subscriptions_per_network` | Number of Azure subscriptions per network |
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - PrivateLinkAccess
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/private-link-accesses/pla-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-access=pla-12345
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessStatus'
      type: object
    Error_source:
      description: If this error was caused by a particular part of the API request,
        the source will point to the query string parameter or request body property
        that caused it.
      properties:
        pointer:
          description: A JSON Pointer [RFC6901] to the associated entity in the request
            document [e.g. "/spec" for a spec object, or "/spec/title" for a specific
            field].
          type: string
        parameter:
          description: A string indicating which query parameter caused the error.
          type: string
      type: object
  securitySchemes:
    api-key:
      description: Authenticate with API Keys using HTTP Basic Auth. Treat the API
        Key ID as the username and API Key Secret as the password.
      scheme: basic
      type: http
