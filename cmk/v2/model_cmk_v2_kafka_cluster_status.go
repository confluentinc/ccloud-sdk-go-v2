/*
 * Cluster Management for Apache Kafka API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1-alpha1
 * Contact: orchestrator-team@confluent.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmk

import (
	"encoding/json"
)

// CmkV2KafkaClusterStatus The status of the Kafka Cluster
type CmkV2KafkaClusterStatus struct {
	// The lifecyle phase of the cluster:   PROVISIONED:  cluster is provisioned;   PROVISIONING:  cluster provisioning is in progress;   FAILED:  provisioning failed 
	Phase string `json:"phase"`
}

// NewCmkV2KafkaClusterStatus instantiates a new CmkV2KafkaClusterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmkV2KafkaClusterStatus(phase string) *CmkV2KafkaClusterStatus {
	this := CmkV2KafkaClusterStatus{}
	this.Phase = phase
	return &this
}

// NewCmkV2KafkaClusterStatusWithDefaults instantiates a new CmkV2KafkaClusterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmkV2KafkaClusterStatusWithDefaults() *CmkV2KafkaClusterStatus {
	this := CmkV2KafkaClusterStatus{}
	return &this
}

// GetPhase returns the Phase field value
func (o *CmkV2KafkaClusterStatus) GetPhase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value
// and a boolean to check if the value has been set.
func (o *CmkV2KafkaClusterStatus) GetPhaseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Phase, true
}

// SetPhase sets field value
func (o *CmkV2KafkaClusterStatus) SetPhase(v string) {
	o.Phase = v
}

func (o CmkV2KafkaClusterStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["phase"] = o.Phase
	}
	return json.Marshal(toSerialize)
}

type NullableCmkV2KafkaClusterStatus struct {
	value *CmkV2KafkaClusterStatus
	isSet bool
}

func (v NullableCmkV2KafkaClusterStatus) Get() *CmkV2KafkaClusterStatus {
	return v.value
}

func (v *NullableCmkV2KafkaClusterStatus) Set(val *CmkV2KafkaClusterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCmkV2KafkaClusterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCmkV2KafkaClusterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmkV2KafkaClusterStatus(val *CmkV2KafkaClusterStatus) *NullableCmkV2KafkaClusterStatus {
	return &NullableCmkV2KafkaClusterStatus{value: val, isSet: true}
}

func (v NullableCmkV2KafkaClusterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmkV2KafkaClusterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


