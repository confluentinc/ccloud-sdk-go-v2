// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Network Admin APIs

# Introduction  Networking Admin API provides resources/APIs which are not applicable for broader user access. Currently, they are cater to scenarios required by the Confluent Cloud Admin Dashboard. 

API version: 0.0.1-alpha1
Contact: cire-traffic@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf - struct for NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf
type NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf struct {
	NetworkingAdminV1AwsTransitGatewayAttachment *NetworkingAdminV1AwsTransitGatewayAttachment
}

// NetworkingAdminV1AwsTransitGatewayAttachmentAsNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf is a convenience function that returns NetworkingAdminV1AwsTransitGatewayAttachment wrapped in NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf
func NetworkingAdminV1AwsTransitGatewayAttachmentAsNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf(v *NetworkingAdminV1AwsTransitGatewayAttachment) NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf {
	return NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf{ NetworkingAdminV1AwsTransitGatewayAttachment: v}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = json.Unmarshal(data, &jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discriminator lookup.")
	}

	// check if the discriminator value is 'AwsTransitGatewayAttachment'
	if jsonDict["kind"] == "AwsTransitGatewayAttachment" {
		// try to unmarshal JSON data into NetworkingAdminV1AwsTransitGatewayAttachment
		err = json.Unmarshal(data, &dst.NetworkingAdminV1AwsTransitGatewayAttachment)
		if err == nil {
			return nil // data stored in dst.NetworkingAdminV1AwsTransitGatewayAttachment, return on the first match
		} else {
			dst.NetworkingAdminV1AwsTransitGatewayAttachment = nil
			return fmt.Errorf("Failed to unmarshal NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf as NetworkingAdminV1AwsTransitGatewayAttachment: %s", err.Error())
		}
	}

	// check if the discriminator value is 'networking-admin.v1.AwsTransitGatewayAttachment'
	if jsonDict["kind"] == "networking-admin.v1.AwsTransitGatewayAttachment" {
		// try to unmarshal JSON data into NetworkingAdminV1AwsTransitGatewayAttachment
		err = json.Unmarshal(data, &dst.NetworkingAdminV1AwsTransitGatewayAttachment)
		if err == nil {
			return nil // data stored in dst.NetworkingAdminV1AwsTransitGatewayAttachment, return on the first match
		} else {
			dst.NetworkingAdminV1AwsTransitGatewayAttachment = nil
			return fmt.Errorf("Failed to unmarshal NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf as NetworkingAdminV1AwsTransitGatewayAttachment: %s", err.Error())
		}
	}

	return nil
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) MarshalJSON() ([]byte, error) {
	if src.NetworkingAdminV1AwsTransitGatewayAttachment != nil {
		return json.Marshal(&src.NetworkingAdminV1AwsTransitGatewayAttachment)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) GetActualInstance() (interface{}) {
	if obj.NetworkingAdminV1AwsTransitGatewayAttachment != nil {
		return obj.NetworkingAdminV1AwsTransitGatewayAttachment
	}

	// all schemas are nil
	return nil
}

type NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf struct {
	value *NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf
	isSet bool
}

func (v NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) Get() *NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf {
	return v.value
}

func (v *NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) Set(val *NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf(val *NetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) *NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf {
	return &NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf{value: val, isSet: true}
}

func (v NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkingAdminV1TransitGatewayAttachmentSpecCloudOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


