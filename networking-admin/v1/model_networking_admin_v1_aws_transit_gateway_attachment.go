// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Network Admin APIs

# Introduction  Networking Admin API provides resources/APIs which are not applicable for broader user access. Currently, they are cater to scenarios required by the Confluent Cloud Admin Dashboard. 

API version: 0.0.1-alpha1
Contact: cire-traffic@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

import (
	"reflect"
)

// NetworkingAdminV1AwsTransitGatewayAttachment AWS Transit Gateway Attachment.
type NetworkingAdminV1AwsTransitGatewayAttachment struct {
	// AWS Transit Gateway Attachment kind type.
	Kind string `json:"kind"`
	// The full AWS Resource Name (ARN) for the AWS Resource Access Manager (RAM) Share of the Transit Gateways that you want Confluent Cloud attached to.
	RamShareArn string `json:"ram_share_arn"`
	// The ID for the AWS Transit Gateway that you want Confluent CLoud attached to.
	TransitGatewayId string `json:"transit_gateway_id"`
	// The ID for the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId *string `json:"transit_gateway_attachment_id,omitempty"`
	// Enable custom destination routes in Confluent Cloud.
	EnableCustomRoutes *bool `json:"enable_custom_routes,omitempty"`
	// List of destination routes.
	Routes *[]string `json:"routes,omitempty"`
}

// NewNetworkingAdminV1AwsTransitGatewayAttachment instantiates a new NetworkingAdminV1AwsTransitGatewayAttachment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingAdminV1AwsTransitGatewayAttachment(kind string, ramShareArn string, transitGatewayId string) *NetworkingAdminV1AwsTransitGatewayAttachment {
	this := NetworkingAdminV1AwsTransitGatewayAttachment{}
	this.Kind = kind
	this.RamShareArn = ramShareArn
	this.TransitGatewayId = transitGatewayId
	var enableCustomRoutes bool = false
	this.EnableCustomRoutes = &enableCustomRoutes
	return &this
}

// NewNetworkingAdminV1AwsTransitGatewayAttachmentWithDefaults instantiates a new NetworkingAdminV1AwsTransitGatewayAttachment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingAdminV1AwsTransitGatewayAttachmentWithDefaults() *NetworkingAdminV1AwsTransitGatewayAttachment {
	this := NetworkingAdminV1AwsTransitGatewayAttachment{}
	var enableCustomRoutes bool = false
	this.EnableCustomRoutes = &enableCustomRoutes
	return &this
}

// GetKind returns the Kind field value
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetKindOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) SetKind(v string) {
	o.Kind = v
}

// GetRamShareArn returns the RamShareArn field value
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetRamShareArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RamShareArn
}

// GetRamShareArnOk returns a tuple with the RamShareArn field value
// and a boolean to check if the value has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetRamShareArnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RamShareArn, true
}

// SetRamShareArn sets field value
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) SetRamShareArn(v string) {
	o.RamShareArn = v
}

// GetTransitGatewayId returns the TransitGatewayId field value
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetTransitGatewayId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransitGatewayId
}

// GetTransitGatewayIdOk returns a tuple with the TransitGatewayId field value
// and a boolean to check if the value has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetTransitGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransitGatewayId, true
}

// SetTransitGatewayId sets field value
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) SetTransitGatewayId(v string) {
	o.TransitGatewayId = v
}

// GetTransitGatewayAttachmentId returns the TransitGatewayAttachmentId field value if set, zero value otherwise.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetTransitGatewayAttachmentId() string {
	if o == nil || o.TransitGatewayAttachmentId == nil {
		var ret string
		return ret
	}
	return *o.TransitGatewayAttachmentId
}

// GetTransitGatewayAttachmentIdOk returns a tuple with the TransitGatewayAttachmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetTransitGatewayAttachmentIdOk() (*string, bool) {
	if o == nil || o.TransitGatewayAttachmentId == nil {
		return nil, false
	}
	return o.TransitGatewayAttachmentId, true
}

// HasTransitGatewayAttachmentId returns a boolean if a field has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) HasTransitGatewayAttachmentId() bool {
	if o != nil && o.TransitGatewayAttachmentId != nil {
		return true
	}

	return false
}

// SetTransitGatewayAttachmentId gets a reference to the given string and assigns it to the TransitGatewayAttachmentId field.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) SetTransitGatewayAttachmentId(v string) {
	o.TransitGatewayAttachmentId = &v
}

// GetEnableCustomRoutes returns the EnableCustomRoutes field value if set, zero value otherwise.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetEnableCustomRoutes() bool {
	if o == nil || o.EnableCustomRoutes == nil {
		var ret bool
		return ret
	}
	return *o.EnableCustomRoutes
}

// GetEnableCustomRoutesOk returns a tuple with the EnableCustomRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetEnableCustomRoutesOk() (*bool, bool) {
	if o == nil || o.EnableCustomRoutes == nil {
		return nil, false
	}
	return o.EnableCustomRoutes, true
}

// HasEnableCustomRoutes returns a boolean if a field has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) HasEnableCustomRoutes() bool {
	if o != nil && o.EnableCustomRoutes != nil {
		return true
	}

	return false
}

// SetEnableCustomRoutes gets a reference to the given bool and assigns it to the EnableCustomRoutes field.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) SetEnableCustomRoutes(v bool) {
	o.EnableCustomRoutes = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetRoutes() []string {
	if o == nil || o.Routes == nil {
		var ret []string
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) GetRoutesOk() (*[]string, bool) {
	if o == nil || o.Routes == nil {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []string and assigns it to the Routes field.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) SetRoutes(v []string) {
	o.Routes = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *NetworkingAdminV1AwsTransitGatewayAttachment) Redact() {
    o.recurseRedact(&o.Kind)
    o.recurseRedact(&o.RamShareArn)
    o.recurseRedact(&o.TransitGatewayId)
    o.recurseRedact(o.TransitGatewayAttachmentId)
    o.recurseRedact(o.EnableCustomRoutes)
    o.recurseRedact(o.Routes)
}

func (o *NetworkingAdminV1AwsTransitGatewayAttachment) recurseRedact(v interface{}) {
    type redactor interface {
        Redact()
    }
    if r, ok := v.(redactor); ok {
        r.Redact()
    } else {
        val := reflect.ValueOf(v)
        if val.Kind() == reflect.Ptr {
            val = val.Elem()
        }
        switch val.Kind() {
        case reflect.Slice, reflect.Array:
            for i := 0; i < val.Len(); i++ {
                // support data types declared without pointers
                o.recurseRedact(val.Index(i).Interface())
                // ... and data types that were declared without but need pointers (for Redact)
                if val.Index(i).CanAddr() {
                    o.recurseRedact(val.Index(i).Addr().Interface())
                }
            }
        }
    }
}

func (o NetworkingAdminV1AwsTransitGatewayAttachment) zeroField(v interface{}) {
    p := reflect.ValueOf(v).Elem()
    p.Set(reflect.Zero(p.Type()))
}

func (o NetworkingAdminV1AwsTransitGatewayAttachment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["ram_share_arn"] = o.RamShareArn
	}
	if true {
		toSerialize["transit_gateway_id"] = o.TransitGatewayId
	}
	if o.TransitGatewayAttachmentId != nil {
		toSerialize["transit_gateway_attachment_id"] = o.TransitGatewayAttachmentId
	}
	if o.EnableCustomRoutes != nil {
		toSerialize["enable_custom_routes"] = o.EnableCustomRoutes
	}
	if o.Routes != nil {
		toSerialize["routes"] = o.Routes
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkingAdminV1AwsTransitGatewayAttachment struct {
	value *NetworkingAdminV1AwsTransitGatewayAttachment
	isSet bool
}

func (v NullableNetworkingAdminV1AwsTransitGatewayAttachment) Get() *NetworkingAdminV1AwsTransitGatewayAttachment {
	return v.value
}

func (v *NullableNetworkingAdminV1AwsTransitGatewayAttachment) Set(val *NetworkingAdminV1AwsTransitGatewayAttachment) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingAdminV1AwsTransitGatewayAttachment) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingAdminV1AwsTransitGatewayAttachment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingAdminV1AwsTransitGatewayAttachment(val *NetworkingAdminV1AwsTransitGatewayAttachment) *NullableNetworkingAdminV1AwsTransitGatewayAttachment {
	return &NullableNetworkingAdminV1AwsTransitGatewayAttachment{value: val, isSet: true}
}

func (v NullableNetworkingAdminV1AwsTransitGatewayAttachment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkingAdminV1AwsTransitGatewayAttachment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


