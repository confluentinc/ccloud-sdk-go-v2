// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
REST Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.0
Contact: kafka-clients-proxy-team@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

import (
	"reflect"
)

// CreateTopicRequestDataReplicasAssignments struct for CreateTopicRequestDataReplicasAssignments
type CreateTopicRequestDataReplicasAssignments struct {
	PartitionId int32   `json:"partition_id"`
	BrokerIds   []int32 `json:"broker_ids"`
}

// NewCreateTopicRequestDataReplicasAssignments instantiates a new CreateTopicRequestDataReplicasAssignments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTopicRequestDataReplicasAssignments(partitionId int32, brokerIds []int32) *CreateTopicRequestDataReplicasAssignments {
	this := CreateTopicRequestDataReplicasAssignments{}
	this.PartitionId = partitionId
	this.BrokerIds = brokerIds
	return &this
}

// NewCreateTopicRequestDataReplicasAssignmentsWithDefaults instantiates a new CreateTopicRequestDataReplicasAssignments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTopicRequestDataReplicasAssignmentsWithDefaults() *CreateTopicRequestDataReplicasAssignments {
	this := CreateTopicRequestDataReplicasAssignments{}
	return &this
}

// GetPartitionId returns the PartitionId field value
func (o *CreateTopicRequestDataReplicasAssignments) GetPartitionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartitionId
}

// GetPartitionIdOk returns a tuple with the PartitionId field value
// and a boolean to check if the value has been set.
func (o *CreateTopicRequestDataReplicasAssignments) GetPartitionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartitionId, true
}

// SetPartitionId sets field value
func (o *CreateTopicRequestDataReplicasAssignments) SetPartitionId(v int32) {
	o.PartitionId = v
}

// GetBrokerIds returns the BrokerIds field value
func (o *CreateTopicRequestDataReplicasAssignments) GetBrokerIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.BrokerIds
}

// GetBrokerIdsOk returns a tuple with the BrokerIds field value
// and a boolean to check if the value has been set.
func (o *CreateTopicRequestDataReplicasAssignments) GetBrokerIdsOk() (*[]int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrokerIds, true
}

// SetBrokerIds sets field value
func (o *CreateTopicRequestDataReplicasAssignments) SetBrokerIds(v []int32) {
	o.BrokerIds = v
}

// Redact resets all sensitive fields to their zero value.
func (o *CreateTopicRequestDataReplicasAssignments) Redact() {
	o.recurseRedact(&o.PartitionId)
	o.recurseRedact(&o.BrokerIds)
}

func (o *CreateTopicRequestDataReplicasAssignments) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o CreateTopicRequestDataReplicasAssignments) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o CreateTopicRequestDataReplicasAssignments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["partition_id"] = o.PartitionId
	}
	if true {
		toSerialize["broker_ids"] = o.BrokerIds
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTopicRequestDataReplicasAssignments struct {
	value *CreateTopicRequestDataReplicasAssignments
	isSet bool
}

func (v NullableCreateTopicRequestDataReplicasAssignments) Get() *CreateTopicRequestDataReplicasAssignments {
	return v.value
}

func (v *NullableCreateTopicRequestDataReplicasAssignments) Set(val *CreateTopicRequestDataReplicasAssignments) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTopicRequestDataReplicasAssignments) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTopicRequestDataReplicasAssignments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTopicRequestDataReplicasAssignments(val *CreateTopicRequestDataReplicasAssignments) *NullableCreateTopicRequestDataReplicasAssignments {
	return &NullableCreateTopicRequestDataReplicasAssignments{value: val, isSet: true}
}

func (v NullableCreateTopicRequestDataReplicasAssignments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTopicRequestDataReplicasAssignments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
