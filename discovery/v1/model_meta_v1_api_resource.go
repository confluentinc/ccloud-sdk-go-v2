/*
 * Discovery API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1-alpha0
 * Contact: api-framework-team@confluent.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// MetaV1APIResource `APIGroup` objects represent the various APIs supported by Confluent Cloud.
type MetaV1APIResource struct {
	// APIVersion defines the schema version of this representation of a resource.
	ApiVersion *string `json:"api_version,omitempty"`
	// Kind defines the object this REST resource represents.
	Kind *string `json:"kind,omitempty"`
	// ID is the \"natural identifier\" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted (\"time\"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace (\"space\").
	Id *string `json:"id,omitempty"`
	Metadata *ObjectMeta `json:"metadata,omitempty"`
	// The resource kind
	ResourceKind *string `json:"resource_kind,omitempty"`
	ResourceVersion *MetaV1GroupVersion `json:"resource_version,omitempty"`
	// The resource name
	PluralName *string `json:"plural_name,omitempty"`
	// The resource name
	SingularName *string `json:"singular_name,omitempty"`
	// A list of supported operations for this resource
	Verbs *[]string `json:"verbs,omitempty"`
	// A list of suggested short names for the resource
	ShortNames *[]string `json:"short_names,omitempty"`
}

// NewMetaV1APIResource instantiates a new MetaV1APIResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaV1APIResource() *MetaV1APIResource {
	this := MetaV1APIResource{}
	return &this
}

// NewMetaV1APIResourceWithDefaults instantiates a new MetaV1APIResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaV1APIResourceWithDefaults() *MetaV1APIResource {
	this := MetaV1APIResource{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *MetaV1APIResource) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *MetaV1APIResource) SetKind(v string) {
	o.Kind = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MetaV1APIResource) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetMetadata() ObjectMeta {
	if o == nil || o.Metadata == nil {
		var ret ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetMetadataOk() (*ObjectMeta, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ObjectMeta and assigns it to the Metadata field.
func (o *MetaV1APIResource) SetMetadata(v ObjectMeta) {
	o.Metadata = &v
}

// GetResourceKind returns the ResourceKind field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetResourceKind() string {
	if o == nil || o.ResourceKind == nil {
		var ret string
		return ret
	}
	return *o.ResourceKind
}

// GetResourceKindOk returns a tuple with the ResourceKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetResourceKindOk() (*string, bool) {
	if o == nil || o.ResourceKind == nil {
		return nil, false
	}
	return o.ResourceKind, true
}

// HasResourceKind returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasResourceKind() bool {
	if o != nil && o.ResourceKind != nil {
		return true
	}

	return false
}

// SetResourceKind gets a reference to the given string and assigns it to the ResourceKind field.
func (o *MetaV1APIResource) SetResourceKind(v string) {
	o.ResourceKind = &v
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetResourceVersion() MetaV1GroupVersion {
	if o == nil || o.ResourceVersion == nil {
		var ret MetaV1GroupVersion
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetResourceVersionOk() (*MetaV1GroupVersion, bool) {
	if o == nil || o.ResourceVersion == nil {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasResourceVersion() bool {
	if o != nil && o.ResourceVersion != nil {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given MetaV1GroupVersion and assigns it to the ResourceVersion field.
func (o *MetaV1APIResource) SetResourceVersion(v MetaV1GroupVersion) {
	o.ResourceVersion = &v
}

// GetPluralName returns the PluralName field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetPluralName() string {
	if o == nil || o.PluralName == nil {
		var ret string
		return ret
	}
	return *o.PluralName
}

// GetPluralNameOk returns a tuple with the PluralName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetPluralNameOk() (*string, bool) {
	if o == nil || o.PluralName == nil {
		return nil, false
	}
	return o.PluralName, true
}

// HasPluralName returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasPluralName() bool {
	if o != nil && o.PluralName != nil {
		return true
	}

	return false
}

// SetPluralName gets a reference to the given string and assigns it to the PluralName field.
func (o *MetaV1APIResource) SetPluralName(v string) {
	o.PluralName = &v
}

// GetSingularName returns the SingularName field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetSingularName() string {
	if o == nil || o.SingularName == nil {
		var ret string
		return ret
	}
	return *o.SingularName
}

// GetSingularNameOk returns a tuple with the SingularName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetSingularNameOk() (*string, bool) {
	if o == nil || o.SingularName == nil {
		return nil, false
	}
	return o.SingularName, true
}

// HasSingularName returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasSingularName() bool {
	if o != nil && o.SingularName != nil {
		return true
	}

	return false
}

// SetSingularName gets a reference to the given string and assigns it to the SingularName field.
func (o *MetaV1APIResource) SetSingularName(v string) {
	o.SingularName = &v
}

// GetVerbs returns the Verbs field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetVerbs() []string {
	if o == nil || o.Verbs == nil {
		var ret []string
		return ret
	}
	return *o.Verbs
}

// GetVerbsOk returns a tuple with the Verbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetVerbsOk() (*[]string, bool) {
	if o == nil || o.Verbs == nil {
		return nil, false
	}
	return o.Verbs, true
}

// HasVerbs returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasVerbs() bool {
	if o != nil && o.Verbs != nil {
		return true
	}

	return false
}

// SetVerbs gets a reference to the given []string and assigns it to the Verbs field.
func (o *MetaV1APIResource) SetVerbs(v []string) {
	o.Verbs = &v
}

// GetShortNames returns the ShortNames field value if set, zero value otherwise.
func (o *MetaV1APIResource) GetShortNames() []string {
	if o == nil || o.ShortNames == nil {
		var ret []string
		return ret
	}
	return *o.ShortNames
}

// GetShortNamesOk returns a tuple with the ShortNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaV1APIResource) GetShortNamesOk() (*[]string, bool) {
	if o == nil || o.ShortNames == nil {
		return nil, false
	}
	return o.ShortNames, true
}

// HasShortNames returns a boolean if a field has been set.
func (o *MetaV1APIResource) HasShortNames() bool {
	if o != nil && o.ShortNames != nil {
		return true
	}

	return false
}

// SetShortNames gets a reference to the given []string and assigns it to the ShortNames field.
func (o *MetaV1APIResource) SetShortNames(v []string) {
	o.ShortNames = &v
}

func (o MetaV1APIResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api_version"] = o.ApiVersion
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.ResourceKind != nil {
		toSerialize["resource_kind"] = o.ResourceKind
	}
	if o.ResourceVersion != nil {
		toSerialize["resource_version"] = o.ResourceVersion
	}
	if o.PluralName != nil {
		toSerialize["plural_name"] = o.PluralName
	}
	if o.SingularName != nil {
		toSerialize["singular_name"] = o.SingularName
	}
	if o.Verbs != nil {
		toSerialize["verbs"] = o.Verbs
	}
	if o.ShortNames != nil {
		toSerialize["short_names"] = o.ShortNames
	}
	return json.Marshal(toSerialize)
}

type NullableMetaV1APIResource struct {
	value *MetaV1APIResource
	isSet bool
}

func (v NullableMetaV1APIResource) Get() *MetaV1APIResource {
	return v.value
}

func (v *NullableMetaV1APIResource) Set(val *MetaV1APIResource) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaV1APIResource) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaV1APIResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaV1APIResource(val *MetaV1APIResource) *NullableMetaV1APIResource {
	return &NullableMetaV1APIResource{value: val, isSet: true}
}

func (v NullableMetaV1APIResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaV1APIResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


