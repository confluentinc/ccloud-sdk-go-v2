/*
 * Discovery API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1-alpha0
 * Contact: api-framework-team@confluent.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// MetaV1APIGroupList `APIGroup` objects represent the various APIs supported by Confluent Cloud.
type MetaV1APIGroupList struct {
	// APIVersion defines the schema version of this representation of a resource.
	ApiVersion string `json:"api_version"`
	// Kind defines the object this REST resource represents.
	Kind string `json:"kind"`
	Metadata ListMeta `json:"metadata"`
	Data []MetaV1APIGroup `json:"data"`
}

// NewMetaV1APIGroupList instantiates a new MetaV1APIGroupList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaV1APIGroupList(apiVersion string, kind string, metadata ListMeta, data []MetaV1APIGroup) *MetaV1APIGroupList {
	this := MetaV1APIGroupList{}
	this.ApiVersion = apiVersion
	this.Kind = kind
	this.Metadata = metadata
	this.Data = data
	return &this
}

// NewMetaV1APIGroupListWithDefaults instantiates a new MetaV1APIGroupList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaV1APIGroupListWithDefaults() *MetaV1APIGroupList {
	this := MetaV1APIGroupList{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *MetaV1APIGroupList) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *MetaV1APIGroupList) GetApiVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *MetaV1APIGroupList) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetKind returns the Kind field value
func (o *MetaV1APIGroupList) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *MetaV1APIGroupList) GetKindOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *MetaV1APIGroupList) SetKind(v string) {
	o.Kind = v
}

// GetMetadata returns the Metadata field value
func (o *MetaV1APIGroupList) GetMetadata() ListMeta {
	if o == nil {
		var ret ListMeta
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *MetaV1APIGroupList) GetMetadataOk() (*ListMeta, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *MetaV1APIGroupList) SetMetadata(v ListMeta) {
	o.Metadata = v
}

// GetData returns the Data field value
func (o *MetaV1APIGroupList) GetData() []MetaV1APIGroup {
	if o == nil {
		var ret []MetaV1APIGroup
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MetaV1APIGroupList) GetDataOk() (*[]MetaV1APIGroup, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *MetaV1APIGroupList) SetData(v []MetaV1APIGroup) {
	o.Data = v
}

func (o MetaV1APIGroupList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["api_version"] = o.ApiVersion
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableMetaV1APIGroupList struct {
	value *MetaV1APIGroupList
	isSet bool
}

func (v NullableMetaV1APIGroupList) Get() *MetaV1APIGroupList {
	return v.value
}

func (v *NullableMetaV1APIGroupList) Set(val *MetaV1APIGroupList) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaV1APIGroupList) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaV1APIGroupList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaV1APIGroupList(val *MetaV1APIGroupList) *NullableMetaV1APIGroupList {
	return &NullableMetaV1APIGroupList{value: val, isSet: true}
}

func (v NullableMetaV1APIGroupList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaV1APIGroupList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


