openapi: 3.0.0
info:
  contact:
    email: cire-traffic@confluent.io
    name: CIRE Traffic
    url: https://confluent.slack.com/app_redirect?channel=cire-traffic-eng
  description: Network API
  title: Network API
  version: 0.0.1-alpha1
  x-api-id: c1259878-7b77-11eb-9439-0242ac130002
  x-api-group: networking/v1
  x-audience: external-public
  x-tag-group: Networking (%s)
servers:
- description: Confluent Cloud production
  url: https://api.confluent.cloud
tags:
- description: |-
    [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

    AccessPoint objects represent network connections in and out of Gateways.
    This API allows you to list, create, read, update, and delete your access points.


    ## The Access Points Model
    <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
  name: Access Points (networking/v1)
- description: |-
    [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

    DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

    ## The DNS Records Model
    <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
  name: DNS Records (networking/v1)
paths:
  /networking/v1/access-points:
    get:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all access points.
      operationId: listNetworkingV1AccessPoints
      parameters:
      - description: Filter the results by exact match for spec.display_name. Pass
          multiple times to see results matching any of the values.
        example:
        - prod-ap-egress-use1
        - prod-ap-egress-usw2
        explode: true
        in: query
        name: spec.display_name
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for spec.gateway. Pass multiple
          times to see results matching any of the values.
        example:
        - gw-00000
        - gw-00001
        explode: true
        in: query
        name: spec.gateway
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.AccessPointList'
                - properties:
                    data:
                      items:
                        properties:
                          spec:
                            properties:
                              environment:
                                example:
                                  id: env-00000
                                  related: https://api.confluent.cloud/v2/environments/env-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                              gateway:
                                example:
                                  id: gw-00000
                                  related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                            type: object
                      type: array
                  type: object
          description: Access Point.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: List of Access Points
      tags:
      - Access Points (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    post:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create an access point.
      operationId: createNetworkingV1AccessPoint
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.AccessPoint'
              - properties:
                  spec:
                    required:
                    - config
                    - environment
                    - gateway
                    type: object
                required:
                - spec
                type: object
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                      gateway:
                        example:
                          id: gw-00000
                    type: object
                type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.AccessPoint'
                - properties:
                    spec:
                      required:
                      - config
                      - environment
                      - gateway
                      type: object
                  required:
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        gateway:
                          example:
                            id: gw-00000
                            related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                      type: object
                  type: object
          description: An Access Point is being created.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Location:
              description: AccessPoint resource uri
              explode: false
              schema:
                example: https://api.confluent.cloud/networking/v1/access-points/{id}
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Create an Access Point
      tags:
      - Access Points (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.confluent.cloud/networking/v1/access-points \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-ap-egress-usw2","config":{"kind":"AwsEgressPrivateLinkEndpoint","vpc_endpoint_service_name":"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000","enable_high_availability":false},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"gw-00000","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/access-points")
            .post(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-ap-egress-usw2\\\",\\\"config\\\":{\\\"kind\\\":\\\"AwsEgressPrivateLinkEndpoint\\\
          \",\\\"vpc_endpoint_service_name\\\":\\\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\\\
          \",\\\"enable_high_availability\\\":false},\\\"environment\\\":{\\\"id\\\
          \":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\"\
          :{\\\"id\\\":\\\"gw-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\
          \n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"\
          content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\"\
          , \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("POST", "/networking/v1/access-points", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/access-points",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-ap-egress-usw2',
              config: {
                kind: 'AwsEgressPrivateLinkEndpoint',
                vpc_endpoint_service_name: 'com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000',
                enable_high_availability: false
              },
              environment: {id: 'env-00000', environment: 'string'},
              gateway: {id: 'gw-00000', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
  /networking/v1/access-points/{id}:
    delete:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete an access point.
      operationId: deleteNetworkingV1AccessPoint
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the access point.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: An Access Point is being deleted.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Delete an Access Point
      tags:
      - Access Points (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url 'https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000")
            .delete(null)
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000\"\
          \n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("DELETE", "/networking/v1/access-points/{id}?environment=env-00000", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "DELETE",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/access-points/{id}?environment=env-00000",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");
          var request = new RestRequest(Method.DELETE);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    get:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read an access point.
      operationId: getNetworkingV1AccessPoint
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the access point.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.AccessPoint'
                - properties:
                    spec:
                      required:
                      - config
                      - environment
                      - gateway
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        gateway:
                          example:
                            id: gw-00000
                            related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                      type: object
                  type: object
          description: Access Point.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Read an Access Point
      tags:
      - Access Points (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/access-points/{id}?environment=env-00000", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/access-points/{id}?environment=env-00000",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    patch:
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update an access point.

      operationId: updateNetworkingV1AccessPoint
      parameters:
      - description: The unique identifier for the access point.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.AccessPointUpdate'
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                    required:
                    - environment
                    type: object
                required:
                - spec
                type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.AccessPoint'
                - properties:
                    spec:
                      required:
                      - config
                      - environment
                      - gateway
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        gateway:
                          example:
                            id: gw-00000
                            related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                      type: object
                  type: object
          description: Access Point.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Update an Access Point
      tags:
      - Access Points (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PATCH \
            --url 'https://api.confluent.cloud/networking/v1/access-points/{id}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-ap-egress-usw2","config":{"kind":"AwsEgressPrivateLinkEndpoint","vpc_endpoint_service_name":"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000","enable_high_availability":false},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"string","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/access-points/{id}")
            .patch(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points/{id}\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-ap-egress-usw2\\\",\\\"config\\\":{\\\"kind\\\":\\\"AwsEgressPrivateLinkEndpoint\\\
          \",\\\"vpc_endpoint_service_name\\\":\\\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\\\
          \",\\\"enable_high_availability\\\":false},\\\"environment\\\":{\\\"id\\\
          \":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\"\
          :{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\
          \treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"\
          content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\"\
          , \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PATCH", "/networking/v1/access-points/{id}", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/access-points/{id}",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-ap-egress-usw2',
              config: {
                kind: 'AwsEgressPrivateLinkEndpoint',
                vpc_endpoint_service_name: 'com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000',
                enable_high_availability: false
              },
              environment: {id: 'env-00000', environment: 'string'},
              gateway: {id: 'string', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points/{id}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points/{id}");
          var request = new RestRequest(Method.PATCH);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
  /networking/v1/dns-records:
    get:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all DNS records.
      operationId: listNetworkingV1DnsRecords
      parameters:
      - description: Filter the results by exact match for spec.display_name. Pass
          multiple times to see results matching any of the values.
        example:
        - prod-dnsrec-1
        - prod-dnsrec-2
        explode: true
        in: query
        name: spec.display_name
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for spec.domain. Pass multiple
          times to see results matching any of the values.
        example:
        - example.com
        - example2.com
        explode: true
        in: query
        name: spec.domain
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: Filter the results by exact match for spec.gateway. Pass multiple
          times to see results matching any of the values.
        example:
        - gw-00000
        - gw-00001
        explode: true
        in: query
        name: spec.gateway
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: Filter the results by exact match for resource. Pass multiple
          times to see results matching any of the values.
        example:
        - ap-11111
        - ap-22222
        explode: true
        in: query
        name: resource
        required: false
        schema:
          $ref: '#/components/schemas/MultipleSearchFilter'
        style: form
      - description: A pagination size for collection requests.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
          x-max-page-items: 500
        style: form
      - description: An opaque pagination token for collection requests.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.DnsRecordList'
                - properties:
                    data:
                      items:
                        properties:
                          spec:
                            properties:
                              environment:
                                example:
                                  id: env-00000
                                  related: https://api.confluent.cloud/v2/environments/env-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                              gateway:
                                example:
                                  id: gw-00000
                                  related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                                  resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                            type: object
                      type: array
                  type: object
          description: DNS Record.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: List of DNS Records
      tags:
      - DNS Records (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    post:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a DNS record.
      operationId: createNetworkingV1DnsRecord
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.DnsRecord'
              - properties:
                  spec:
                    required:
                    - config
                    - domain
                    - environment
                    - gateway
                    type: object
                required:
                - spec
                type: object
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                      gateway:
                        example:
                          id: gw-00000
                    type: object
                type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.DnsRecord'
                - properties:
                    spec:
                      required:
                      - config
                      - domain
                      - environment
                      - gateway
                      type: object
                  required:
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        gateway:
                          example:
                            id: gw-00000
                            related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                      type: object
                  type: object
          description: A DNS Record is being created.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Location:
              description: DnsRecord resource uri
              explode: false
              schema:
                example: https://api.confluent.cloud/networking/v1/dns-records/{id}
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Create a DNS Record
      tags:
      - DNS Records (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.confluent.cloud/networking/v1/dns-records \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-dnsrec-1","domain":"example.com","config":{"kind":"PrivateLinkAccessPoint","resource_id":"ap-12345"},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"gw-00000","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/dns-records")
            .post(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-dnsrec-1\\\",\\\"domain\\\":\\\"example.com\\\",\\\"config\\\"\
          :{\\\"kind\\\":\\\"PrivateLinkAccessPoint\\\",\\\"resource_id\\\":\\\"ap-12345\\\
          \"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\"\
          :\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"gw-00000\\\",\\\"environment\\\
          \":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\
          \n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("POST", "/networking/v1/dns-records", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/dns-records",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-dnsrec-1',
              domain: 'example.com',
              config: {kind: 'PrivateLinkAccessPoint', resource_id: 'ap-12345'},
              environment: {id: 'env-00000', environment: 'string'},
              gateway: {id: 'gw-00000', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records");
          var request = new RestRequest(Method.POST);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
  /networking/v1/dns-records/{id}:
    delete:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a DNS record.
      operationId: deleteNetworkingV1DnsRecord
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the DNS record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A DNS Record is being deleted.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Delete a DNS Record
      tags:
      - DNS Records (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url 'https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000")
            .delete(null)
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000\"\
          \n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("DELETE", "/networking/v1/dns-records/{id}?environment=env-00000", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "DELETE",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/dns-records/{id}?environment=env-00000",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");
          var request = new RestRequest(Method.DELETE);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    get:
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a DNS record.
      operationId: getNetworkingV1DnsRecord
      parameters:
      - description: Scope the operation to the given environment.
        example: env-00000
        explode: true
        in: query
        name: environment
        required: true
        schema:
          $ref: '#/components/schemas/SearchFilter'
        style: form
      - description: The unique identifier for the DNS record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.DnsRecord'
                - properties:
                    spec:
                      required:
                      - config
                      - domain
                      - environment
                      - gateway
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        gateway:
                          example:
                            id: gw-00000
                            related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                      type: object
                  type: object
          description: DNS Record.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Read a DNS Record
      tags:
      - DNS Records (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request GET \
            --url 'https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000")
            .get()
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\
          \n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000\"\
          \n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

          conn.request("GET", "/networking/v1/dns-records/{id}?environment=env-00000", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/dns-records/{id}?environment=env-00000",
            "headers": {
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");
          var request = new RestRequest(Method.GET);
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          IRestResponse response = client.Execute(request);
    patch:
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a DNS record.

      operationId: updateNetworkingV1DnsRecord
      parameters:
      - description: The unique identifier for the DNS record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/networking.v1.DnsRecordUpdate'
              - properties:
                  spec:
                    properties:
                      environment:
                        example:
                          id: env-00000
                    required:
                    - environment
                    type: object
                required:
                - spec
                type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/networking.v1.DnsRecord'
                - properties:
                    spec:
                      required:
                      - config
                      - domain
                      - environment
                      - gateway
                      type: object
                  required:
                  - api_version
                  - id
                  - kind
                  - spec
                  - status
                  type: object
                - properties:
                    spec:
                      properties:
                        environment:
                          example:
                            id: env-00000
                            related: https://api.confluent.cloud/v2/environments/env-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000
                        gateway:
                          example:
                            id: gw-00000
                            related: https://api.confluent.cloud/networking/v1/gateways/gw-00000
                            resource_name: https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000
                      type: object
                  type: object
          description: DNS Record.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "400"
                  code: invalid_filter
                  title: Invalid Filter
                  detail: The 'delorean' resource can't be filtered by 'num_doors'
                  source:
                    parameter: num_doors
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "401"
                  code: user_unauthenticated
                  title: Authentication Required
                  detail: Valid authentication credentials must be provided
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request lacks valid authentication credentials for this
            resource.
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            WWW-Authenticate:
              description: The unique identifier for the API request.
              example: Basic error="invalid_key", error_description="The API Key is
                invalid"
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Unauthorized
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "403"
                  code: user_unauthorized
                  title: User Access Unauthorized
                  detail: The user 'mcfly' is not allowed to access the 'delorean'
                    resource without the 'plutonium' role.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The access credentials were considered insufficient to grant
            access
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
          x-summary: Forbidden
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "404"
                  title: Not Found
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "409":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "409"
                  code: resource_already_exists
                  title: Resource Already exists
                  detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                    exists.
              schema:
                $ref: '#/components/schemas/Failure'
          description: The request is in conflict with the current server state
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            Location:
              description: Resource URI of conflicting resource
              explode: false
              schema:
                example: https://api.confluent.cloud/{object}/{id}
                format: uri
                type: string
              style: simple
          x-summary: Conflict
        "422":
          content:
            application/json:
              example:
                errors:
                - status: "422"
                  code: invalid_configuration
                  id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  title: Validation Failed
                  detail: 'The property ''/cluster/storage_size'' of type string did
                    not match the following type: integer'
                  source:
                    pointer: /cluster/storage_size
              schema:
                $ref: '#/components/schemas/Failure'
          description: Validation Failed
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
            X-RateLimit-Limit:
              description: The maximum number of requests you're permitted to make
                per time period.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit
                window.
              explode: false
              schema:
                type: integer
              style: simple
            X-RateLimit-Reset:
              description: "The relative time in seconds until the current rate-limit\
                \ window resets.  \n  \n**Important:** This differs from Github and\
                \ Twitter's same-named header which uses UTC epoch seconds. We use\
                \ relative time to avoid client/server time synchronization issues."
              explode: false
              schema:
                type: integer
              style: simple
            Retry-After:
              description: The number of seconds to wait until the rate limit window
                resets. Only sent when the rate limit is reached.
              explode: false
              schema:
                type: integer
              style: simple
        "500":
          content:
            application/json:
              example:
                errors:
                - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                  status: "500"
                  code: out_of_gas
                  title: DeLorean Out Of Gas
                  detail: The DeLorean has run out of gas, but Doc Brown will fill
                    'er up for you asap
              schema:
                $ref: '#/components/schemas/Failure'
          description: Oops, something went wrong!
          headers:
            X-Request-Id:
              description: The unique identifier for the API request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cloud-api-key: []
      - confluent-sts-access-token: []
      summary: Update a DNS Record
      tags:
      - DNS Records (networking/v1)
      x-codeSamples:
      - lang: Shell
        source: |-
          curl --request PATCH \
            --url 'https://api.confluent.cloud/networking/v1/dns-records/{id}' \
            --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
            --header 'content-type: application/json' \
            --data '{"spec":{"display_name":"prod-dnsrec-1","domain":"example.com","config":{"kind":"PrivateLinkAccessPoint","resource_id":"ap-12345"},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"string","environment":"string"}}}'
      - lang: Java
        source: |-
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");
          Request request = new Request.Builder()
            .url("https://api.confluent.cloud/networking/v1/dns-records/{id}")
            .patch(body)
            .addHeader("content-type", "application/json")
            .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Go
        source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\
          \n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records/{id}\"\
          \n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\"\
          :\\\"prod-dnsrec-1\\\",\\\"domain\\\":\\\"example.com\\\",\\\"config\\\"\
          :{\\\"kind\\\":\\\"PrivateLinkAccessPoint\\\",\\\"resource_id\\\":\\\"ap-12345\\\
          \"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\"\
          :\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\
          \":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\
          \n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"\
          Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\
          \n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\t\
          fmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.confluent.cloud")

          payload = "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}"

          headers = {
              'content-type': "application/json",
              'Authorization': "Basic REPLACE_BASIC_AUTH"
              }

          conn.request("PATCH", "/networking/v1/dns-records/{id}", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: Node
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.confluent.cloud",
            "port": null,
            "path": "/networking/v1/dns-records/{id}",
            "headers": {
              "content-type": "application/json",
              "Authorization": "Basic REPLACE_BASIC_AUTH"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.write(JSON.stringify({
            spec: {
              display_name: 'prod-dnsrec-1',
              domain: 'example.com',
              config: {kind: 'PrivateLinkAccessPoint', resource_id: 'ap-12345'},
              environment: {id: 'env-00000', environment: 'string'},
              gateway: {id: 'string', environment: 'string'}
            }
          }));
          req.end();
      - lang: C
        source: |-
          CURL *hnd = curl_easy_init();

          curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
          curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records/{id}");

          struct curl_slist *headers = NULL;
          headers = curl_slist_append(headers, "content-type: application/json");
          headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
          curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

          curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");

          CURLcode ret = curl_easy_perform(hnd);
      - lang: C#
        source: |-
          var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records/{id}");
          var request = new RestRequest(Method.PATCH);
          request.AddHeader("content-type", "application/json");
          request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
          request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
          IRestResponse response = client.Execute(request);
components:
  responses:
    BadRequestError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "400"
              code: invalid_filter
              title: Invalid Filter
              detail: The 'delorean' resource can't be filtered by 'num_doors'
              source:
                parameter: num_doors
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    UnauthenticatedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "401"
              code: user_unauthenticated
              title: Authentication Required
              detail: Valid authentication credentials must be provided
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request lacks valid authentication credentials for this resource.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        WWW-Authenticate:
          description: The unique identifier for the API request.
          example: Basic error="invalid_key", error_description="The API Key is invalid"
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Unauthorized
    OverQuotaError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "402"
              code: quota_exceeded
              title: Kafka Clusters Per Org Quota Exceeded
              detail: 'The request would exceed the quota: kafka_clusters_per_environment'
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request would exceed one or more quotas.
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Over Quota
    UnauthorizedError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "403"
              code: user_unauthorized
              title: User Access Unauthorized
              detail: The user 'mcfly' is not allowed to access the 'delorean' resource
                without the 'plutonium' role.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The access credentials were considered insufficient to grant access
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
      x-summary: Forbidden
    ConflictError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "409"
              code: resource_already_exists
              title: Resource Already exists
              detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already
                exists.
          schema:
            $ref: '#/components/schemas/Failure'
      description: The request is in conflict with the current server state
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        Location:
          description: Resource URI of conflicting resource
          explode: false
          schema:
            example: https://api.confluent.cloud/{object}/{id}
            format: uri
            type: string
          style: simple
      x-summary: Conflict
    NotFoundError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "404"
              title: Not Found
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    ValidationError:
      content:
        application/json:
          example:
            errors:
            - status: "422"
              code: invalid_configuration
              id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              title: Validation Failed
              detail: 'The property ''/cluster/storage_size'' of type string did not
                match the following type: integer'
              source:
                pointer: /cluster/storage_size
          schema:
            $ref: '#/components/schemas/Failure'
      description: Validation Failed
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
        X-RateLimit-Limit:
          description: The maximum number of requests you're permitted to make per
            time period.
          explode: false
          schema:
            type: integer
          style: simple
        X-RateLimit-Remaining:
          description: The number of requests remaining in the current rate limit
            window.
          explode: false
          schema:
            type: integer
          style: simple
        X-RateLimit-Reset:
          description: "The relative time in seconds until the current rate-limit\
            \ window resets.  \n  \n**Important:** This differs from Github and Twitter's\
            \ same-named header which uses UTC epoch seconds. We use relative time\
            \ to avoid client/server time synchronization issues."
          explode: false
          schema:
            type: integer
          style: simple
        Retry-After:
          description: The number of seconds to wait until the rate limit window resets.
            Only sent when the rate limit is reached.
          explode: false
          schema:
            type: integer
          style: simple
    DefaultSystemError:
      content:
        application/json:
          example:
            errors:
            - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
              status: "500"
              code: out_of_gas
              title: DeLorean Out Of Gas
              detail: The DeLorean has run out of gas, but Doc Brown will fill 'er
                up for you asap
          schema:
            $ref: '#/components/schemas/Failure'
      description: Oops, something went wrong!
      headers:
        X-Request-Id:
          description: The unique identifier for the API request.
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    networking.v1.AccessPoint:
      description: |-
        AccessPoint objects represent network connections in and out of Gateways.
        This API allows you to list, create, read, update, and delete your access points.


        ## The Access Points Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - AccessPoint
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/access-points/ap-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/access-point=ap-12345
        spec:
          $ref: '#/components/schemas/networking.v1.AccessPointSpec'
        status:
          $ref: '#/components/schemas/networking.v1.AccessPointStatus'
      type: object
    networking.v1.AccessPointStatus:
      description: The status of the Access Point
      properties:
        phase:
          description: |
            The lifecycle phase of the access point:

              PROVISIONING: Access point provisioning is in progress;

              PENDING_ACCEPT: Access point connection request is pending acceptance by the customer;

              READY:  Access point is ready;

              FAILED: Access point is in a failed state;

              DEPROVISIONING: Access point deprovisioning is in progress;

              DISCONNECTED: Access Point has been disconnected in the cloud provider by the customer;
          example: READY
          readOnly: true
          type: string
          x-extensible-enum:
          - PROVISIONING
          - PENDING_ACCEPT
          - READY
          - FAILED
          - DEPROVISIONING
          - DISCONNECTED
        error_code:
          description: Error code if access point is in a failed state. May be used
            for programmatic error checking.
          readOnly: true
          type: string
        error_message:
          description: Displayable error message if access point is in a failed state.
          readOnly: true
          type: string
        config:
          description: Cloud specific status of the access point.
          discriminator:
            mapping:
              AwsEgressPrivateLinkEndpointStatus: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpointStatus'
              AzureEgressPrivateLinkEndpointStatus: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpointStatus'
            propertyName: kind
          oneOf:
          - $ref: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpointStatus'
          - $ref: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpointStatus'
          readOnly: true
          type: object
          x-one-of-name: NetworkingV1AccessPointStatusConfigOneOf
      readOnly: true
      required:
      - phase
      type: object
    networking.v1.DnsRecord:
      description: |-
        DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

        ## The DNS Records Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - DnsRecord
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/dns-records/dnsrec-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/dns-record=dnsrec-12345
        spec:
          $ref: '#/components/schemas/networking.v1.DnsRecordSpec'
        status:
          $ref: '#/components/schemas/networking.v1.DnsRecordStatus'
      type: object
    networking.v1.DnsRecordStatus:
      description: The status of the Dns Record
      properties:
        phase:
          description: |
            The lifecycle phase of the DNS record:

              PROVISIONING: DNS record provisioning is in progress;

              CREATED: DNS record is created. It will automatically become ready once a Kafka cluster is provisioned;

              READY: DNS record is ready;

              FAILED: DNS record is in a failed state;

              DEPROVISIONING: DNS record deprovisioning is in progress;
          example: READY
          readOnly: true
          type: string
          x-extensible-enum:
          - PROVISIONING
          - CREATED
          - READY
          - FAILED
          - DEPROVISIONING
        error_code:
          description: Error code if the DNS record is in a failed state. May be used
            for programmatic error checking.
          readOnly: true
          type: string
        error_message:
          description: Displayable error message if the DNS record is in a failed
            state.
          readOnly: true
          type: string
      readOnly: true
      required:
      - phase
      type: object
    networking.v1.AwsEgressPrivateLinkEndpoint:
      description: AWS VPC Endpoint.
      properties:
        kind:
          description: AwsEgressPrivateLinkEndpoint kind.
          enum:
          - AwsEgressPrivateLinkEndpoint
          type: string
        vpc_endpoint_service_name:
          description: ID of the VPC Endpoint service used for PrivateLink.
          example: com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000
          minLength: 1
          type: string
        enable_high_availability:
          description: Whether a resource should be provisioned with high availability.
            Endpoints deployed with high availability have network interfaces deployed
            in multiple AZs.
          example: false
          type: boolean
          x-immutable: true
      required:
      - kind
      - vpc_endpoint_service_name
      type: object
    networking.v1.AzureEgressPrivateLinkEndpoint:
      description: Azure Private Endpoint.
      properties:
        kind:
          description: AzureEgressPrivateLinkEndpoint kind.
          enum:
          - AzureEgressPrivateLinkEndpoint
          type: string
        private_link_service_resource_id:
          description: Resource ID of the Azure Private Link service.
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/s-abcde/providers/Microsoft.Network/privateLinkServices/pls-plt-abcdef-az3
          minLength: 1
          type: string
        private_link_subresource_name:
          description: Name of the subresource for the Private Endpoint to connect
            to.
          example: sqlServer
          type: string
      required:
      - kind
      - private_link_service_resource_id
      type: object
    networking.v1.AwsEgressPrivateLinkEndpointStatus:
      description: Status of an AWS PrivateLink Endpoint.
      properties:
        kind:
          description: AwsEgressPrivateLinkEndpointStatus kind.
          enum:
          - AwsEgressPrivateLinkEndpointStatus
          type: string
        vpc_endpoint_id:
          description: ID of a VPC Endpoint (if any) that is connected to the VPC
            Endpoint service.
          example: vpce-00000000000000000
          readOnly: true
          type: string
        vpc_endpoint_dns_name:
          description: DNS name of a VPC Endpoint (if any) that is connected to the
            VPC Endpoint service.
          example: vpce-00000000000000000-00000000.vpce-svc-00000000000000000.us-west-2.vpce.amazonaws.com
          readOnly: true
          type: string
      required:
      - kind
      - vpc_endpoint_dns_name
      - vpc_endpoint_id
      title: AWS
      type: object
    networking.v1.AzureEgressPrivateLinkEndpointStatus:
      description: Status of an Azure Private Endpoint.
      properties:
        kind:
          description: AzureEgressPrivateLinkEndpointStatus kind.
          enum:
          - AzureEgressPrivateLinkEndpointStatus
          type: string
        private_endpoint_resource_id:
          description: Resource ID of the Private Endpoint (if any) that is connected
            to the Private Link service.
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testvpc/providers/Microsoft.Network/privateEndpoints/pe-plt-abcdef-az3
          readOnly: true
          type: string
        private_endpoint_domain:
          description: Domain of the Private Endpoint (if any) that is connected to
            the Private Link service.
          example: dbname.database.windows.net
          readOnly: true
          type: string
        private_endpoint_ip_address:
          description: IP address of the Private Endpoint (if any) that is connected
            to the Private Link service.
          example: 10.2.0.68
          readOnly: true
          type: string
        private_endpoint_custom_dns_config_domains:
          description: Domains of the Private Endpoint (if any) based off FQDNs in
            Azure custom DNS configs, which are required in your private DNS setup.
          example:
          - dbname.database.windows.net
          - dbname-region.database.windows.net
          items:
            type: string
          readOnly: true
          type: array
      required:
      - kind
      - private_endpoint_ip_address
      - private_endpoint_resource_id
      type: object
    networking.v1.PrivateLinkAccessPoint:
      description: DNS record that is associated with a PrivateLink access point.
      properties:
        kind:
          description: PrivateLinkAccessPoint kind.
          enum:
          - PrivateLinkAccessPoint
          type: string
        resource_id:
          description: ID of the target resource.
          example: ap-12345
          minLength: 1
          type: string
      required:
      - kind
      - resource_id
      type: object
    networking.v1.AwsPrivateNetworkInterface:
      description: Confluent Private Network Interface powered by AWS ENI.
      properties:
        kind:
          description: AwsPrivateNetworkInterface kind.
          enum:
          - AwsPrivateNetworkInterface
          type: string
        network_interfaces:
          description: List of the IDs of the Elastic Network Interfaces.
          example:
          - eni-00000000000000000
          - eni-00000000000000001
          - eni-00000000000000002
          - eni-00000000000000003
          - eni-00000000000000004
          - eni-00000000000000005
          items:
            type: string
          minItems: 6
          type: array
          uniqueItems: true
        account:
          description: The AWS account ID associated with the ENIs you are using for
            the Confluent Private Network Interface.
          example: "000000000000"
          pattern: ^\d{12}$
          type: string
      required:
      - kind
      type: object
    MultipleSearchFilter:
      description: Filter a collection by a string search for one or more values
      items:
        type: string
      type: array
    SearchFilter:
      description: Filter a collection by a string search
      type: string
    networking.v1.AccessPointList:
      description: |-
        AccessPoint objects represent network connections in and out of Gateways.
        This API allows you to list, create, read, update, and delete your access points.


        ## The Access Points Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - AccessPointList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/networking/v1/access-points
              last:
                example: https://api.confluent.cloud/networking/v1/access-points?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/networking/v1/access-points?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/networking/v1/access-points?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/networking.v1.AccessPoint'
            - properties:
                spec:
                  required:
                  - config
                  - environment
                  - gateway
                  type: object
              required:
              - id
              - metadata
              - spec
              - status
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    networking.v1.AccessPointSpec:
      description: The desired state of the Access Point
      properties:
        display_name:
          description: The name of the access point.
          example: prod-ap-egress-usw2
          type: string
        config:
          description: The specific details of the different access point configurations.
          discriminator:
            mapping:
              AwsEgressPrivateLinkEndpoint: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpoint'
              AzureEgressPrivateLinkEndpoint: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpoint'
              AwsPrivateNetworkInterface: '#/components/schemas/networking.v1.AwsPrivateNetworkInterface'
            propertyName: kind
          oneOf:
          - $ref: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpoint'
          - $ref: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpoint'
          - $ref: '#/components/schemas/networking.v1.AwsPrivateNetworkInterface'
          type: object
          x-immutable: true
          x-one-of-name: NetworkingV1AccessPointSpecConfigOneOf
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        gateway:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The gateway to which this belongs.
          x-immutable: true
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.DnsRecordList:
      description: |-
        DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

        ## The DNS Records Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - DnsRecordList
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ListMeta'
          - properties:
              first:
                example: https://api.confluent.cloud/networking/v1/dns-records
              last:
                example: https://api.confluent.cloud/networking/v1/dns-records?page_token=bcAOehAY8F16YD84Z1wT
              prev:
                example: https://api.confluent.cloud/networking/v1/dns-records?page_token=YIXRY97wWYmwzrax4dld
              next:
                example: https://api.confluent.cloud/networking/v1/dns-records?page_token=UvmDWOB1iwfAIBPj6EYb
        data:
          description: A data property that contains an array of resource items. Each
            entry in the array is a separate resource.
          items:
            allOf:
            - $ref: '#/components/schemas/networking.v1.DnsRecord'
            - properties:
                spec:
                  required:
                  - config
                  - domain
                  - environment
                  - gateway
                  type: object
              required:
              - id
              - metadata
              - spec
              - status
              type: object
          type: array
          uniqueItems: true
      required:
      - api_version
      - data
      - kind
      - metadata
      type: object
    networking.v1.DnsRecordSpec:
      description: The desired state of the Dns Record
      properties:
        display_name:
          description: The name of the DNS record.
          example: prod-dnsrec-1
          type: string
        domain:
          description: The fully qualified domain name of the DNS record.
          example: example.com
          type: string
          x-immutable: true
        config:
          description: The config of the DNS record.
          discriminator:
            mapping:
              PrivateLinkAccessPoint: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
            propertyName: kind
          oneOf:
          - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
          type: object
          x-one-of-name: NetworkingV1DnsRecordSpecConfigOneOf
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        gateway:
          allOf:
          - $ref: '#/components/schemas/TypedEnvScopedObjectReference'
          description: The gateway to which this belongs.
          x-immutable: true
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    ObjectMeta:
      description: ObjectMeta is metadata that all persisted resources must have,
        which includes all objects users must create.
      properties:
        self:
          description: Self is a Uniform Resource Locator (URL) at which an object
            can be addressed. This URL encodes the service location, API version,
            and other particulars necessary to locate the resource at a point in time
          example: https://api.confluent.cloud/v2/kafka-clusters/lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        resource_name:
          description: Resource Name is a Uniform Resource Identifier (URI) that is
            globally unique across space and time. It is represented as a Confluent
            Resource Name
          example: crn://confluent.cloud/kafka=lkc-f3a90de
          format: uri
          readOnly: true
          type: string
        created_at:
          description: The date and time at which this object was created. It is represented
            in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: The date and time at which this object was last updated. It
            is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
        deleted_at:
          description: The date and time at which this object was (or will be) deleted.
            It is represented in RFC3339 format and is in UTC.
          example: 2006-01-02T15:04:05-07:00
          format: date-time
          readOnly: true
          type: string
      readOnly: true
      required:
      - self
    ListMeta:
      description: ListMeta describes metadata that resource collections may have
      properties:
        first:
          description: A link to the first page of results. If a response does not
            contain a first link, then direct navigation to the first page is not
            supported.
          example: https://api.confluent.cloud/v2/resourcekinds
          format: uri
          nullable: true
          type: string
        last:
          description: A link to the last page of results. If a response does not
            contain a last link, then direct navigation to the last page is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=bcAOehAY8F16YD84Z1wT
          format: uri
          nullable: true
          type: string
        prev:
          description: A link to the previous page of results. If a response does
            not contain a prev link, then either there is no previous data or backwards
            traversal through the result set is not supported.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=YIXRY97wWYmwzrax4dld
          format: uri
          nullable: true
          type: string
        next:
          description: A link to the next page of results. If a response does not
            contain a next link, then there is no more data available.
          example: https://api.confluent.cloud/v2/resourcekinds?page_token=UvmDWOB1iwfAIBPj6EYb
          format: uri
          nullable: true
          type: string
        total_size:
          description: Number of records in the full result set. This response may
            be paginated and have a smaller number of records.
          example: 123
          format: int32
          minimum: 0
          type: integer
      type: object
    ObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        environment:
          description: Environment of the referred resource, if env-scoped
          maxLength: 255
          minLength: 1
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
        api_version:
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
          type: string
        kind:
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    TypedEnvScopedObjectReference:
      description: ObjectReference provides information for you to locate the referred
        object
      properties:
        id:
          description: ID of the referred resource
          maxLength: 255
          minLength: 1
          type: string
        environment:
          description: Environment of the referred resource, if env-scoped
          maxLength: 255
          minLength: 1
          type: string
        related:
          description: API URL for accessing or modifying the referred object
          format: uri
          minLength: 1
          readOnly: true
          type: string
        resource_name:
          description: CRN reference to the referred resource
          format: uri
          minLength: 1
          readOnly: true
          type: string
        api_version:
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
          type: string
        kind:
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
          type: string
      required:
      - id
      - related
      - resource_name
      type: object
    Failure:
      description: Provides information about problems encountered while performing
        an operation.
      properties:
        errors:
          description: List of errors which caused this operation to fail
          items:
            $ref: '#/components/schemas/Error'
          type: array
          uniqueItems: true
      required:
      - errors
      type: object
    Error:
      description: Describes a particular error encountered while performing an operation.
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          maxLength: 255
          type: string
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          type: string
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        title:
          description: A short, human-readable summary of the problem. It **SHOULD
            NOT** change from occurrence to occurrence of the problem, except for
            purposes of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        source:
          $ref: '#/components/schemas/Error_source'
      type: object
    networking.v1.AccessPointSpecUpdate:
      description: The desired state of the Access Point
      properties:
        display_name:
          description: The name of the access point.
          example: prod-ap-egress-usw2
          type: string
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.AccessPointUpdate:
      description: |-
        AccessPoint objects represent network connections in and out of Gateways.
        This API allows you to list, create, read, update, and delete your access points.


        ## The Access Points Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - AccessPoint
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/access-points/ap-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/access-point=ap-12345
        spec:
          $ref: '#/components/schemas/networking.v1.AccessPointSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.AccessPointStatus'
      type: object
    networking.v1.DnsRecordSpecUpdate:
      description: The desired state of the Dns Record
      properties:
        display_name:
          description: The name of the DNS record.
          example: prod-dnsrec-1
          type: string
        config:
          description: The config of the DNS record.
          discriminator:
            mapping:
              PrivateLinkAccessPoint: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
            propertyName: kind
          oneOf:
          - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
          type: object
          x-one-of-name: NetworkingV1DnsRecordSpecUpdateConfigOneOf
        environment:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      type: object
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.DnsRecordUpdate:
      description: |-
        DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

        ## The DNS Records Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
      properties:
        api_version:
          description: APIVersion defines the schema version of this representation
            of a resource.
          enum:
          - networking/v1
          readOnly: true
          type: string
        kind:
          description: Kind defines the object this REST resource represents.
          enum:
          - DnsRecord
          readOnly: true
          type: string
        id:
          description: ID is the "natural identifier" for an object within its scope/namespace;
            it is normally unique across time but not space. That is, you can assume
            that the ID will not be reclaimed and reused after an object is deleted
            ("time"); however, it may collide with IDs for other object `kinds` or
            objects of the same `kind` within a different scope/namespace ("space").
          example: dlz-f3a90de
          maxLength: 255
          readOnly: true
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/ObjectMeta'
          - properties:
              self:
                example: https://api.confluent.cloud/networking/v1/dns-records/dnsrec-12345
              resource_name:
                example: crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/dns-record=dnsrec-12345
        spec:
          $ref: '#/components/schemas/networking.v1.DnsRecordSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.DnsRecordStatus'
      type: object
    Error_source:
      description: If this error was caused by a particular part of the API request,
        the source will point to the query string parameter or request body property
        that caused it.
      properties:
        pointer:
          description: A JSON Pointer [RFC6901] to the associated entity in the request
            document [e.g. "/spec" for a spec object, or "/spec/title" for a specific
            field].
          type: string
        parameter:
          description: A string indicating which query parameter caused the error.
          type: string
      type: object
  securitySchemes:
    cloud-api-key:
      description: Authenticate with Cloud API Keys using HTTP Basic Auth. Treat the
        Cloud API Key ID as the username and Cloud API Key Secret as the password.
      scheme: basic
      type: http
    confluent-sts-access-token:
      description: Authenticate with Confluent API using this credentials (JSON Web
        Tokens) following OAuth 2.0.
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://api.confluent.cloud/sts/v1/oauth2/token
      type: oauth2
