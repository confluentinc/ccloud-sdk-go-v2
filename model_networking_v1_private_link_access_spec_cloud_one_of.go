/*
 * Network API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1-alpha1
 * Contact: cire-traffic@confluent.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccloud

import (
	"encoding/json"
	"fmt"
)

// NetworkingV1PrivateLinkAccessSpecCloudOneOf - struct for NetworkingV1PrivateLinkAccessSpecCloudOneOf
type NetworkingV1PrivateLinkAccessSpecCloudOneOf struct {
	NetworkingV1AwsPrivateLinkAccess   *NetworkingV1AwsPrivateLinkAccess
	NetworkingV1AzurePrivateLinkAccess *NetworkingV1AzurePrivateLinkAccess
}

// NetworkingV1AwsPrivateLinkAccessAsNetworkingV1PrivateLinkAccessSpecCloudOneOf is a convenience function that returns NetworkingV1AwsPrivateLinkAccess wrapped in NetworkingV1PrivateLinkAccessSpecCloudOneOf
func NetworkingV1AwsPrivateLinkAccessAsNetworkingV1PrivateLinkAccessSpecCloudOneOf(v *NetworkingV1AwsPrivateLinkAccess) NetworkingV1PrivateLinkAccessSpecCloudOneOf {
	return NetworkingV1PrivateLinkAccessSpecCloudOneOf{NetworkingV1AwsPrivateLinkAccess: v}
}

// NetworkingV1AzurePrivateLinkAccessAsNetworkingV1PrivateLinkAccessSpecCloudOneOf is a convenience function that returns NetworkingV1AzurePrivateLinkAccess wrapped in NetworkingV1PrivateLinkAccessSpecCloudOneOf
func NetworkingV1AzurePrivateLinkAccessAsNetworkingV1PrivateLinkAccessSpecCloudOneOf(v *NetworkingV1AzurePrivateLinkAccess) NetworkingV1PrivateLinkAccessSpecCloudOneOf {
	return NetworkingV1PrivateLinkAccessSpecCloudOneOf{NetworkingV1AzurePrivateLinkAccess: v}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *NetworkingV1PrivateLinkAccessSpecCloudOneOf) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into NetworkingV1AwsPrivateLinkAccess
	err = json.Unmarshal(data, &dst.NetworkingV1AwsPrivateLinkAccess)
	if err == nil {
		jsonNetworkingV1AwsPrivateLinkAccess, _ := json.Marshal(dst.NetworkingV1AwsPrivateLinkAccess)
		if string(jsonNetworkingV1AwsPrivateLinkAccess) == "{}" { // empty struct
			dst.NetworkingV1AwsPrivateLinkAccess = nil
		} else {
			match++
		}
	} else {
		dst.NetworkingV1AwsPrivateLinkAccess = nil
	}

	// try to unmarshal data into NetworkingV1AzurePrivateLinkAccess
	err = json.Unmarshal(data, &dst.NetworkingV1AzurePrivateLinkAccess)
	if err == nil {
		jsonNetworkingV1AzurePrivateLinkAccess, _ := json.Marshal(dst.NetworkingV1AzurePrivateLinkAccess)
		if string(jsonNetworkingV1AzurePrivateLinkAccess) == "{}" { // empty struct
			dst.NetworkingV1AzurePrivateLinkAccess = nil
		} else {
			match++
		}
	} else {
		dst.NetworkingV1AzurePrivateLinkAccess = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.NetworkingV1AwsPrivateLinkAccess = nil
		dst.NetworkingV1AzurePrivateLinkAccess = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(NetworkingV1PrivateLinkAccessSpecCloudOneOf)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(NetworkingV1PrivateLinkAccessSpecCloudOneOf)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src NetworkingV1PrivateLinkAccessSpecCloudOneOf) MarshalJSON() ([]byte, error) {
	if src.NetworkingV1AwsPrivateLinkAccess != nil {
		return json.Marshal(&src.NetworkingV1AwsPrivateLinkAccess)
	}

	if src.NetworkingV1AzurePrivateLinkAccess != nil {
		return json.Marshal(&src.NetworkingV1AzurePrivateLinkAccess)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *NetworkingV1PrivateLinkAccessSpecCloudOneOf) GetActualInstance() interface{} {
	if obj.NetworkingV1AwsPrivateLinkAccess != nil {
		return obj.NetworkingV1AwsPrivateLinkAccess
	}

	if obj.NetworkingV1AzurePrivateLinkAccess != nil {
		return obj.NetworkingV1AzurePrivateLinkAccess
	}

	// all schemas are nil
	return nil
}

type NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf struct {
	value *NetworkingV1PrivateLinkAccessSpecCloudOneOf
	isSet bool
}

func (v NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf) Get() *NetworkingV1PrivateLinkAccessSpecCloudOneOf {
	return v.value
}

func (v *NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf) Set(val *NetworkingV1PrivateLinkAccessSpecCloudOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingV1PrivateLinkAccessSpecCloudOneOf(val *NetworkingV1PrivateLinkAccessSpecCloudOneOf) *NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf {
	return &NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf{value: val, isSet: true}
}

func (v NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkingV1PrivateLinkAccessSpecCloudOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
