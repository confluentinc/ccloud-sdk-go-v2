// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Tableflow Management API

Tableflow Management API

API version: 0.0.1
Contact: cts-team@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// TableflowV1CatalogIntegrationUnityUpdateSpec The catalog integration connection config for Unity Catalog.
type TableflowV1CatalogIntegrationUnityUpdateSpec struct {
	// The type of the catalog integration.
	Kind string `json:"kind,omitempty"`
	// The Databricks workspace URL associated with the Unity Catalog.
	WorkspaceEndpoint *string `json:"workspace_endpoint,omitempty"`
	// The name of the catalog within Unity Catalog.
	CatalogName *string `json:"catalog_name,omitempty"`
	// The OAuth client ID used to authenticate with the Unity Catalog.
	ClientId *string `json:"client_id,omitempty"`
	// The OAuth client secret used for authentication with the Unity Catalog.
	ClientSecret *string `json:"client_secret,omitempty"`
}

// NewTableflowV1CatalogIntegrationUnityUpdateSpec instantiates a new TableflowV1CatalogIntegrationUnityUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableflowV1CatalogIntegrationUnityUpdateSpec(kind string) *TableflowV1CatalogIntegrationUnityUpdateSpec {
	this := TableflowV1CatalogIntegrationUnityUpdateSpec{}
	this.Kind = kind
	return &this
}

// NewTableflowV1CatalogIntegrationUnityUpdateSpecWithDefaults instantiates a new TableflowV1CatalogIntegrationUnityUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableflowV1CatalogIntegrationUnityUpdateSpecWithDefaults() *TableflowV1CatalogIntegrationUnityUpdateSpec {
	this := TableflowV1CatalogIntegrationUnityUpdateSpec{}
	return &this
}

// GetKind returns the Kind field value
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) SetKind(v string) {
	o.Kind = v
}

// GetWorkspaceEndpoint returns the WorkspaceEndpoint field value if set, zero value otherwise.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetWorkspaceEndpoint() string {
	if o == nil || o.WorkspaceEndpoint == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceEndpoint
}

// GetWorkspaceEndpointOk returns a tuple with the WorkspaceEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetWorkspaceEndpointOk() (*string, bool) {
	if o == nil || o.WorkspaceEndpoint == nil {
		return nil, false
	}
	return o.WorkspaceEndpoint, true
}

// HasWorkspaceEndpoint returns a boolean if a field has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) HasWorkspaceEndpoint() bool {
	if o != nil && o.WorkspaceEndpoint != nil {
		return true
	}

	return false
}

// SetWorkspaceEndpoint gets a reference to the given string and assigns it to the WorkspaceEndpoint field.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) SetWorkspaceEndpoint(v string) {
	o.WorkspaceEndpoint = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetCatalogName() string {
	if o == nil || o.CatalogName == nil {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetCatalogNameOk() (*string, bool) {
	if o == nil || o.CatalogName == nil {
		return nil, false
	}
	return o.CatalogName, true
}

// HasCatalogName returns a boolean if a field has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) HasCatalogName() bool {
	if o != nil && o.CatalogName != nil {
		return true
	}

	return false
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) SetCatalogName(v string) {
	o.CatalogName = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) Redact() {
	o.recurseRedact(&o.Kind)
	o.recurseRedact(o.WorkspaceEndpoint)
	o.recurseRedact(o.CatalogName)
	o.recurseRedact(o.ClientId)
	o.recurseRedact(o.ClientSecret)
}

func (o *TableflowV1CatalogIntegrationUnityUpdateSpec) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o TableflowV1CatalogIntegrationUnityUpdateSpec) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o TableflowV1CatalogIntegrationUnityUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if o.WorkspaceEndpoint != nil {
		toSerialize["workspace_endpoint"] = o.WorkspaceEndpoint
	}
	if o.CatalogName != nil {
		toSerialize["catalog_name"] = o.CatalogName
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullableTableflowV1CatalogIntegrationUnityUpdateSpec struct {
	value *TableflowV1CatalogIntegrationUnityUpdateSpec
	isSet bool
}

func (v NullableTableflowV1CatalogIntegrationUnityUpdateSpec) Get() *TableflowV1CatalogIntegrationUnityUpdateSpec {
	return v.value
}

func (v *NullableTableflowV1CatalogIntegrationUnityUpdateSpec) Set(val *TableflowV1CatalogIntegrationUnityUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableTableflowV1CatalogIntegrationUnityUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableTableflowV1CatalogIntegrationUnityUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableflowV1CatalogIntegrationUnityUpdateSpec(val *TableflowV1CatalogIntegrationUnityUpdateSpec) *NullableTableflowV1CatalogIntegrationUnityUpdateSpec {
	return &NullableTableflowV1CatalogIntegrationUnityUpdateSpec{value: val, isSet: true}
}

func (v NullableTableflowV1CatalogIntegrationUnityUpdateSpec) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullableTableflowV1CatalogIntegrationUnityUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
