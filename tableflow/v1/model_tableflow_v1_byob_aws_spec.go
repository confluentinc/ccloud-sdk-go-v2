// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Tableflow Management API

Tableflow Management API

API version: 0.0.1
Contact: cts-team@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// TableflowV1ByobAwsSpec The Tableflow storage config for BYOB enabled topic in AWS
type TableflowV1ByobAwsSpec struct {
	// The storage type
	Kind string `json:"kind,omitempty"`
	// Bucket name
	BucketName string `json:"bucket_name,omitempty"`
	// Bucket region
	BucketRegion *string `json:"bucket_region,omitempty"`
	// The provider integration id
	ProviderIntegrationId string `json:"provider_integration_id,omitempty"`
	// The current storage path where the data and metadata is stored for this table
	TablePath *string `json:"table_path,omitempty"`
}

// NewTableflowV1ByobAwsSpec instantiates a new TableflowV1ByobAwsSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableflowV1ByobAwsSpec(kind string, bucketName string, providerIntegrationId string) *TableflowV1ByobAwsSpec {
	this := TableflowV1ByobAwsSpec{}
	this.Kind = kind
	this.BucketName = bucketName
	this.ProviderIntegrationId = providerIntegrationId
	return &this
}

// NewTableflowV1ByobAwsSpecWithDefaults instantiates a new TableflowV1ByobAwsSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableflowV1ByobAwsSpecWithDefaults() *TableflowV1ByobAwsSpec {
	this := TableflowV1ByobAwsSpec{}
	return &this
}

// GetKind returns the Kind field value
func (o *TableflowV1ByobAwsSpec) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *TableflowV1ByobAwsSpec) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *TableflowV1ByobAwsSpec) SetKind(v string) {
	o.Kind = v
}

// GetBucketName returns the BucketName field value
func (o *TableflowV1ByobAwsSpec) GetBucketName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
func (o *TableflowV1ByobAwsSpec) GetBucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketName, true
}

// SetBucketName sets field value
func (o *TableflowV1ByobAwsSpec) SetBucketName(v string) {
	o.BucketName = v
}

// GetBucketRegion returns the BucketRegion field value if set, zero value otherwise.
func (o *TableflowV1ByobAwsSpec) GetBucketRegion() string {
	if o == nil || o.BucketRegion == nil {
		var ret string
		return ret
	}
	return *o.BucketRegion
}

// GetBucketRegionOk returns a tuple with the BucketRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableflowV1ByobAwsSpec) GetBucketRegionOk() (*string, bool) {
	if o == nil || o.BucketRegion == nil {
		return nil, false
	}
	return o.BucketRegion, true
}

// HasBucketRegion returns a boolean if a field has been set.
func (o *TableflowV1ByobAwsSpec) HasBucketRegion() bool {
	if o != nil && o.BucketRegion != nil {
		return true
	}

	return false
}

// SetBucketRegion gets a reference to the given string and assigns it to the BucketRegion field.
func (o *TableflowV1ByobAwsSpec) SetBucketRegion(v string) {
	o.BucketRegion = &v
}

// GetProviderIntegrationId returns the ProviderIntegrationId field value
func (o *TableflowV1ByobAwsSpec) GetProviderIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderIntegrationId
}

// GetProviderIntegrationIdOk returns a tuple with the ProviderIntegrationId field value
// and a boolean to check if the value has been set.
func (o *TableflowV1ByobAwsSpec) GetProviderIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderIntegrationId, true
}

// SetProviderIntegrationId sets field value
func (o *TableflowV1ByobAwsSpec) SetProviderIntegrationId(v string) {
	o.ProviderIntegrationId = v
}

// GetTablePath returns the TablePath field value if set, zero value otherwise.
func (o *TableflowV1ByobAwsSpec) GetTablePath() string {
	if o == nil || o.TablePath == nil {
		var ret string
		return ret
	}
	return *o.TablePath
}

// GetTablePathOk returns a tuple with the TablePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableflowV1ByobAwsSpec) GetTablePathOk() (*string, bool) {
	if o == nil || o.TablePath == nil {
		return nil, false
	}
	return o.TablePath, true
}

// HasTablePath returns a boolean if a field has been set.
func (o *TableflowV1ByobAwsSpec) HasTablePath() bool {
	if o != nil && o.TablePath != nil {
		return true
	}

	return false
}

// SetTablePath gets a reference to the given string and assigns it to the TablePath field.
func (o *TableflowV1ByobAwsSpec) SetTablePath(v string) {
	o.TablePath = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *TableflowV1ByobAwsSpec) Redact() {
	o.recurseRedact(&o.Kind)
	o.recurseRedact(&o.BucketName)
	o.recurseRedact(o.BucketRegion)
	o.recurseRedact(&o.ProviderIntegrationId)
	o.recurseRedact(o.TablePath)
}

func (o *TableflowV1ByobAwsSpec) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o TableflowV1ByobAwsSpec) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o TableflowV1ByobAwsSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["bucket_name"] = o.BucketName
	}
	if o.BucketRegion != nil {
		toSerialize["bucket_region"] = o.BucketRegion
	}
	if true {
		toSerialize["provider_integration_id"] = o.ProviderIntegrationId
	}
	if o.TablePath != nil {
		toSerialize["table_path"] = o.TablePath
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullableTableflowV1ByobAwsSpec struct {
	value *TableflowV1ByobAwsSpec
	isSet bool
}

func (v NullableTableflowV1ByobAwsSpec) Get() *TableflowV1ByobAwsSpec {
	return v.value
}

func (v *NullableTableflowV1ByobAwsSpec) Set(val *TableflowV1ByobAwsSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableTableflowV1ByobAwsSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableTableflowV1ByobAwsSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableflowV1ByobAwsSpec(val *TableflowV1ByobAwsSpec) *NullableTableflowV1ByobAwsSpec {
	return &NullableTableflowV1ByobAwsSpec{value: val, isSet: true}
}

func (v NullableTableflowV1ByobAwsSpec) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullableTableflowV1ByobAwsSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
